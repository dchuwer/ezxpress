{"version":3,"sources":["webpack:///./AuthInterceptor.ts","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/MotoBoy.ts","webpack:///./src/app/Order.ts","webpack:///./src/app/about-us/about-us.component.css","webpack:///./src/app/about-us/about-us.component.html","webpack:///./src/app/about-us/about-us.component.ts","webpack:///./src/app/add-motoboy/add-motoboy.component.css","webpack:///./src/app/add-motoboy/add-motoboy.component.html","webpack:///./src/app/add-motoboy/add-motoboy.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/customer.service.ts","webpack:///./src/app/customer.ts","webpack:///./src/app/delivery/delivery.component.css","webpack:///./src/app/delivery/delivery.component.html","webpack:///./src/app/delivery/delivery.component.ts","webpack:///./src/app/destination/destination.component.css","webpack:///./src/app/destination/destination.component.html","webpack:///./src/app/destination/destination.component.ts","webpack:///./src/app/edit-customer/edit-customer.component.css","webpack:///./src/app/edit-customer/edit-customer.component.html","webpack:///./src/app/edit-customer/edit-customer.component.ts","webpack:///./src/app/edit-moto/edit-moto.component.css","webpack:///./src/app/edit-moto/edit-moto.component.html","webpack:///./src/app/edit-moto/edit-moto.component.ts","webpack:///./src/app/ezxpress.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/maproute/maproute.component.css","webpack:///./src/app/maproute/maproute.component.html","webpack:///./src/app/maproute/maproute.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/moto-share-live-location/moto-share-live-location.component.css","webpack:///./src/app/moto-share-live-location/moto-share-live-location.component.html","webpack:///./src/app/moto-share-live-location/moto-share-live-location.component.ts","webpack:///./src/app/moto.service.ts","webpack:///./src/app/msgsnack/msgsnack.component.css","webpack:///./src/app/msgsnack/msgsnack.component.html","webpack:///./src/app/msgsnack/msgsnack.component.ts","webpack:///./src/app/newclient/newclient.component.css","webpack:///./src/app/newclient/newclient.component.html","webpack:///./src/app/newclient/newclient.component.ts","webpack:///./src/app/order-dialog/order-dialog.component.css","webpack:///./src/app/order-dialog/order-dialog.component.html","webpack:///./src/app/order-dialog/order-dialog.component.ts","webpack:///./src/app/order-screen/order-screen.component.css","webpack:///./src/app/order-screen/order-screen.component.html","webpack:///./src/app/order-screen/order-screen.component.ts","webpack:///./src/app/orderdelivered/orderdelivered.component.css","webpack:///./src/app/orderdelivered/orderdelivered.component.html","webpack:///./src/app/orderdelivered/orderdelivered.component.ts","webpack:///./src/app/orders.service.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/signature/signature.component.css","webpack:///./src/app/signature/signature.component.html","webpack:///./src/app/signature/signature.component.ts","webpack:///./src/app/stars/stars.component.css","webpack:///./src/app/stars/stars.component.html","webpack:///./src/app/stars/stars.component.ts","webpack:///./src/app/stepper/stepper.component.css","webpack:///./src/app/stepper/stepper.component.html","webpack:///./src/app/stepper/stepper.component.ts","webpack:///./src/app/table/table.component.css","webpack:///./src/app/table/table.component.html","webpack:///./src/app/table/table.component.ts","webpack:///./src/app/user-connected/user-connected.component.css","webpack:///./src/app/user-connected/user-connected.component.html","webpack:///./src/app/user-connected/user-connected.component.ts","webpack:///./src/app/user.ts","webpack:///./src/app/users.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAA2C;AAOzC;IAAA;IAmBA,CAAC;IAjBG,mCAAS,GAAT,UAAU,GAAqB,EACrB,IAAiB;QAEvB,IAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE9C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACV,IAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC;gBACrB,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EACpC,SAAS,GAAG,OAAO,CAAC;aAC3B,CAAC,CAAC;YAEH,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC;IACL,CAAC;IAlBQ,eAAe;QAD3B,gEAAU,EAAE;OACA,eAAe,CAmB3B;IAAD,sBAAC;CAAA;AAnB2B;;;;;;;;;;;;ACP9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E;;;;;;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;ACVA;AAAA;IAeI;QAEI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAE;QAClB,IAAI,CAAC,IAAI,GAAG,8DAA8D;IAE9E,CAAC;IACL,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACxBD;AAAA;IA0BI;IAAe,CAAC;IAEpB,YAAC;AAAD,CAAC;;;;;;;;;;;;;AC5BD,qBAAqB,2BAA2B,uBAAuB,gCAAgC,OAAO,UAAU,2BAA2B,qBAAqB,gCAAgC,OAAO,aAAa,yBAAyB,OAAO,oBAAoB,0BAA0B,oBAAoB,qBAAqB,oCAAoC,gMAAgM,2HAA2H,qCAAqC,wBAAwB,6BAA6B,6BAA6B,4BAA4B,2BAA2B,OAAO,cAAc,0BAA0B,4BAA4B,gBAAgB,0BAA0B,oBAAoB,qBAAqB,2BAA2B,iCAAiC,2BAA2B,2CAA2C,gDAAgD,mDAAmD,uBAAuB,wCAAwC,qBAAqB,0BAA0B,oBAAoB,qBAAqB,2BAA2B,iCAAiC,2BAA2B,OAAO,iBAAiB,kCAAkC,oBAAoB,oBAAoB,sCAAsC,qCAAqC,uCAAuC,wCAAwC,2BAA2B,OAAO,kBAAkB,kCAAkC,oBAAoB,oBAAoB,sCAAsC,qCAAqC,uCAAuC,wCAAwC,2BAA2B,OAAO,eAAe,0BAA0B,kBAAkB,qBAAqB,2BAA2B,sBAAsB,OAAO,uBAAuB,qBAAqB,0BAA0B,oBAAoB,mBAAmB,2BAA2B,0BAA0B,OAAO,sBAAsB,qBAAqB,0BAA0B,oBAAoB,mBAAmB,2BAA2B,0BAA0B,yCAAyC,yCAAyC,sCAAsC,OAAO,gBAAgB,kCAAkC,oBAAoB,mBAAmB,2BAA2B,wBAAwB,gCAAgC,qCAAqC,wCAAwC,OAAO,gBAAgB,0BAA0B,oBAAoB,qBAAqB,2BAA2B,iCAAiC,2BAA2B,4CAA4C,gDAAgD,mDAAmD,eAAe,kBAAkB,0BAA0B,mBAAmB,oBAAoB,2BAA2B,2BAA2B,2BAA2B,OAAO,0BAA0B,qBAAqB,0BAA0B,mBAAmB,oBAAoB,2BAA2B,2BAA2B,0BAA0B,OAAO,yBAAyB,qBAAqB,0BAA0B,yCAAyC,4CAA4C,6CAA6C,kBAAkB,oBAAoB,gCAAgC,qCAAqC,wCAAwC,gCAAgC,eAAe,0BAA0B,mBAAmB,oBAAoB,2BAA2B,2BAA2B,iCAAiC,YAAY,0BAA0B,kBAAkB,qBAAqB,0BAA0B,2BAA2B,iCAAiC,6BAA6B,gCAAgC,qCAAqC,wCAAwC,OAAO,YAAY,0BAA0B,kBAAkB,qBAAqB,0BAA0B,2BAA2B,iCAAiC,6BAA6B,iCAAiC,sCAAsC,yCAAyC,OAAO,YAAY,0BAA0B,kBAAkB,qBAAqB,0BAA0B,2BAA2B,iCAAiC,6BAA6B,kCAAkC,uCAAuC,0CAA0C,OAAO,YAAY,0BAA0B,kBAAkB,qBAAqB,0BAA0B,2BAA2B,iCAAiC,6BAA6B,iCAAiC,sCAAsC,yCAAyC,OAAO,YAAY,0BAA0B,kBAAkB,qBAAqB,0BAA0B,2BAA2B,iCAAiC,6BAA6B,gCAAgC,qCAAqC,wCAAwC,OAAO,gBAAgB,0BAA0B,mBAAmB,oBAAoB,2BAA2B,2BAA2B,iCAAiC,cAAc,0BAA0B,mBAAmB,oBAAoB,oCAAoC,qCAAqC,sCAAsC,wCAAwC,iCAAiC,iBAAiB,0BAA0B,mBAAmB,oBAAoB,2BAA2B,2BAA2B,iCAAiC,iCAAiC,aAAa,kCAAkC,mBAAmB,oBAAoB,2BAA2B,2BAA2B,2BAA2B,kCAAkC,2CAA2C,gDAAgD,mDAAmD,OAAO,qBAAqB,qBAAqB,0BAA0B,kBAAkB,oBAAoB,2BAA2B,wBAAwB,kCAAkC,sCAAsC,yCAAyC,OAAO,oBAAoB,qBAAqB,sBAAsB,mBAAmB,oBAAoB,2BAA2B,2BAA2B,qCAAqC,+BAA+B,cAAc,kCAAkC,kBAAkB,oBAAoB,2BAA2B,2BAA2B,kCAAkC,wCAAwC,2CAA2C,0CAA0C,sCAAsC,yCAAyC,2CAA2C,gDAAgD,mDAAmD,OAAO,sBAAsB,qBAAqB,sBAAsB,mBAAmB,oBAAoB,2BAA2B,2BAA2B,qCAAqC,0BAA0B,OAAO,gDAAgD,0BAA0B,mBAAmB,oBAAoB,2BAA2B,yBAAyB,sCAAsC,iBAAiB,eAAe,0BAA0B,wCAAwC,6CAA6C,gDAAgD,eAAe,gBAAgB,0BAA0B,4BAA4B,iCAAiC,oCAAoC,2CAA2C,+CAA+C,kDAAkD,OAAO,gBAAgB,0BAA0B,4BAA4B,iCAAiC,oCAAoC,0CAA0C,+CAA+C,kDAAkD,eAAe,gBAAgB,0BAA0B,4BAA4B,iCAAiC,oCAAoC,0CAA0C,+CAA+C,kDAAkD,OAAO,iBAAiB,0BAA0B,4BAA4B,iCAAiC,oCAAoC,4CAA4C,gDAAgD,mDAAmD,eAAe,yFAAyF,qBAAqB,0BAA0B,mBAAmB,oBAAoB,2BAA2B,yBAAyB,yBAAyB,oCAAoC,wCAAwC,QAAQ,oFAAoF,qBAAqB,0BAA0B,mBAAmB,oBAAoB,2BAA2B,yBAAyB,wBAAwB,oCAAoC,uCAAuC,QAAQ,0BAA0B,0BAA0B,oBAAoB,oBAAoB,2BAA2B,2BAA2B,sDAAsD,kDAAkD,qDAAqD,OAAO,gBAAgB,4BAA4B,iBAAiB,2BAA2B,yBAAyB,WAAW,uBAAuB,oCAAoC,wCAAwC,aAAa,yBAAyB,sCAAsC,0CAA0C,OAAO,iCAAiC,WAAW,uBAAuB,oCAAoC,wCAAwC,aAAa,yBAAyB,sCAAsC,0CAA0C,OAAO,sBAAsB,WAAW,oBAAoB,aAAa,oBAAoB,eAAe,8BAA8B,WAAW,oBAAoB,aAAa,oBAAoB,eAAe,uBAAuB,WAAW,oBAAoB,aAAa,oBAAoB,SAAS,+BAA+B,WAAW,oBAAoB,aAAa,oBAAoB,SAAS,uBAAuB,WAAW,oBAAoB,aAAa,oBAAoB,QAAQ,+BAA+B,WAAW,oBAAoB,aAAa,oBAAoB,QAAQ,uBAAuB,WAAW,qBAAqB,aAAa,oBAAoB,QAAQ,+BAA+B,WAAW,qBAAqB,aAAa,oBAAoB,QAAQ,wBAAwB,WAAW,qBAAqB,aAAa,oBAAoB,SAAS,gCAAgC,WAAW,qBAAqB,aAAa,oBAAoB,SAAS,gCAAgC,WAAW,mBAAmB,gCAAgC,oCAAoC,aAAa,oBAAoB,iCAAiC,qCAAqC,UAAU,wBAAwB,WAAW,mBAAmB,gCAAgC,oCAAoC,aAAa,oBAAoB,iCAAiC,qCAAqC,UAAU,C;;;;;;;;;;;ACAjzY,wuD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IALU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;ACP7B,wBAAwB,oBAAoB,0BAA0B,KAAK,aAAa,oBAAoB,0BAA0B,KAAK,4BAA4B,sBAAsB,+BAA+B,mBAAmB,wBAAwB,2BAA2B,OAAO,gCAAgC,mBAAmB,OAAO,cAAc,qBAAqB,yBAAyB,wBAAwB,2BAA2B,OAAO,cAAc,qBAAqB,KAAK,gBAAgB,gBAAgB,OAAO,eAAe,kBAAkB,OAAO,WAAW,2BAA2B,wBAAwB,KAAK,mBAAmB,oBAAoB,SAAS,K;;;;;;;;;;;ACAnsB,46CAA46C,wCAAwC,+TAA+T,wCAAwC,qzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzwD;AACL;AACT;AACR;AACiB;AACC;AAO9C;IAKE,6BAAoB,WAAwB,EAAU,WAAyB,EAAU,WAAwB;QAA7F,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAc;QAAU,gBAAW,GAAX,WAAW,CAAa;QAJjH,gBAAW,GAAG,EAAE,CAAC;QACjB,YAAO,GAAa,IAAI,gDAAO,EAAE,CAAC;QAClC,SAAI,GAAU,IAAI,0CAAI,EAAE,CAAC;IAE4F,CAAC;IAEtH,yCAAW,GAAX,UAAY,KAAK;QAEf,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACxC,gDAAgD;IAElD,CAAC;IAED,2CAAa,GAAb;QAAA,iBAcC;QAZC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,SAAS,CAAC,iBAAO;YACrD,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAC,CAAC;QAClF,CAAC,CAAC;IAQJ,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IA/BU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAMiC,yDAAW,EAAuB,2DAAY,EAAuB,yDAAW;OALtG,mBAAmB,CAiC/B;IAAD,0BAAC;CAAA;AAjC+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZS;AACc;AACD;AACe;AACI;AACR;AACR;AACA;AACM;AACK;AACY;AACvB;AACQ;AAGjE,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE;IACtC,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,iFAAkB,EAAE;IACvD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sFAAmB,EAAE;IACvD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,8EAAiB,EAAE;IACtD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC5C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAC;IAC/C,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,gFAAiB,EAAC;IACtD,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,6FAAqB,EAAC;IAC9D,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,sEAAc,EAAE;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,8EAAgB,EAAE;CAKjD,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACtC7B,yBAAyB,qCAAqC,2BAA2B,4BAA4B,oBAAoB,KAAK,eAAe,yBAAyB,KAAK,qBAAqB,qBAAqB,KAAK,UAAU,yDAAyD,SAAS,C;;;;;;;;;;;ACAtT,wH;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACL;AAQ7C;IAGE,sBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,UAAK,GAAG,UAAU,CAAC;IAInB,CAAC;IACD,+BAAQ,GAAR;QACF,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IAC5B,CAAC;IARU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAIiC,yDAAW;OAHjC,YAAY,CAWxB;IAAD,mBAAC;CAAA;AAXwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACyB;AACa;AAC2B;AACvD;AACe;AACxB;AACQ;AACW;AACL;AACW;AACQ;AACpB;AACA;AACA;AACJ;AACE;AACI;AACL;AACO;AACiB;AACd;AAEf;AACM;AACqB;AACvB;AACkB;AACf;AACY;AACrB;AAC8B;AACT;AAC6C;AACtD;AACA;AACoB;AAC5B;AACc;AACM;AACe;AAC3B;AACW;AACY;AACH;AACM;AAC1B;AACF;AACQ;AACJ;AACd;AACS;AACE;AACF;AACY;AACD;AAmFjE;IAAA;IAAyB,CAAC;IAAb,SAAS;QA9ErB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,uFAAmB;gBACnB,gEAAY;gBACZ,kFAAkB;gBAClB,mEAAa;gBACb,+EAAiB;gBACjB,wFAAoB;gBACpB,+EAAiB;gBACjB,4HAA8B;gBAC9B,sEAAc;gBACd,0FAAoB;gBACpB,4EAAgB;gBAChB,kFAAkB;gBAClB,iGAAuB;gBACvB,sEAAc;gBACd,iFAAiB;gBACjB,6FAAqB;gBACrB,0FAAoB;gBACpB,gGAAsB;gBACtB,sEAAc;gBACd,4EAAgB;gBAChB,mEAAa;gBACb,+EAAiB;gBACjB,8EAAgB;aAKjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,+EAAkB;gBAClB,4FAAuB;gBACvB,iEAAe;gBACf,mEAAiB;gBACjB,gEAAc;gBACd,qEAAa;gBACb,qEAAa;gBACb,0EAAgB;gBAChB,0DAAW;gBACX,qEAAa;gBACb,uDAAa,CAAC,OAAO,CAAC;oBACpB,MAAM,EAAE,yCAAyC;oBACjD,SAAS,EAAE,CAAC,QAAQ,CAAC;iBACtB,CAAC;gBACF,gEAAkB;gBAClB,sEAAgB;gBAChB,0EAAgB;gBAChB,qEAAgB;gBAChB,qEAAgB;gBAChB,iFAAiB;gBACjB,gEAAc;gBACd,qEAAa;gBACb,yEAAe;gBACf,oEAAgB;gBAChB,kEAAgB;gBAChB,yEAAkB;gBAClB,4FAAwB;gBACxB,kEAAmB;gBACnB,iEAAe;gBACf,uEAAc;gBACd,2EAAgB;gBAChB,8EAAiB;aAIlB;YACD,eAAe,EAAE,CAAC,0FAAoB,EAAE,0FAAoB,CAAC;YAC7D,SAAS,EAAE,CAAC,kEAAe,EAAE,0DAAW,EAAE,8DAAa,EAAE,0DAAW,EAAE,oEAAgB;gBACpF;oBACE,OAAO,EAAE,uEAAiB;oBAC1B,QAAQ,EAAE,iEAAe;oBACzB,KAAK,EAAE,IAAI;iBACZ,CAAC;YACJ,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3IqB;AACO;AACT;AACE;AACb;AACuB;AACR;AAI7C;IAUE,qBAAoB,IAAgB,EAAU,MAAc,EAAU,eAAgC,EAAU,WAAwB;QAApH,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;QANxI,SAAI,GAAG,IAAI,0CAAI,CAAC;QAGT,eAAU,GAAoB,IAAI,4CAAO,EAAU,CAAC;QAEpD,gBAAW,GAAiB,IAAI,4CAAO,EAAO,CAAC;QAGpD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAErD,CAAC;IAID,2BAAK,GAAL,UAAM,IAAI;QAAV,iBAYC;QAXC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,QAAQ,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;YAElD,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC;YAC3C,KAAI,CAAC,UAAU,EAAE,CAAC;YAClB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;QAC5B,CAAC,EACC,UAAC,GAAG;YAEF,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC;QACvC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gCAAU,GAAV;QAAA,iBAKC;QAJC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,cAAc,CAAC,CAAC,SAAS,CAAC,cAAI;YAChD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAErB,CAAC,CAAC;IACJ,CAAC;IAED,4BAAM,GAAN;QACE,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;QAE3B,mCAAmC;QACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC;IAGD,6BAAO,GAAP,UAAQ,IAAU;QAAlB,iBAsBC;QArBC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,SAAS,CAAC,UAAC,QAAQ;gBAC/D,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;gBAC5B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAC/B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1B,CAAC,CAAC;YACF,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAClD,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAE7B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,SAAS,CAAC,UAAC,OAAO;gBACtD,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC;gBAC3B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAE5B,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;IAE1C,CAAC;IAxEU,WAAW;QADvB,gEAAU,EAAE;yCAWe,+DAAU,EAAkB,sDAAM,EAA2B,iEAAe,EAAuB,yDAAW;OAV7H,WAAW,CA0EvB;IAAD,kBAAC;CAAA;AA1EuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVmB;AACC;AACM;AACZ;AACK;AACG;AAM9C;IAUE,yBAAqB,WAAwB,EAAU,IAAgB,EAC9D,QAAqB;QADT,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAC9D,aAAQ,GAAR,QAAQ,CAAa;QAT9B,gBAAW,GAAG,IAAI,kDAAQ,EAAE,CAAC;QAE7B,oBAAe,GAAa,IAAI,kDAAQ,EAAE,CAAC;QAInC,0BAAqB,GAAsB,IAAI,4CAAO,EAAY,CAAC;QAIzE,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;IAC5E,CAAC;IAED,sCAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,eAAe,CAAC,CAAC,SAAS,CAAC,cAAI;YACvD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC;IACL,CAAC;IAED,qCAAW,GAAX,UAAY,EAAE;QAAd,iBAOC;QANC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,uBAAuB,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/B,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,eAAe,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QACjB,CAAC,CAAC;IACL,CAAC;IAED,sCAAY,GAAZ,UAAa,SAAoB;QAAjC,iBAgBC;QAdC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,kBAAkB,EAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;YACnE,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,KAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;YACnD,KAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ;YAElD,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,CAAC;YACrD,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE;gBACzC,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;QAIJ,CAAC,CAAC;IAEL,CAAC;IAGD,uCAAa,GAAb,UAAc,eAAe;QAA7B,iBAMC;QALC,IAAI,EAAE,GAAG,eAAe,CAAC,UAAU;QACnC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,sBAAsB,GAAG,EAAE,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACjG,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC,CAAC;IACJ,CAAC;IAED,wCAAc,GAAd,UAAe,eAAe;QAA9B,iBASC;QARC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAI,EAAE,GAAG,eAAe,CAAC,UAAU;QACnC,eAAe,CAAC,MAAM,GAAE,KAAK,CAAE;QAC/B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,sBAAsB,GAAG,EAAE,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACjG,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAExC,CAAC,CAAC;IACJ,CAAC;IACD,0BAA0B;IAC1B,kDAAkD;IAClD,uDAAuD;IACvD,OAAO;IACP,sBAAsB;IACtB,IAAI;IAIJ,qCAAqC;IACrC,qBAAqB;IACrB,uCAAuC;IACvC,4GAA4G;IAC5G,8BAA8B;IAC9B,mCAAmC;IACnC,6CAA6C;IAE7C,OAAO;IACP,IAAI;IAEN,4BAA4B;IAC5B,iCAAiC;IACjC,6DAA6D;IAC7D,kEAAkE;IAClE,oEAAoE;IACpE,4FAA4F;IAC5F,mDAAmD;IAEnD,SAAS;IACT,UAAU;IACV,IAAI;IAEF,qCAAqC;IACrC,mEAAmE;IACnE,8BAA8B;IAC9B,+DAA+D;IAC/D,gFAAgF;IAChF,iFAAiF;IACjF,iDAAiD;IACjD,OAAO;IACP,IAAI;IAEJ,wCAAc,GAAd,UAAe,GAAG,EAAE,GAAG;QACrB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC5C,CAAC;IA/GU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAWkC,yDAAW,EAAgB,+DAAU;YACpD,6DAAW;OAXnB,eAAe,CAiH3B;IAAD,sBAAC;CAAA;AAjH2B;;;;;;;;;;;;;;ACX5B;AAAA;IAYI;IAEA,CAAC;IAIL,eAAC;AAAD,CAAC;;;;;;;;;;;;;AClBD,8BAA8B,oBAAoB,oBAAoB,KAAK,SAAS,qBAAqB,oBAAoB,KAAK,sBAAsB,qBAAqB,wBAAwB,yBAAyB,aAAa,oBAAoB,qBAAqB,uBAAuB,KAAK,oCAAoC,qBAAqB,KAAK,qBAAqB,sBAAsB,yBAAyB,iBAAiB,aAAa,SAAS,EAAE,kBAAkB,yBAAyB,sBAAsB,KAAK,aAAa,wBAAwB,KAAK,kBAAkB,4CAA4C,2DAA2D,6CAA6C,wBAAwB,0CAA0C,qCAAqC,OAAO,gCAAgC,oEAAoE,OAAO,OAAO,wBAAwB,OAAO,MAAM,wBAAwB,OAAO,C;;;;;;;;;;;ACArhC,68DAA68D,QAAQ,iCAAiC,+BAA+B,8Y;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAr8D;AAC/C;AACiC;AACzB;AACS;AACJ;AACgC;AAChC;AAEA;AAEb;AAQjC;IAYE,2BAAoB,YAA4B,EAAU,WAAwB,EACvE,aAA4B,EAAU,MAAc,EACrD,MAAiB,EAAU,WAAwB;QAF7D,iBAcC;QAdmB,iBAAY,GAAZ,YAAY,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QACvE,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QACrD,WAAM,GAAN,MAAM,CAAW;QAAU,gBAAW,GAAX,WAAW,CAAa;QAP7D,cAAS,GAAY,KAAK,CAAC;QAC3B,UAAK,GAAG,SAAS,CAAC;QAClB,SAAI,GAAG,aAAa,CAAC;QACrB,UAAK,GAAG,EAAE,CAAC;QAOT,IAAI,CAAC,KAAK,GAAG,IAAI,4CAAK,EAAE,CAAC;QAEzB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAE,UAAC,IAAI;YAC9C,KAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAC5C,KAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,IAAI,CAAC,GAAG,CAAC;YAC5C,KAAI,CAAC,KAAK,CAAC,sBAAsB,GAAG,IAAI,CAAC,GAAG,CAAC;QAG7C,CAAC,CAAC;IACN,CAAC;IAED,oCAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC;IAClC,CAAC;IAED,yCAAa,GAAb;QAAA,iBA6BC;QA5BC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC;QAC3G,IAAI,WAAW,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC;QACzG,IAAI,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO;QAC9C,IAAI,iBAAiB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAE5D,IAAI,iBAAiB,GAAG;YACtB,MAAM,EAAE,YAAY;YACpB,WAAW,EAAE,WAAW;YACxB,UAAU,EAAE,SAAS;YACrB,aAAa,EAAE,IAAI;SACpB;QACD,iBAAiB,CAAC,KAAK,CAAC,iBAAiB,EAAE,UAAC,MAAM,EAAE,MAAM;YACxD,uBAAuB;YAErB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,GAAC,IAAI;YACxD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC;YAEtB,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,YAAY,IAAI,UAAU,CAAC;gBACvC,IAAI,SAAS,GAAG,CAAC;YACpB,IAAI;gBACD,IAAI,SAAS,GAAG,CAAC;YACpB,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,IAAI,CAAC,CAAC;gBAAC,KAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE;YACzC,IAAI;gBACD,KAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;YAC9C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,kCAAkC;QACtC,CAAC,CAAC;IACJ,CAAC;IAED,wCAAY,GAAZ;QAAA,iBAgBC;QAdC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC;QACvB,mCAAM,EAAE,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC;QAAA,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QACjE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;QAEzC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAoB,EAAE;YACrD,KAAK,EAAE,OAAO;SAEf,CAAC;QAEF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAE,gBAAM;YACvC,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAI,CAAC,KAAK,CAAC,qBAAqB,EAAC,KAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC;QAEpG,CAAC,CAAC,CAAC;IACL,CAAC;IAOD,oCAAQ,GAAR;QAAA,iBA4BC;QA3BC,oBAAoB;QACxB,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC;QAChE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,IAAI;YAC1C,KAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAC1C,CAAC,CAAC;QAEE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,IAAI,CAAE;YAEhC,IAAI,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,EAAE,EAAC,KAAK,EAAC,CAAC,SAAS,CAAC,EAAC,CAAC;YAC7G,YAAY,CAAC,WAAW,CAAC,eAAe,EAAE;gBACxC,KAAI,CAAC,MAAM,CAAC,GAAG,CAAE;oBACf,IAAI,KAAK,GAAoC,YAAY,CAAC,QAAQ,EAAE,CAAC;oBACrE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,EAAC;wBAC3D,MAAM;oBACR,CAAC;oBACD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;oBAClB,KAAI,CAAC,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,iBAAiB;oBAEjD,+GAA+G;oBAC/G,KAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;oBACjE,KAAI,CAAC,KAAK,CAAC,sBAAsB,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;gBAGpE,CAAC,CAAC;YACJ,CAAC,CAAC;QACJ,CAAC,CAAC;IAEF,CAAC;IAjHoB;QAApB,+DAAS,CAAC,QAAQ,CAAC;kCAAuB,wDAAU;4DAAC;IACxB;QAA7B,+DAAS,CAAC,8EAAiB,CAAC;kCAAW,8EAAiB;uDAAC;IAF/C,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAamC,6DAAa,EAAuB,yDAAW;YACxD,uDAAa,EAAkB,oDAAM;YAC7C,2DAAS,EAAuB,yDAAW;OAdlD,iBAAiB,CAqH7B;IAAD,wBAAC;CAAA;AArH6B;;;;;;;;;;;;ACnB9B,kDAAkD,qBAAqB,KAAK,C;;;;;;;;;;;ACA5E,2c;;;;;;;;;;;;;;;;;;;;;;;;;;ACAiF;AACxC;AAIyB;AAOlE;IAKE,8BAAoB,iBAAoC,EAAU,aAA4B,EAAU,MAAc;QAAlG,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QACpH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK;QACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IACzB,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,IAAI,CAAE;YAE9B,IAAI,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,EAAC,KAAK,EAAC,CAAC,SAAS,CAAC,EAAC,CAAC;YACjH,YAAY,CAAC,WAAW,CAAC,eAAe,EAAE;gBACxC,KAAI,CAAC,MAAM,CAAC,GAAG,CAAE;oBACf,IAAI,KAAK,GAAoC,YAAY,CAAC,QAAQ,EAAE,CAAC;oBACrE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,EAAC;wBAC3D,MAAM;oBACR,CAAC;oBACD,KAAI,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,iBAAiB;oBAChD,KAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;oBAC/D,KAAI,CAAC,KAAK,CAAC,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;gBAGlE,CAAC,CAAC;YACJ,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IA1BwB;QAAxB,+DAAS,CAAC,YAAY,CAAC;kCAA2B,wDAAU;mEAAC;IAFnD,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAMuC,8EAAiB,EAAyB,uDAAa,EAAkB,oDAAM;OAL3G,oBAAoB,CA8BhC;IAAD,2BAAC;CAAA;AA9BgC;;;;;;;;;;;;ACZjC,wBAAwB,sBAAsB,4BAA4B,OAAO,iBAAiB,sBAAsB,4BAA4B,OAAO,gCAAgC,wBAAwB,iCAAiC,qBAAqB,0BAA0B,6BAA6B,SAAS,oCAAoC,sBAAsB,SAAS,kBAAkB,uBAAuB,2BAA2B,0BAA0B,6BAA6B,SAAS,kBAAkB,uBAAuB,OAAO,oBAAoB,kBAAkB,SAAS,mBAAmB,oBAAoB,SAAS,eAAe,6BAA6B,0BAA0B,OAAO,uBAAuB,sBAAsB,aAAa,C;;;;;;;;;;;ACAtyB,y9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACX;AACe;AAC1B;AACiB;AAS7C;IAKE,+BAAoB,eAAgC,EAAU,WAAyB;QAAnE,oBAAe,GAAf,eAAe,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAc;QAHvF,SAAI,GAAU,IAAI,0CAAI,EAAE,CAAC;QACzB,iBAAY,GAAa,IAAI,kDAAQ,EAAE,CAAC;QACxC,aAAQ,GAAG,EAAE,CAAE;IAC4E,CAAC;IAE5F,wCAAQ,GAAR;QAAA,iBAMC;QALG,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,SAAS,CAAC,UAAC,IAAI;YAC7D,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC;QAC/B,CAAC,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,0CAAU,GAAV;QACI,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;IAlBU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAMqC,iEAAe,EAAuB,2DAAY;OAL5E,qBAAqB,CAoBjC;IAAD,4BAAC;CAAA;AApBiC;;;;;;;;;;;;ACblC,wBAAwB,sBAAsB,4BAA4B,OAAO,iBAAiB,sBAAsB,4BAA4B,OAAO,gCAAgC,wBAAwB,iCAAiC,qBAAqB,0BAA0B,6BAA6B,SAAS,oCAAoC,sBAAsB,SAAS,kBAAkB,uBAAuB,2BAA2B,0BAA0B,6BAA6B,SAAS,kBAAkB,uBAAuB,OAAO,oBAAoB,kBAAkB,SAAS,mBAAmB,oBAAoB,SAAS,eAAe,6BAA6B,0BAA0B,OAAO,uBAAuB,sBAAsB,aAAa,C;;;;;;;;;;;ACAtyB,0rD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACL;AACT;AACR;AACiB;AAO7C;IAKE,2BAAoB,WAAwB,EAAU,WAAyB;QAA3D,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAc;QAH/E,YAAO,GAAa,IAAI,gDAAO,EAAE,CAAC;QAClC,SAAI,GAAU,IAAI,0CAAI,EAAE,CAAC;QACzB,aAAQ,GAAE,EAAE,CAAE;IACqE,CAAC;IAGpF,oCAAQ,GAAR;QAAA,iBAQG;QAPD,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,SAAS,CAAC,UAAC,IAAI;YACnD,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC;QAC3B,CAAC,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAE5B,CAAC;IAED,sCAAU,GAAV;QAEE,EAAE,CAAC,CAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,QAAS,CAAC,EAAC;YACzC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC7C,6BAA6B;YAC7B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC;QACD,IAAI,EAAC;YACL,KAAK,CAAC,yBAAyB,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IA5BQ,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAMiC,yDAAW,EAAuB,2DAAY;OALpE,iBAAiB,CA8B7B;IAAD,wBAAC;CAAA;AA9B6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACXa;AAIO;AAMlD;IAME,yBAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAHnC,YAAO,GAAG,EAAE;QACZ,WAAM,GAAG,EAAE,CAAC;QACZ,UAAK,GAAG,EAAE,CAAE;IAC2B,CAAC;IAExC,oCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,oCAAU,GAAV,UAAW,OAAO;QAChB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAE5B,CAAC;IAGD,qCAAW,GAAX,UAAY,KAAK;QACf,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,eAAe,EAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC1D,gBAAgB;YAChB,oBAAoB;QACtB,CAAC,CAAC;IACJ,CAAC;IAzBU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAOyB,+DAAU;OANxB,eAAe,CA2B3B;IAAD,sBAAC;CAAA;AA3B2B;;;;;;;;;;;;ACV5B,iCAAiC,+BAA+B,KAAK,iBAAiB,oBAAoB,sBAAsB,qBAAqB,qBAAqB,KAAK,yDAAyD,sBAAsB,oBAAoB,uBAAuB,KAAK,mBAAmB,yBAAyB,yBAAyB,wBAAwB,wBAAwB,wBAAwB,yBAAyB,0BAA0B,2BAA2B,KAAK,eAAe,qCAAqC,KAAK,WAAW,2BAA2B,YAAY,WAAW,2BAA2B,YAAY,eAAe,yBAAyB,MAAM,S;;;;;;;;;;;ACAztB,89C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;QADA,YAAO,GAAY,iCAAiC,CAAC;IACrC,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,wBAAwB,oBAAoB,6BAA6B,mBAAmB,iBAAiB,oBAAoB,wBAAwB,MAAM,uBAAuB,oBAAoB,6BAA6B,MAAM,WAAW,mBAAmB,MAAM,OAAO,2BAA2B,wBAAwB,KAAK,WAAW,mBAAmB,uBAAuB,4BAA4B,sBAAsB,sBAAsB,0BAA0B,MAAM,YAAY,mBAAmB,MAAM,YAAY,mBAAmB,UAAU,WAAW,qCAAqC,qCAAqC,OAAO,MAAM,6BAA6B,OAAO,SAAS,gBAAgB,OAAO,S;;;;;;;;;;;ACAjuB,ugBAAugB,wCAAwC,kKAAkK,OAAO,gnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC/pB;AAEN;AACwB;AAKb;AACd;AACF;AAQ9C;IAUE,wBACU,YAAyB,EAC1B,eAA+B,EAC/B,MAAiB,EAChB,MAAa,EACb,WAAyB;QAJzB,iBAAY,GAAZ,YAAY,CAAa;QAC1B,oBAAe,GAAf,eAAe,CAAgB;QAC/B,WAAM,GAAN,MAAM,CAAW;QAChB,WAAM,GAAN,MAAM,CAAO;QACb,gBAAW,GAAX,WAAW,CAAc;QAZnC,YAAO,GAAY,EAAC,KAAK,EAAE,EAAE,EAAC;QAG9B,SAAI,GAAG,IAAI,CAAC;QACZ,aAAQ,GAAG,EAAE,CAAC;QACd,aAAQ,GAAG,EAAE,CAAC;QACd,WAAM,GAAE,CAAC,CAAC;IAON,CAAC;IAEL,iCAAQ,GAAR;QAAA,iBAKC;QAFC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,IAAI;YACzC,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAAC,CAAC,CAAC;IACvB,CAAC;IAED,8BAAK,GAAL;QAEE,IAAI,CAAC,UAAU,GAAG,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAC;QACpE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC;IAEzC,CAAC;IACD,+BAAM,GAAN;QAEE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAE,CAAC,CAAC,EAAC;YAClB,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC;QAChB,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAE,CAAC,CAAC,EAAC;YAClB,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC;QAChB,CAAC;QACD,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,cAAY,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACtE,CAAC;IAED,8BAAK,GAAL;QACE,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IA5CU,cAAc;QAN1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAauB,2DAAY;YACV,iEAAe;YACvB,2DAAS;YACT,sDAAM;YACC,yDAAW;OAfxB,cAAc,CA+C1B;IAAD,qBAAC;CAAA;AA/C0B;;;;;;;;;;;;ACnB3B,2BAA2B,sBAAsB,sBAAsB,aAAa,S;;;;;;;;;;;ACApF,8nB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAgF;AAMlC;AACb;AAcjC;IAsBE,sBAAoB,WAAwB;QAA5C,iBAsBC;QAtBmB,gBAAW,GAAX,WAAW,CAAa;QArBnC,UAAK,GAAU,IAAI,4CAAK,CAAC;QAiBlC,WAAM,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC;QAC1B,gBAAW,GAAG,EAAE,GAAG,EAAG,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC;QAChC,eAAU,GAAG,SAAS;QAIpB,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;QAC7B,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,SAAS,CAAE,cAAI;YAC9C,KAAI,CAAC,QAAQ,GAAG,IAAI;YACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACrB,CAAC,CAAC;QACF,mCAAmC;QACnC,oCAAoC;QAEpC,mCAAmC;QACnC,oCAAoC;QAEpC,mCAAmC;QACnC,oCAAoC;QACpC,uDAAuD;QAEvD,qDAAqD;QACrD,yBAAyB;QACzB,wBAAwB;QACxB,KAAK;IAEP,CAAC;IAGD,sCAAe,GAAf;QAAA,iBAcC;QAZC,EAAE,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,EAAC;YACzB,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,kBAAQ;gBAE/C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACrB,KAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACpC,KAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;gBACrC,KAAI,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,KAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE,GAAG,EAAE,KAAI,CAAC,KAAK,CAAC,sBAAsB,EAAE;gBAC/F,kGAAkG;gBACjG,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,KAAI,CAAC,GAAG,EAAE,KAAI,CAAC,GAAG,CAAC,CAAC;YACrD,CAAC,CAAC;QACN,CAAC;IAEH,CAAC;IAKD,+BAAQ,GAAR;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAnEQ;QAAR,2DAAK,EAAE;kCAAQ,4CAAK;+CAAa;IAEb;QAApB,+DAAS,CAAC,QAAQ,CAAC;kCAAS,wDAAU;gDAAC;IAH7B,YAAY;QARxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;yCA0BiC,yDAAW;OAtBjC,YAAY,CAoFxB;IAAD,mBAAC;CAAA;AApFwB;;;;;;;;;;;;ACrBzB,+BAA+B,sBAAsB,sBAAsB,OAAO,O;;;;;;;;;;;ACAlF,2D;;;;;;;;;;;;;;;;;;;;;;;;ACAgF;AAYhF;IACE,0CAA0C;IAC1C,uBAAuB;IAEvB;IAAgB,CAAC;IAIjB,sCAAU,GAAV,UAAW,MAAM;QAEf,IAAI,GAAG,GAAG,UAAU,EAAE,GAAG,GAAG,iBAAiB;QAC7C,IAAI,iBAAiB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC7D,IAAI,SAAS,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACjD,IAAI,UAAU,GAAG;YACC,IAAI,EAAC,EAAE;YACP,MAAM,EAAE,SAAS;SACjB;QAClB,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAG,UAAU,CAAC,CAAC;QAC9E,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC9B,iBAAiB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IACD,oCAAQ,GAAR;IAEA,CAAC;IAvBU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAyB7B;IAAD,wBAAC;CAAA;AAzB6B;;;;;;;;;;;;ACZ9B,yBAAyB,qCAAqC,2BAA2B,4BAA4B,oBAAoB,yBAAyB,qBAAqB,KAAK,eAAe,yBAAyB,KAAK,qBAAqB,qBAAqB,KAAK,4BAA4B,0BAA0B,wBAAwB,KAAK,S;;;;;;;;;;;ACA3W,ioE;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACJ;AACf;AAO/B;IAIE,uBAAqB,WAAyB;QAAzB,gBAAW,GAAX,WAAW,CAAc;QAD9C,gBAAW,GAAS,IAAI,0CAAI;IACsB,CAAC;IAEnD,gCAAQ,GAAR;QAAA,iBAYC;QAXC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAChD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,IAAI;YAC1C,KAAI,CAAC,WAAW,GAAG,IAAI;YACvB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,QAAQ;YACzC,EAAE,EAAC,IAAI,KAAK,IAAI,CAAC,EAAC;gBAChB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACvB,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC;QAC5B,CAAC,CAAC;IACJ,CAAC;IAlBU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAKmC,yDAAW;OAJnC,aAAa,CAmBvB;IAAD,oBAAC;CAAA;AAnBuB;;;;;;;;;;;;ACT1B,mB;;;;;;;;;;;ACAA,uW;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACJ;AAQ9C;IAIE,wCAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAM,CAAC;IAEnD,iDAAQ,GAAR;IAEA,CAAC;IAED,+CAAM,GAAN;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC;IACxD,CAAC;IAbU,8BAA8B;QAL1C,+DAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;;;SAGzC,CAAC;yCAKiC,yDAAW;OAJjC,8BAA8B,CAe1C;IAAD,qCAAC;CAAA;AAf0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACO;AACd;AACO;AACK;AAMhD;IAuBE,qBAAoB,IAAgB,EAAS,QAAqB;QAA9C,SAAI,GAAJ,IAAI,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAjBlE,aAAQ,GAAc,EAAE,CAAC;QACzB,mBAAc,GAAY,IAAI,gDAAO,EAAE,CAAC;QAExC,aAAQ,GAAQ,IAAI,QAAQ,EAAE,CAAC;QAIvB,mBAAc,GAA4B,IAAI,4CAAO,EAAkB,CAAC;QAGxE,sBAAiB,GAAqB,IAAI,4CAAO,EAAW,CAAC;QAQnE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QAClE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAC5D,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,IAAI,4CAAO,EAAO,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAC3D,CAAC;IAED,gCAAU,GAAV;QAAA,iBAOC;QANC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,cAAc,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1D,KAAI,CAAC,QAAQ,GAAG,IAAI;YACpB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC;QAExC,CAAC,CAAC;IAEL,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAE;QAAV,iBAOC;QANC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,cAAc,GAAG,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACxD,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC;QAElC,CAAC,CAAC;IACJ,CAAC;IAED,uCAAiB,GAAjB,UAAkB,EAAE;QAClB,8CAA8C;QAC9C,sDAAsD;QACtD,KAAK;QACL,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACnB,CAAC;IAID,mCAAa,GAAb,UAAc,cAAc;QAA5B,iBAQC;QAPC,IAAI,EAAE,GAAG,cAAc,CAAC,SAAS;QACjC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,qBAAqB,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC7F,uBAAuB;YACvB,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEpC,CAAC,CAAC;IACJ,CAAC;IAED,sCAAgB,GAAhB,UAAiB,cAAc;QAC7B,cAAc,CAAC,MAAM,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IACrC,CAAC;IAED,4CAAsB,GAAtB;QAAA,iBAaC;QAZC,EAAE,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;YAC1B,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,kBAAQ;gBAC/C,KAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACxD,KAAI,CAAC,cAAc,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;gBAC1D,KAAI,CAAC,cAAc,CAAC,QAAQ,GAAG;oBAC7B,IAAI,EAAE,OAAO;oBACb,WAAW,EAAE,CAAC,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;iBAC3E;gBACD,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;gBACjF,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,cAAc,CAAC;YACzC,CAAC,CAAC;QACJ,CAAC;IACH,CAAC;IAID,oCAAc,GAAd,UAAe,GAAG,EAAE,GAAG;QAAvB,iBAgBC;QAdC,IAAI,QAAQ,GAAyB,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC9D,IAAI,MAAM,GAAG,EAAC,GAAG,EAAE,GAAG,EAAG,GAAG,EAAE,GAAG,EAAC,CAAC;QACnC,QAAQ,CAAC,OAAO,CAAC,EAAC,UAAU,EAAE,MAAM,EAAE,EAAE,UAAC,OAAO,EAAE,MAAM;YACpD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;YACpB,EAAE,EAAC,OAAO,CAAC,MAAM,GAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB;YAClD,IAAI;gBACF,KAAI,CAAC,YAAY,GAAG,EAAE;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC;YAC9B,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAC,YAAY,EAAE,KAAI,CAAC,YAAY,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAC,CAAC;QAIjF,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gCAAU,GAAV,UAAW,OAAO;QAAlB,iBAeC;QAdC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC1B,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,iBAAiB,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACjE,wBAAwB;YACxB,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,KAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;YAChD,KAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ;YAC/C,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE;gBACzC,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC;IACJ,CAAC;IAGD,mCAAa,GAAb,UAAc,GAAG,EAAE,GAAG;QACpB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,GAAG,CAAC,CAAE,IAAI,CAAC,GAAC,CAAC,EAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC7C,IAAI,QAAQ,GAAG,IAAI,CAAC,yBAAyB,CAAC,GAAG,EAAC,GAAG,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC3G,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,EAAC;gBACnB,yBAAyB;YACzB,CAAC;QACH,CAAC;QAGD,sGAAsG;QACtG,uDAAuD;QACvD,sBAAsB;QAEtB,KAAK;IACP,CAAC;IAED,4DAA4D;IAE5D,+CAAyB,GAAzB,UAA0B,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI;QAC3C,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,4BAA4B;QAC1C,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAC,IAAI,CAAC,CAAC,CAAE,gBAAgB;QACrD,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,GACH,IAAI,CAAC,GAAG,CAAC,IAAI,GAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAC,CAAC,CAAC;YACnC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC3D,IAAI,CAAC,GAAG,CAAC,IAAI,GAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAC,CAAC,CAAC,CAClC;QACH,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,iBAAiB;QAChC,MAAM,CAAC,CAAC,CAAC;IACX,CAAC;IAEF,6BAAO,GAAP,UAAQ,GAAG;QACR,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAC,GAAG,CAAC;IAC5B,CAAC;IAEH,qBAAqB;IAEnB,iCAAW,GAAX,UAAY,SAAS;QAEnB,IAAI,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,MAAM;QAC1D,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,EAAE,aAAa,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC1D,wBAAwB;YACxB,6BAA6B;QAC/B,CAAC,CAAC;IAEJ,CAAC;IA9KU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAwB0B,+DAAU,EAAmB,6DAAW;OAvBvD,WAAW,CA+KvB;IAAD,kBAAC;CAAA;AA/KuB;;;;;;;;;;;;ACVxB,wBAAwB,yBAAyB,OAAO,C;;;;;;;;;;;ACAxD,uE;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACJ;AAQ9C;IAEE,2BAAmB,QAAqB;QAArB,aAAQ,GAAR,QAAQ,CAAa;IAAI,CAAC;0BAFlC,iBAAiB;IAI5B,wCAAY,GAAZ,UAAa,OAAe,EAAE,MAAc;QAC1C,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,mBAAiB,EAAE;YACjD,QAAQ,EAAE,GAAG;SACd,CAAC,CAAC;IACL,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IAXU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAG6B,6DAAW;OAF7B,iBAAiB,CAa7B;IAAD,wBAAC;;CAAA;AAb6B;;;;;;;;;;;;ACT9B,wBAAwB,sBAAsB,4BAA4B,OAAO,iBAAiB,sBAAsB,4BAA4B,OAAO,+BAA+B,wBAAwB,iCAAiC,qBAAqB,0BAA0B,6BAA6B,SAAS,mCAAmC,qBAAqB,SAAS,kBAAkB,uBAAuB,2BAA2B,0BAA0B,6BAA6B,SAAS,kBAAkB,uBAAuB,OAAO,oBAAoB,kBAAkB,SAAS,mBAAmB,oBAAoB,SAAS,eAAe,6BAA6B,0BAA0B,OAAO,iBAAiB,mBAAmB,OAAO,sBAAsB,mBAAmB,OAAO,iBAAiB,oBAAoB,OAAO,C;;;;;;;;;;;ACAh3B,orDAAorD,wCAAwC,iTAAiT,wCAAwC,4T;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAngE;AACX;AACe;AAC1B;AACiB;AACwC;AAEvC;AAE9C,kEAAkE;AAClE;IAAA;IAKA,CAAC;IAJC,0CAAY,GAAZ,UAAa,OAA2B,EAAE,IAAwC;QAChF,IAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;IAC7F,CAAC;IACH,0BAAC;AAAD,CAAC;;AAOD;IAiBE,4BAAoB,eAAgC,EAAU,WAAyB,EAAU,WAAwB;QAArG,oBAAe,GAAf,eAAe,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAc;QAAU,gBAAW,GAAX,WAAW,CAAa;QAhBzH,SAAI,GAAU,IAAI,0CAAI,EAAE,CAAC;QACzB,cAAS,GAAa,IAAI,kDAAQ,EAAE,CAAC;QACrC,SAAI,GAAG,IAAI,CAAC;QAEZ,aAAQ,GAAW,EAAE,CAAC;QACtB,aAAQ,GAAW,EAAE,CAAC;QAItB,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YACrC,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,KAAK;SACjB,CAAC,CAAC;QAGH,YAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;IACyF,CAAC;IAE9H,4CAAe,GAAf;QAAA,iBAeC;QAdC,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QAE9C,EAAE,CAAC,CAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,QAAS,CAAC,EAAC;YAC9C,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC;YACjD,2CAA2C;YAC5C,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,SAAS,CAAE,cAAI;gBAE5D,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC;YAC3E,CAAC,CAAC;QACH,CAAC;QACD,IAAI,EAAC;YACL,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAClC,CAAC;IAEH,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IArCU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAkBqC,iEAAe,EAAuB,2DAAY,EAAuB,yDAAW;OAjB9G,kBAAkB,CAuC9B;IAAD,yBAAC;CAAA;AAvC8B;;;;;;;;;;;;ACtB/B,mB;;;;;;;;;;;ACAA,od;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0D;AACQ;AAOlE;IAEE,8BACS,SAA6C,EACpB,IAAS;QADlC,cAAS,GAAT,SAAS,CAAoC;QACpB,SAAI,GAAJ,IAAI,CAAK;IAAI,CAAC;IAEhD,wCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IARU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;QAKG,uEAAM,CAAC,iEAAe,CAAC;yCADN,8DAAY;OAHrB,oBAAoB,CAShC;IAAD,2BAAC;CAAA;AATgC;;;;;;;;;;;;ACRjC,0CAA0C,sBAAsB,+BAA+B,KAAK,eAAe,qBAAqB,oBAAoB,yCAAyC,KAAK,aAAa,wCAAwC,KAAK,C;;;;;;;;;;;ACApQ,8PAA8P,eAAe,oJAAoJ,iBAAiB,4GAA4G,0BAA0B,GAAG,yBAAyB,gJAAgJ,yBAAyB,uHAAuH,mBAAmB,+GAA+G,mBAAmB,yGAAyG,aAAa,+lBAA+lB,iBAAiB,6JAA6J,0BAA0B,GAAG,yBAAyB,yKAAyK,yBAAyB,oJAAoJ,mBAAmB,wIAAwI,mBAAmB,iIAAiI,aAAa,+jB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApgF;AACf;AAChC;AACgB;AACH;AA6B9C;IAME,8BAAoB,WAAwB,EAAU,aAA4B,EAAS,SAA6C,EAAkC,IAAS;QAA/J,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAS,cAAS,GAAT,SAAS,CAAoC;QAAkC,SAAI,GAAJ,IAAI,CAAK;QAFnL,eAAU,GAAa,IAAI,CAAC;QAC5B,UAAK,GAAG,IAAI,4CAAK,EAAE,CAAC;QAElB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAKD,uCAAQ,GAAR;QAAA,iBAaC;QAZC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,EAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;QACC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,IAAI;YAC1C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC;YAC7B,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;YAC1C,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAE;QAC7B,CAAC,CAAC;IAEN,CAAC;IAED,oCAAK,GAAL;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,iDAAkB,GAAlB,UAAmB,SAAS;QAC1B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACzE,wBAAwB;QACxB,6DAA6D;QAC7D,IAAI;IACN,CAAC;IAtCU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;QAO2I,uEAAM,CAAC,iEAAe,CAAC;yCAAjI,yDAAW,EAAyB,6DAAa,EAAoB,8DAAY;OANvG,oBAAoB,CAwChC;IAAD,2BAAC;CAAA;AAxCgC;;;;;;;;;;;;ACjCjC,+BAA+B,6BAA6B,uBAAuB,yBAAyB,2BAA2B,eAAe,iBAAiB,uCAAuC,aAAa,wBAAwB,OAAO,W;;;;;;;;;;;ACA1P,sUAAsU,2BAA2B,GAAG,0BAA0B,wDAAwD,qBAAqB,wDAAwD,0BAA0B,kEAAkE,mBAAmB,uDAAuD,oBAAoB,iEAAiE,oBAAoB,qT;;;;;;;;;;;;;;;;;;;;;;;;;ACAztB;AACP;AAQlD;IAOE,iCAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAJhD,iBAAiB;QACjB,uCAAuC;QACvC,iBAAY,GAAG,IAAI,IAAI,EAAE;IAIxB,CAAC;IAEF,sDAAoB,GAApB,UAAsB,KAAY;QAEhC,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;IAEvC,CAAC;IACD,kDAAgB,GAAhB,UAAiB,KAAK;QACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC;IAIxC,CAAC;IAED,0CAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC;IAC5C,CAAC;IA5BQ;QAAR,2DAAK,EAAE;;0DAAY;IADT,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAQmC,6DAAa;OAPrC,uBAAuB,CA+BnC;IAAD,8BAAC;CAAA;AA/BmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTO;AAEA;AACO;AACF;AACP;AAKzC;IAME,uBAAoB,IAAgB,EAAS,QAAqB,EAAU,MAAc;QAAtE,SAAI,GAAJ,IAAI,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAL1F,aAAQ,GAAQ,IAAI,QAAQ,EAAE,CAAC;QAC/B,cAAS,GAAiB,EAAE,CAAC;QAC7B,qBAAgB,GAAqB,IAAI,4CAAO,EAAW,CAAC;QAQnD,qBAAgB,GAAG,YAAY;QAJtC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;QAChE,IAAI,CAAC,YAAY,EAAE;IACpB,CAAC;IAID,oCAAY,GAAZ;QAAA,iBAMA;QALC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YAC7D,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC;QAC5C,CAAC,CAAC;IACJ,CAAC;IAED,iCAAS,GAAT,UAAU,QAAQ;QAChB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,eAAK,IAAI,YAAK,CAAC,OAAO,IAAI,QAAQ,EAAzB,CAAyB,CAAE;IAClE,CAAC;IAED,mCAAW,GAAX,UAAY,KAAK;QAAjB,iBAQC;QAPC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,eAAe,EAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACxD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC;YAC1C,sBAAsB;QACxB,CAAC,CAAC;IACJ,CAAC;IACD,sCAAsC;IACtC,4FAA4F;IAC5F,oCAAoC;IACpC,OAAO;IACP,IAAI;IAIJ,oCAAY,GAAZ,UAAa,EAAU;QACrB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,gBAAgB,IAAG,MAAI,EAAI,EAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACrE,8BAA8B;YAC9B,wCAAwC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAW,GAAX,UAAY,IAAI,EAAE,EAAE;QAApB,iBASC;QARC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,sBAAoB,EAAI,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,UAAE,IAAI;YAEjE,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAE,EAAE,CAAC;YACpC,KAAI,CAAC,SAAS,GAAG,IAAI;YACrB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC;YAC1C,sBAAsB;QACxB,CAAC,CAAC;IACJ,CAAC;IAED,yCAAiB,GAAjB,UAAkB,KAAY;QAE5B,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC3B,6BAA6B;QAC7B,sBAAsB;QACtB,gCAAgC;QAChC,gCAAgC;QAChC,2BAA2B;QAC3B,sBAAsB;QACtB,KAAK;IACP,CAAC;IAED,oCAAY,GAAZ,UAAa,KAAK,EAAC,SAAS,EAAE,OAAO;QACjC,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QACpC,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAC,KAAK,CAAC,OAAO,CAAC;QACrC,EAAE,EAAC,SAAS,KAAG,CAAC,CAAC,EAAC;YAChB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;YAChC,+BAA+B;QACjC,CAAC;IAGL,CAAC;IAED,2CAAmB,GAAnB,UAAoB,KAAK;QACvB,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;QACrB,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACjB,qBAAqB;QACrB,mCAAmC;IACrC,CAAC;IAED,oCAAY,GAAZ,UAAa,KAAK;QAChB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAClC,wCAAwC;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAEnD,mEAAmE;YACjE,wBAAwB;YACxB,6BAA6B;QAC/B,CAAC,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,GAAG,EAAE;YAClD,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;QAE5B,8BAA8B;QAC9B,0BAA0B;QAC1B,qCAAqC;QACrC,oBAAoB;QACpB,4CAA4C;QAC5C,6DAA6D;QAC7D,iEAAiE;QACjE,wEAAwE;QACxE,+BAA+B;QAC/B,oCAAoC;QACpC,OAAO;IAEP,CAAC;IAtHU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAO0B,+DAAU,EAAmB,6DAAW,EAAkB,sDAAM;OAN/E,aAAa,CAuHzB;IAAD,oBAAC;CAAA;AAvHyB;;;;;;;;;;;;ACV1B,oBAAoB,gCAAgC,KAAK,UAAU,uBAAuB,8BAA8B,KAAK,eAAe,8BAA8B,KAAK,4BAA4B,oBAAoB,6BAA6B,mBAAmB,iBAAiB,2CAA2C,uBAAuB,wBAAwB,gCAAgC,KAAK,gCAAgC,iBAAiB,8BAA8B,KAAK,uBAAuB,wBAAwB,iBAAiB,MAAM,YAAY,kBAAkB,yBAAyB,KAAK,qBAAqB,kBAAkB,2BAA2B,8BAA8B,KAAK,cAAc,mBAAmB,uBAAuB,sBAAsB,yBAAyB,KAAK,cAAc,mBAAmB,KAAK,cAAc,kBAAkB,wBAAwB,4BAA4B,KAAK,cAAc,qBAAqB,8BAA8B,KAAK,eAAe,cAAc,KAAK,WAAW,yBAAyB,qBAAqB,8BAA8B,KAAK,6BAA6B,oBAAoB,6BAA6B,mBAAmB,iBAAiB,2CAA2C,uBAAuB,wBAAwB,gCAAgC,KAAK,iCAAiC,iBAAiB,8BAA8B,KAAK,C;;;;;;;;;;;ACA/8C,4PAA4P,uBAAuB,qJAAqJ,uBAAuB,yDAAyD,sBAAsB,qDAAqD,mBAAmB,2DAA2D,yBAAyB,gXAAgX,uBAAuB,yDAAyD,sBAAsB,qDAAqD,mBAAmB,2DAA2D,yBAAyB,uDAAuD,qBAAqB,+G;;;;;;;;;;;;;;;;;;;;;;;;;ACA/yC;AAEX;AAO9C;IAME,0BAAqB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF/C,aAAQ,GAAS,CAAC,CAAE;IAE+B,CAAC;IAElD,mCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,IAAI;YAC1C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC;YAC7B,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;YAC1C,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAE;QAC7B,CAAC,CAAC;IACJ,CAAC;IAjBU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAOkC,yDAAW;OANlC,gBAAgB,CAkB5B;IAAD,uBAAC;CAAA;AAlB4B;;;;;;;;;;;;ACT7B,wBAAwB,iCAAiC,2BAA2B,KAAK,C;;;;;;;;;;;ACAzF,oY;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA4D;AACO;AACjB;AACjB;AAQjC;IAUE,4BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAN1C,wBAAmB,GAAW;YACpC,UAAU,EAAE,CAAC;YACb,aAAa,EAAE,GAAG;YAClB,cAAc,EAAE,GAAG;SACpB,CAAC;IAEoD,CAAC;IAEvD,4CAAe,GAAf;QACE,qCAAqC;QACrC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,8CAA8C;QACpF,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC,iDAAiD;IAC9E,CAAC;IAED,yCAAY,GAAZ;QACE,yDAAyD;QACzD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,CAAC;QAC3C,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;QAEpD,4CAA4C;IAC9C,CAAC;IAED,sCAAS,GAAT;QACE,2DAA2D;QAC3D,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAC/B,CAAC;IA5BQ;QAAR,2DAAK,EAAE;kCAAQ,4CAAK;qDAAA;IACI;QAAxB,+DAAS,CAAC,gFAAY,CAAC;kCAAe,gFAAY;4DAAC;IAFzC,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAWqC,6DAAa;OAVvC,kBAAkB,CAmC9B;IAAD,yBAAC;CAAA;AAnC8B;;;;;;;;;;;;ACX/B,yDAAyD,4BAA4B,OAAO,iBAAiB,kCAAkC,oBAAoB,qBAAqB,wBAAwB,OAAO,uCAAuC,2BAA2B,qBAAqB,OAAO,uCAAuC,qBAAqB,mBAAmB,yBAAyB,4BAA4B,wBAAwB,wBAAwB,oBAAoB,OAAO,8CAA8C,eAAe,EAAE,yCAAyC,gBAAgB,EAAE,wFAAwF,gBAAgB,EAAE,2NAA2N,gBAAgB,EAAE,C;;;;;;;;;;;ACAr9B,u2C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAKE;QAHA,aAAQ,GAAG,KAAK,CAAE;IAGF,CAAC;IAIjB,iCAAQ,GAAR;IACA,CAAC;IAVU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAY1B;IAAD,qBAAC;CAAA;AAZ0B;;;;;;;;;;;;ACP3B,oCAAoC,sBAAsB,uBAAuB,kCAAkC,SAAS,6BAA6B,kCAAkC,+BAA+B,6BAA6B,SAAS,yDAAyD,YAAY,EAAE,yDAAyD,YAAY,EAAE,yDAAyD,YAAY,EAAE,yDAAyD,YAAY,EAAE,yDAAyD,YAAY,EAAE,yDAAyD,YAAY,EAAE,yDAAyD,YAAY,EAAE,yDAAyD,YAAY,EAAE,4CAA4C,yBAAyB,iDAAiD,SAAS,4CAA4C,0BAA0B,6CAA6C,SAAS,mCAAmC,sCAAsC,SAAS,oCAAoC,+BAA+B,2BAA2B,wBAAwB,sBAAsB,6BAA6B,SAAS,mDAAmD,gCAAgC,yBAAyB,0CAA0C,0BAA0B,yBAAyB,+BAA+B,yBAAyB,iCAAiC,SAAS,mDAAmD,gCAAgC,0BAA0B,oCAAoC,6BAA6B,2BAA2B,SAAS,C;;;;;;;;;;;ACApzD,qrD;;;;;;;;;;;;;;;;;;;;;;;;;ACAuD;AAEtB;AAOjC;IALA;QAOW,UAAK,GAAU,IAAI,4CAAK,EAAE,CAAC;IAKtC,CAAC;IAHC,mCAAQ,GAAR;IAEA,CAAC;IAJQ;QAAR,2DAAK,EAAE;kCAAQ,4CAAK;mDAAe;IAC3B;QAAR,2DAAK,EAAE;;sDAAkB;IAHf,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;ACT7B,mCAAmC,oCAAoC,qBAAqB,OAAO,kCAAkC,uBAAuB,OAAO,iCAAiC,wBAAwB,OAAO,+BAA+B,uBAAuB,OAAO,iCAAiC,wBAAwB,OAAO,gCAAgC,wBAAwB,OAAO,+BAA+B,wBAAwB,OAAO,yBAAyB,gBAAgB,yBAAyB,sBAAsB,4BAA4B,kCAAkC,6CAA6C,6CAA6C,wBAAwB,KAAK,uBAAuB,0BAA0B,sBAAsB,mCAAmC,kDAAkD,8CAA8C,6DAA6D,KAAK,WAAW,sBAAsB,KAAK,gBAAgB,2BAA2B,KAAK,S;;;;;;;;;;;ACA5kC,8eAA8e,eAAe,kQAAkQ,0BAA0B,GAAG,yBAAyB,iSAAiS,sBAAsB,qSAAqS,yBAAyB,GAAG,wBAAwB,0OAA0O,oBAAoB,wNAAwN,mBAAmB,uMAAuM,aAAa,gNAAgN,iBAAiB,kqBAAkqB,mBAAmB,utBAAutB,2BAA2B,sW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhtH;AACoC;AAG7C;AACM;AAET;AACA;AAEgC;AAQ9E;IAWE,wBAAoB,aAA4B,EAAU,WAAwB,EAAS,MAAiB,EAAU,WAAwB;QAA1H,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAAU,gBAAW,GAAX,WAAW,CAAa;QAP9I,eAAU,GAAgB,IAAI,KAAK,EAAS,CAAC;QAC7C,WAAM,GAAiB,IAAI,KAAK,EAAS,CAAC;QAC1C,eAAU,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEjD,qBAAgB,GAAG,EAAE,CAAC;IAKtB,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAsBC;QApBC,8DAA8D;QAC9D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAClC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,SAAS,CAAC,UAAC,IAAI;YAEpD,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;YAC/C,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YAEjC,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC;YAClD,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,IAAI;gBAC1C,KAAI,CAAC,WAAW,GAAG,IAAI;gBACvB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,QAAQ;YAC3C,CAAC,CAAC;YAEA,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC;QAEF,mCAAmC;IAErC,CAAC;IAED,2CAAkB,GAAlB,UAAmB,KAAK,EAAC,SAAS;QAChC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,EAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACrE,CAAC;IAED,kCAAS,GAAT,UAAU,QAAQ;QAChB,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClD,0EAA0E;QAC1E,wCAAwC;QAExC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAoB,EAAE;YACrD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,KAAK;SACZ,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAU,GAAV,UAAW,KAAK;QACd,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;IAEpB,CAAC;IAED,oCAAW,GAAX,UAAY,WAAmB;QAC7B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACxB,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,oBAAoB;QACtD,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,mDAAmD;QAC5F,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;IACvC,CAAC;IACD,gCAAO,GAAP;QACE,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IACpC,CAAC;IAED,oCAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;YAEhC,IAAI,CAAC,gBAAgB,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,eAAe,EAAE,cAAc,EAAE,aAAa,EAAE,WAAW,EAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC;QAE9I,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC;YACpD,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC;YACpC,IAAI,CAAC,gBAAgB,GAAG,CAAC,SAAS,EAAE,aAAa,EAAE,cAAc,EAAE,aAAa,EAAE,WAAW,EAAC,QAAQ,EAAE,SAAS,CAAC;QACpH,CAAC;IACH,CAAC;IACH,2BAA2B;IACzB,gCAAO,GAAP,UAAQ,CAAC,EAAC,CAAC;QACT,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC1B,MAAM,CAAC,CAAC,CAAC,CAAC;QACZ,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC1B,MAAM,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,CAAC,CAAC;IACX,CAAC;IA5FU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAYmC,6DAAa,EAAuB,yDAAW,EAAiB,2DAAS,EAAuB,yDAAW;OAXnI,cAAc,CA+F1B;IAAD,qBAAC;CAAA;AA/F0B;;;;;;;;;;;;AClB3B,yBAAyB,qCAAqC,2BAA2B,4BAA4B,oBAAoB,mBAAmB,KAAK,eAAe,2BAA2B,yBAAyB,KAAK,qBAAqB,qBAAqB,KAAK,eAAe,mBAAmB,KAAK,K;;;;;;;;;;;ACA/T,qLAAqL,uBAAuB,2C;;;;;;;;;;;;;;;;;;;;;;;;;ACA1J;AAKJ;AAO9C;IAIE,gCAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAE5C,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAChD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,IAAI;YAC1C,KAAI,CAAC,WAAW,GAAG,IAAI;QAEzB,CAAC,CAAC;IACJ,CAAC;IAdU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAKiC,yDAAW;OAJjC,sBAAsB,CAehC;IAAD,6BAAC;CAAA;AAfgC;;;;;;;;;;;;;;ACZnC;AAAA;IAQI;IAAe,CAAC;IAEpB,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV0C;AACC;AACM;AACpB;AACa;AACF;AAGY;AAMrD;IAUE,sBAAoB,IAAgB,EAAU,MAAc,EAAU,eAAgC,EAAU,WAAwB;QAApH,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;QARxI,YAAO,GAAG,IAAI,0CAAI,EAAE,CAAC;QAMb,sBAAiB,GAAkB,IAAI,4CAAO,EAAQ,CAAC;QAG7D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE;IACnE,CAAC;IAGD,8BAA8B;IAE9B,qGAAqG;IACrG,wCAAwC;IACxC,+BAA+B;IAC/B,+BAA+B;IAC/B,mCAAmC;IACnC,+BAA+B;IAC/B,uCAAuC;IAEvC,eAAe;IACf,yEAAyE;IACzE,uDAAuD;IACvD,QAAQ;IACR,OAAO;IACP,IAAI;IAGJ,yBAAyB;IACzB,iCAAiC;IACjC,4EAA4E;IAC5E,2CAA2C;IAC3C,qCAAqC;IACrC,sDAAsD;IACtD,SAAS;IACT,yDAAyD;IAEzD,WAAW;IACX,wCAAwC;IACxC,mEAAmE;IACnE,oCAAoC;IACpC,sDAAsD;IACtD,UAAU;IACV,gDAAgD;IAChD,MAAM;IACN,IAAI;IAEJ,mCAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7C,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC;IAED,kCAAW,GAAX,UAAY,EAAE;QAAd,iBAOC;QANC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,WAAW,GAAG,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAClD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3B,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC;IACJ,CAAC;IAED,mCAAY,GAAZ,UAAa,OAAa;QAA1B,iBAQC;QAPC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,cAAc,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1D,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3B,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC;IAEJ,CAAC;IAED,qCAAc,GAAd,UAAe,WAAW;QAA1B,iBAUC;QATC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAI,EAAE,GAAG,WAAW,CAAC,UAAU;QAC/B,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,kBAAkB,GAAG,EAAE,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACrF,uBAAuB;YACvB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEpC,CAAC,CAAC;IACJ,CAAC;IAvFU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAW0B,+DAAU,EAAkB,sDAAM,EAA2B,iEAAe,EAAuB,yDAAW;OAV7H,YAAY,CAwFxB;IAAD,mBAAC;CAAA;AAxFwB;;;;;;;;;;;;;;ACdzB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n  import { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n  import { Observable } from 'rxjs';\r\n\r\n\r\n  @Injectable()\r\n  export class AuthInterceptor implements HttpInterceptor {\r\n\r\n      intercept(req: HttpRequest<any>,\r\n                next: HttpHandler): Observable<HttpEvent<any>> {\r\n        \r\n          const idToken = localStorage.getItem(\"token\");\r\n         \r\n          if (idToken) {\r\n              const cloned = req.clone({\r\n                  headers: req.headers.set(\"Authorization\",\r\n                      \"Bearer \" + idToken)\r\n              });\r\n\r\n              return next.handle(cloned);\r\n          }\r\n          else {\r\n              return next.handle(req);\r\n          }\r\n      }\r\n  }\r\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\r\n\r\nexport class MotoBoy{\r\n    motoboyId :number;\r\n    firstName : string;\r\n    lastName : string;\r\n    email    : string;\r\n    phoneNumber : number;\r\n    rate     : number;\r\n    photo    : string;\r\n    latitude : number;\r\n    longitude: number;\r\n    icon: string;\r\n    active : boolean;\r\n    password: string;\r\n    userName: string;\r\n    position : Object;\r\n    constructor() {\r\n\r\n        this.active = true; \r\n        this.rate = null ;\r\n        this.icon = \"https://png.icons8.com/ios/40/3CBC32/cycling-road-filled.png\"\r\n\r\n    }\r\n}","export class Order{\r\n\r\n    \r\n    orderId : number;\r\n    customerId : number;\r\n    motoboyId : number;\r\n    localAddress : string;\r\n    latitudeOriginAddress : number;\r\n    longitudeOriginAddress:number;\r\n    destAddress: string;\r\n    latitudeDestAddress:number;\r\n    longitudeDestAddress:number;\r\n    price: number;\r\n    orderDate: Date ;\r\n    collectDate: Date ;\r\n    deliveryDate: Date ;\r\n    contactDestination: string ;\r\n    phoneDestination: string ;\r\n    phoneNumber: string ;\r\n    deliveryType: string ;\r\n    statusId: number;\r\n    active : boolean;\r\n    signature: string;\r\n    description: string;\r\n\r\n\r\n    constructor() {}\r\n\r\n}\r\n","module.exports = \"h1{\\r\\n    text-align: center;\\r\\n    color: #3f51b5;\\r\\n    background-color: white;\\r\\n  }\\r\\n\\r\\np{\\r\\n    text-align: center;\\r\\n    color: black;\\r\\n    background-color: white;  \\r\\n}\\r\\n\\r\\nbody{\\r\\n    background:black;\\r\\n  }\\r\\n\\r\\n.contenedor{\\r\\n    position:relative;\\r\\n    width:800px;\\r\\n    height:600px;\\r\\n   background: rgb(199,233,239); \\r\\n  background: linear-gradient(to bottom,  rgba(199,233,239,1) 0%,rgba(199,233,239,1) 70%,rgba(234,227,173,1) 70%,rgba(199,233,239,1) 70%,rgba(234,227,173,1) 70%,rgba(234,227,173,1) 100%); \\r\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#c7e9ef', endColorstr='#eae3ad',GradientType=0 ); \\r\\n  \\r\\n    border:9px solid #ddd;\\r\\n    overflow:hidden;\\r\\n\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 100px;\\r\\n    margin-right: 150px;\\r\\n    margin-left: 350px;\\r\\n  }\\r\\n\\r\\n.bici{\\r\\n    position:absolute;\\r\\n    margin:0 70px\\r\\n  }\\r\\n\\r\\n.rueda1{\\r\\n    position:absolute;\\r\\n    width:152px;\\r\\n    height:152px;\\r\\n    border-radius:100%;\\r\\n    border:7px solid #CAA659;\\r\\n    margin:330px 121px;\\r\\n    animation:rodar 3s linear infinite;\\r\\n    -moz-animation:rodar 3s linear infinite;\\r\\n    -webkit-animation:rodar 3s linear infinite;\\r\\n    \\r\\n    \\r\\n  }\\r\\n\\r\\n.rueda1::before,.rueda2::before{\\r\\n    content:\\\"\\\";\\r\\n    position:absolute;\\r\\n    width:162px;\\r\\n    height:162px;\\r\\n    border-radius:100%;\\r\\n    border:7px solid #813262;\\r\\n    margin:-12px -12px;\\r\\n  }\\r\\n\\r\\n.ruedita{\\r\\n    \\r\\n    position:absolute;\\r\\n    width:172px;\\r\\n    height:85px;\\r\\n    border-radius:172px 172px 0 0;\\r\\n    border-top:9px solid #F65083;\\r\\n     border-left:9px solid #F65083;\\r\\n     border-right:9px solid #F65083;\\r\\n    margin:316px 109px;\\r\\n  }\\r\\n\\r\\n.ruedita3{\\r\\n    \\r\\n    position:absolute;\\r\\n    width:172px;\\r\\n    height:85px;\\r\\n    border-radius:172px 172px 0 0;\\r\\n    border-top:9px solid #F65083;\\r\\n     border-left:9px solid #F65083;\\r\\n     border-right:9px solid #F65083;\\r\\n    margin:316px 378px;\\r\\n  }\\r\\n\\r\\n.rayos{\\r\\n    position:absolute;\\r\\n    width:3px;\\r\\n    height:152px;\\r\\n    background:#CAA659;\\r\\n    margin:0 75px;\\r\\n  }\\r\\n\\r\\n.rayos::before{\\r\\n    content:\\\"\\\";\\r\\n    position:absolute;\\r\\n    width:152px;\\r\\n    height:3px;\\r\\n    background:#CAA659;\\r\\n    margin:75px -75px;\\r\\n  }\\r\\n\\r\\n.rayos::after{\\r\\n    content:\\\"\\\";\\r\\n    position:absolute;\\r\\n    width:152px;\\r\\n    height:3px;\\r\\n    background:#CAA659;\\r\\n    margin:75px -75px;\\r\\n    -webkit-transform:rotate(-45deg);\\r\\n            transform:rotate(-45deg);\\r\\n    -moz-transform:rotate(-45deg);\\r\\n  }\\r\\n\\r\\n.rayos3{\\r\\n    \\r\\n    position:absolute;\\r\\n    width:152px;\\r\\n    height:3px;\\r\\n    background:#CAA659;\\r\\n    margin:75px 0px;\\r\\n    transform:rotate(45deg);\\r\\n    -moz-transform:rotate(45deg);\\r\\n    -webkit-transform:rotate(45deg);\\r\\n  }\\r\\n\\r\\n.rueda2{\\r\\n    position:absolute;\\r\\n    width:152px;\\r\\n    height:152px;\\r\\n    border-radius:100%;\\r\\n    border:7px solid #CAA659;\\r\\n    margin:330px 390px;\\r\\n     animation:rodar 3s linear infinite;\\r\\n    -moz-animation:rodar 3s linear infinite;\\r\\n    -webkit-animation:rodar 3s linear infinite;\\r\\n    \\r\\n  }\\r\\n\\r\\n.cuadrado{\\r\\n    position:absolute;\\r\\n    width:50px;\\r\\n    height:50px;\\r\\n    border-radius:100%;\\r\\n    background:#78C795;\\r\\n    margin:390px 180px;\\r\\n  }\\r\\n\\r\\n.cuadrado::before{\\r\\n    content:\\\"\\\";\\r\\n    position:absolute;\\r\\n    width:60px;\\r\\n    height:60px;\\r\\n    border-radius:100%;\\r\\n    background:#78C795;\\r\\n    margin:-7px 121px;\\r\\n  }\\r\\n\\r\\n.cuadrado::after{\\r\\n    content:\\\"\\\";\\r\\n    position:absolute;\\r\\n     border-top: 121px solid #78C795;\\r\\n    border-left: 12px solid transparent;\\r\\n    border-right: 12px solid transparent;\\r\\n    height: 0;\\r\\n    width: 30px;\\r\\n    transform:rotate(90deg);\\r\\n    -moz-transform:rotate(90deg);\\r\\n    -webkit-transform:rotate(90deg);\\r\\n    margin:-36px 60px\\r\\n  }\\r\\n\\r\\n.redon{\\r\\n    position:absolute;\\r\\n    width:30px;\\r\\n    height:30px;\\r\\n    border-radius:100%;\\r\\n    background:#F65083;\\r\\n    margin:400px 189px\\r\\n  }\\r\\n\\r\\n.t1{\\r\\n    position:absolute;\\r\\n    width:5px;\\r\\n    height:152px;\\r\\n    border-radius:6px;\\r\\n    background:#CEEBD7;\\r\\n    border:3px solid #78C795;\\r\\n      margin:275px 241px;\\r\\n    transform:rotate(35deg);\\r\\n    -moz-transform:rotate(35deg);\\r\\n    -webkit-transform:rotate(35deg);\\r\\n  }\\r\\n\\r\\n.t2{\\r\\n    position:absolute;\\r\\n    width:5px;\\r\\n    height:192px;\\r\\n    border-radius:6px;\\r\\n    background:#CEEBD7;\\r\\n    border:3px solid #78C795;\\r\\n      margin:231px 300px;\\r\\n    transform:rotate(-21deg);\\r\\n    -moz-transform:rotate(-21deg);\\r\\n    -webkit-transform:rotate(-21deg);\\r\\n  }\\r\\n\\r\\n.t3{\\r\\n    position:absolute;\\r\\n    width:5px;\\r\\n    height:132px;\\r\\n    border-radius:6px;\\r\\n    background:#CEEBD7;\\r\\n    border:3px solid #78C795;\\r\\n      margin:221px 350px;\\r\\n    transform:rotate(-112deg);\\r\\n    -moz-transform:rotate(-112deg);\\r\\n    -webkit-transform:rotate(-112deg);\\r\\n  }\\r\\n\\r\\n.t4{\\r\\n    position:absolute;\\r\\n    width:5px;\\r\\n    height:231px;\\r\\n    border-radius:6px;\\r\\n    background:#CEEBD7;\\r\\n    border:3px solid #78C795;\\r\\n      margin:192px 430px;\\r\\n    transform:rotate(-21deg);\\r\\n    -moz-transform:rotate(-21deg);\\r\\n    -webkit-transform:rotate(-21deg);\\r\\n  }\\r\\n\\r\\n.t5{\\r\\n    position:absolute;\\r\\n    width:5px;\\r\\n    height:132px;\\r\\n    border-radius:6px;\\r\\n    background:#CEEBD7;\\r\\n    border:3px solid #78C795;\\r\\n      margin:261px 370px;\\r\\n    transform:rotate(45deg);\\r\\n    -moz-transform:rotate(45deg);\\r\\n    -webkit-transform:rotate(45deg);\\r\\n  }\\r\\n\\r\\n.redon3{\\r\\n    position:absolute;\\r\\n    width:30px;\\r\\n    height:30px;\\r\\n    border-radius:100%;\\r\\n    background:#F65083;\\r\\n    margin:400px 460px\\r\\n  }\\r\\n\\r\\n.circ{\\r\\n    position:absolute;\\r\\n    width:60px;\\r\\n    height:30px;\\r\\n    border-radius:70px 70px 0 0;\\r\\n    border-top:9px solid #F66CAE;\\r\\n    border-left:9px solid #F66CAE;\\r\\n    border-right:12px solid #F66CAE;\\r\\n    margin:172px 321px\\r\\n  }\\r\\n\\r\\n.asiento{\\r\\n    position:absolute;\\r\\n    width:70px;\\r\\n    height:21px;\\r\\n    border-radius:30px;\\r\\n    background:#F66CAE;\\r\\n    border:3px solid #F65083;\\r\\n    margin:231px 235px\\r\\n  }\\r\\n\\r\\n.rot{\\r\\n    \\r\\n    position:absolute;\\r\\n    width:21px;\\r\\n    height:21px;\\r\\n    border-radius:100%;\\r\\n    background:#F66CAE;\\r\\n    margin:390px 309px;\\r\\n    border:12px solid #F65083;\\r\\n    animation:rodar 3s linear infinite;\\r\\n    -moz-animation:rodar 3s linear infinite;\\r\\n    -webkit-animation:rodar 3s linear infinite;\\r\\n  }\\r\\n\\r\\n.rot::before{\\r\\n    content:\\\"\\\";\\r\\n    position:absolute;\\r\\n    width:7px;\\r\\n    height:60px;\\r\\n    background:#83385D;\\r\\n    margin:5px 17px;\\r\\n     transform:rotate(-21deg);\\r\\n    -moz-transform:rotate(-21deg);\\r\\n    -webkit-transform:rotate(-21deg);\\r\\n  }\\r\\n\\r\\n.rot::after{\\r\\n    content:\\\"\\\";\\r\\n    display:block;\\r\\n    width:40px;\\r\\n    height:12px;\\r\\n    border-radius:21px;\\r\\n    background:#78C795;\\r\\n    border-top:6px solid #50AD78;\\r\\n    margin:59px 12px\\r\\n  }\\r\\n\\r\\n.rot3{\\r\\n    \\r\\n    position:absolute;\\r\\n    width:7px;\\r\\n    height:60px;\\r\\n    background:#83385D;\\r\\n    margin:330px 321px;\\r\\n    transform-origin:50% 100%;\\r\\n     -moz-transform-origin:50% 100%;\\r\\n     -webkit-transform-origin:50% 100%;\\r\\n     -webkit-transform:rotate(152deg);\\r\\n    -moz-transform:rotate(152deg);\\r\\n    -webkit-transform:rotate(152deg);\\r\\n    animation:rodar 3s linear infinite;\\r\\n    -moz-animation:rodar 3s linear infinite;\\r\\n    -webkit-animation:rodar 3s linear infinite;\\r\\n  }\\r\\n\\r\\n.rot3::before{\\r\\n    content:\\\"\\\";\\r\\n    display:block;\\r\\n    width:40px;\\r\\n    height:12px;\\r\\n    border-radius:21px;\\r\\n    background:#78C795;\\r\\n    border-top:6px solid #50AD78;\\r\\n    margin:-0px -14px;\\r\\n  }\\r\\n\\r\\n.nubes,.nubes3,.nubes7,.nubes9,.nubes12{\\r\\n    position:absolute;\\r\\n    width:50px;\\r\\n    height:50px;\\r\\n    border-radius:100%;\\r\\n    background:white;\\r\\n    \\r\\n    border:1px solid #333;\\r\\n      \\r\\n  }\\r\\n\\r\\n.nubes{\\r\\n    margin:90px 800px;\\r\\n    animation:go 9s linear infinite;\\r\\n    -moz-animation:go 9s linear infinite;\\r\\n    -webkit-animation:go 9s linear infinite;\\r\\n    \\r\\n  }\\r\\n\\r\\n.nubes3{\\r\\n    margin:30px 172px;\\r\\n    transform:scale(.7);\\r\\n    -moz-transform:scale(.7);\\r\\n    -webkit-transform:scale(.7);\\r\\n     animation:go3 12s linear infinite;\\r\\n    -moz-animation:go3 12s linear infinite;\\r\\n    -webkit-animation:go3 12s linear infinite;\\r\\n  }\\r\\n\\r\\n.nubes7{\\r\\n    margin:50px 330px;\\r\\n    transform:scale(.9);\\r\\n    -moz-transform:scale(.9);\\r\\n    -webkit-transform:scale(.9);\\r\\n    animation:go7 16s linear infinite;\\r\\n    -moz-animation:go7 16s linear infinite;\\r\\n    -webkit-animation:go7 16s linear infinite;\\r\\n    \\r\\n  }\\r\\n\\r\\n.nubes9{\\r\\n    margin:70px 530px;\\r\\n    transform:scale(.5);\\r\\n    -moz-transform:scale(.5);\\r\\n    -webkit-transform:scale(.5);\\r\\n    animation:go9 19s linear infinite;\\r\\n    -moz-animation:go9 19s linear infinite;\\r\\n    -webkit-animation:go9 19s linear infinite;\\r\\n  }\\r\\n\\r\\n.nubes12{\\r\\n    margin:40px 700px;\\r\\n    transform:scale(.7);\\r\\n    -moz-transform:scale(.7);\\r\\n    -webkit-transform:scale(.7);\\r\\n     animation:go12 21s linear infinite;\\r\\n    -moz-animation:go12 21s linear infinite;\\r\\n    -webkit-animation:go12 21s linear infinite;\\r\\n    \\r\\n  }\\r\\n\\r\\n.nubes::before, .nubes3::before,.nubes7::before,.nubes9::before,.nubes12::before{\\r\\n    content:\\\"\\\";\\r\\n    position:absolute;\\r\\n    width:60px;\\r\\n    height:60px;\\r\\n    border-radius:100%;\\r\\n    background:white;\\r\\n    margin:-9px 21px;\\r\\n      border-top:1px solid #333; \\r\\n      border-bottom:1px solid #333; \\r\\n  }\\r\\n\\r\\n.nubes::after,.nubes3::after,.nubes7::after, .nubes9::after,.nubes12::after{\\r\\n    content:\\\"\\\";\\r\\n    position:absolute;\\r\\n    width:45px;\\r\\n    height:45px;\\r\\n    border-radius:100%;\\r\\n    background:white;\\r\\n    margin:0px 53px;\\r\\n      border-top:1px solid #333; \\r\\n      border-right:1px solid #333; \\r\\n  }\\r\\n\\r\\n.shadow, .shadow3{\\r\\n    position:absolute;\\r\\n    width:201px;\\r\\n    height:30px;\\r\\n    border-radius:100%;\\r\\n    background:#C3B895;\\r\\n    \\r\\n     animation:grow 3s alternate infinite;\\r\\n    -moz-animation:grow 3s alternate infinite;\\r\\n    -webkit-animation:grow 3s alternate infinite;\\r\\n  }\\r\\n\\r\\n.shadow{\\r\\n    margin:480px 102px;}\\r\\n\\r\\n.shadow3{\\r\\n    margin:480px 380px}\\r\\n\\r\\n@keyframes rodar{\\r\\n    0%{transform:rotate(0deg);\\r\\n    -moz-transform:rotate(0deg);\\r\\n    -webkit-transform:rotate(0deg);}\\r\\n    100%{transform:rotate(360deg);\\r\\n    -moz-transform:rotate(360deg);\\r\\n    -webkit-transform:rotate(360deg);}\\r\\n  }\\r\\n\\r\\n@-webkit-keyframes rodar{\\r\\n    0%{transform:rotate(0deg);\\r\\n    -moz-transform:rotate(0deg);\\r\\n    -webkit-transform:rotate(0deg);}\\r\\n    100%{transform:rotate(360deg);\\r\\n    -moz-transform:rotate(360deg);\\r\\n    -webkit-transform:rotate(360deg);}\\r\\n  }\\r\\n\\r\\n@keyframes go{\\r\\n    0%{ margin:90px 800px;}\\r\\n    100%{ margin:90px -90px;}\\r\\n    \\r\\n  }\\r\\n\\r\\n@-webkit-keyframes go{\\r\\n    0%{ margin:90px 800px;}\\r\\n    100%{ margin:90px -90px;}\\r\\n    \\r\\n  }\\r\\n\\r\\n@keyframes go3{\\r\\n    0%{ margin:50px 900px;}\\r\\n    100%{ margin:50px -90px;}\\r\\n    }\\r\\n\\r\\n@-webkit-keyframes go3{\\r\\n    0%{ margin:50px 900px;}\\r\\n    100%{ margin:50px -90px;}\\r\\n    }\\r\\n\\r\\n@keyframes go7{\\r\\n    0%{ margin:50px 990px;}\\r\\n    100%{ margin:50px -90px;}\\r\\n   }\\r\\n\\r\\n@-webkit-keyframes go7{\\r\\n    0%{ margin:50px 990px;}\\r\\n    100%{ margin:50px -90px;}\\r\\n   }\\r\\n\\r\\n@keyframes go9{\\r\\n    0%{ margin:70px 1012px;}\\r\\n    100%{ margin:70px -90px;}\\r\\n   }\\r\\n\\r\\n@-webkit-keyframes go9{\\r\\n    0%{ margin:70px 1012px;}\\r\\n    100%{ margin:70px -90px;}\\r\\n   }\\r\\n\\r\\n@keyframes go12{\\r\\n    0%{ margin:40px 1072px;}\\r\\n    100%{ margin:40px -90px;}\\r\\n    }\\r\\n\\r\\n@-webkit-keyframes go12{\\r\\n    0%{ margin:40px 1072px;}\\r\\n    100%{ margin:40px -90px;}\\r\\n    }\\r\\n\\r\\n@-webkit-keyframes grow{\\r\\n    0%{transform:scale(1);\\r\\n    -moz-transform:scale(1);\\r\\n    -webkit-transform:scale(1);}\\r\\n    100%{transform:scale(.8);\\r\\n    -moz-transform:scale(.8);\\r\\n    -webkit-transform:scale(.8);}\\r\\n     }\\r\\n\\r\\n@keyframes grow{\\r\\n    0%{transform:scale(1);\\r\\n    -moz-transform:scale(1);\\r\\n    -webkit-transform:scale(1);}\\r\\n    100%{transform:scale(.8);\\r\\n    -moz-transform:scale(.8);\\r\\n    -webkit-transform:scale(.8);}\\r\\n     }\"","module.exports = \" <h1>Life is better on a bike</h1>\\r\\n <p>\\r\\n        Speed - bicycles do not stop. No traffic jams, no traffic lights and many shortcuts.\\r\\n        Efficient and ecological - all deliveries are carried out without a drop of fuel, pollution or noise.\\r\\n        Economical and affordable - unlike motorcycles, there are no expenses for car wear, no insurance expenses and no fuel expenses! Therefore, the prices for errands are much lower than usual.\\r\\n </p>\\r\\n <div class=\\\"contenedor\\\">\\r\\n        <div class=\\\"bici\\\">\\r\\n          <span class=\\\"shadow\\\"></span>\\r\\n          <span class=\\\"shadow3\\\"></span>\\r\\n          <span class=\\\"rueda1\\\"><span class=\\\"rayos\\\"></span><span class=\\\"rayos3\\\"></span></span>\\r\\n          <span class=\\\"ruedita\\\"></span>\\r\\n           <span class=\\\"rueda2\\\"><span class=\\\"rayos\\\"></span><span class=\\\"rayos3\\\"></span></span>\\r\\n           <span class=\\\"ruedita3\\\"></span>\\r\\n          <span class=\\\"t2\\\"></span>\\r\\n          <span class=\\\"t4\\\"></span>\\r\\n          <span class=\\\"t5\\\"></span>\\r\\n          <span class=\\\"rot3\\\"></span>\\r\\n          \\r\\n          <span class=\\\"cuadrado\\\"></span>\\r\\n          <span class=\\\"redon\\\"></span>\\r\\n          <span class=\\\"redon3\\\"></span>\\r\\n          <span class=\\\"t1\\\"></span>\\r\\n          <span class=\\\"t3\\\"></span>\\r\\n          \\r\\n          <span class=\\\"asiento\\\"></span>\\r\\n          <span class=\\\"circ\\\"></span>\\r\\n          <span class=\\\"rot\\\"></span>\\r\\n          </div>\\r\\n        <div class=\\\"nube\\\">\\r\\n        <div class=\\\"nubes\\\"></div>\\r\\n          <div class=\\\"nubes3\\\"></div>\\r\\n          <div class=\\\"nubes7\\\"></div>\\r\\n          <div class=\\\"nubes9\\\"></div>\\r\\n          <div class=\\\"nubes12\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about-us',\r\n  templateUrl: './about-us.component.html',\r\n  styleUrls: ['./about-us.component.css']\r\n})\r\nexport class AboutUsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".main{\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n}\\r\\n\\r\\n.row{\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n}\\r\\n\\r\\n.motoboy-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    width: 40%;\\r\\n    padding-top: 2%;\\r\\n    padding-bottom: 2%;\\r\\n  }\\r\\n\\r\\n.motoboy-container > * {\\r\\n    width: 90%;\\r\\n  }\\r\\n\\r\\nspan {\\r\\n  color: #5f7a7a;\\r\\n    text-align: left;\\r\\n    padding-top: 1%;\\r\\n    padding-bottom: 1%;\\r\\n  }\\r\\n\\r\\n.btn {\\r\\n  margin-top: 2%;\\r\\n}\\r\\n\\r\\n.space1{\\r\\n  width:30%;\\r\\n  }\\r\\n\\r\\n.space{\\r\\n    width:10%;\\r\\n  }\\r\\n\\r\\nh1{\\r\\n    text-align: center;\\r\\n    color: #3f51b5;;\\r\\n}\\r\\n\\r\\n.SubmitRow{\\r\\n  float: right;;\\r\\n\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"main\\\">\\r\\n<div class = \\\"space1\\\"></div>\\r\\n<div class=\\\"motoboy-container\\\">\\r\\n\\r\\n    <h1>Register as a Motoboy</h1>\\r\\n\\r\\n  <mat-card>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class = \\\"space\\\"></div>\\r\\n  <mat-form-field>\\r\\n       <input matInput [(ngModel)]= motoboy.userName placeholder=\\\"User Name\\\">\\r\\n  </mat-form-field>\\r\\n  <div class = \\\"space\\\"></div>\\r\\n  <mat-form-field>\\r\\n    <input matInput [(ngModel)]= motoboy.email placeholder=\\\"Email\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class = \\\"space\\\"></div>\\r\\n      <mat-form-field>\\r\\n        <input matInput [(ngModel)]= motoboy.firstName placeholder=\\\"First Name\\\">\\r\\n      </mat-form-field>\\r\\n      <div class = \\\"space\\\"></div>\\r\\n      <mat-form-field>\\r\\n        <input matInput [(ngModel)]= motoboy.lastName placeholder=\\\"Last Name\\\">\\r\\n      </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class = \\\"space\\\"></div>\\r\\n      <mat-form-field>\\r\\n        <input matInput [(ngModel)]= motoboy.phoneNumber placeholder=\\\"Phone Number\\\">\\r\\n      </mat-form-field>\\r\\n      \\r\\n    </div>\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n          <div class = \\\"space\\\"></div>\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Enter your password\\\" [type]=\\\"!hide ? 'password' : 'text'\\\">\\r\\n                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <div class = \\\"space\\\"></div>\\r\\n        <mat-form-field>\\r\\n            <input matInput [(ngModel)]= motoboy.password placeholder=\\\"Confirm your password\\\" [type]=\\\"!hide ? 'password' : 'text'\\\">\\r\\n            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n        </mat-form-field>\\r\\n      \\r\\n        </div>\\r\\n <div class=\\\"row\\\">\\r\\n    <div class = \\\"space\\\"></div>\\r\\n  <span> Add Photo</span>\\r\\n    <input classe=\\\" inputFile\\\" (change)=\\\"onPhotofile($event)\\\" type=\\\"file\\\">\\r\\n    </div>\\r\\n   <!-- <span>PhotoID</span>\\r\\n    <input classe=\\\" inputFile\\\" type=\\\"file\\\"> -->\\r\\n\\r\\n  <!-- <mat-form-field>\\r\\n    <input matInput [(ngModel)]= motoboy.photoId placeholder=\\\"Photo ID\\\">\\r\\n  </mat-form-field> -->\\r\\n\\r\\n  <div class=\\\"SubmitRow\\\">\\r\\n      <div class = \\\"space\\\"></div>\\r\\n      <div class = \\\"space\\\"></div>\\r\\n      <div class = \\\"space\\\"></div>\\r\\n  <button class=\\\"btn\\\" (click)='submitMotoBoy()' mat-raised-button color=\\\"accent\\\">Submit</button>\\r\\n  </div>\\r\\n</mat-card>\\r\\n</div>\\r\\n<div class = \\\"space1\\\"></div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MotoService } from '../moto.service'\r\nimport { MotoBoy } from '../MotoBoy'\r\nimport {User} from '../user'\r\nimport {UsersService} from '../users.service'\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'add-motoboy',\r\n  templateUrl: './add-motoboy.component.html',\r\n  styleUrls: ['./add-motoboy.component.css']\r\n})\r\nexport class AddMotoboyComponent implements OnInit {\r\n  selectPhoto = \"\";\r\n  motoboy : MotoBoy = new MotoBoy();\r\n  user : User = new User();\r\n       \r\n  constructor(private motoService: MotoService, private userService: UsersService, private authService: AuthService) { }\r\n\r\n  onPhotofile(event) {\r\n    \r\n    this.selectPhoto = event.target.files[0]\r\n    //this.motoService.uploadPhoto(this.selectPhoto)\r\n\r\n  }\r\n\r\n  submitMotoBoy() {\r\n    \r\n    this.motoboy.photo = this.selectPhoto;\r\n    this.motoService.addMotoBoy(this.motoboy);\r\n    this.motoService.singleMotoObservable.subscribe(motoboy => {\r\n      this.authService.login({username: motoboy.userName, password: motoboy.password})\r\n    })\r\n    \r\n    \r\n    \r\n\r\n   \r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NewclientComponent } from './newclient/newclient.component';\r\nimport { AddMotoboyComponent } from './add-motoboy/add-motoboy.component'\r\nimport { DeliveryComponent } from './delivery/delivery.component'\r\nimport { TableComponent } from './table/table.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { EditMotoComponent } from './edit-moto/edit-moto.component';\r\nimport { EditCustomerComponent } from './edit-customer/edit-customer.component';\r\nimport { StarsComponent } from './stars/stars.component';\r\nimport { AboutUsComponent } from './about-us/about-us.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'add-customer', component: NewclientComponent },\r\n  { path: 'add-motoboy', component: AddMotoboyComponent },\r\n  { path: 'add-delivery', component: DeliveryComponent },\r\n  { path: 'orders', component: TableComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'app-edit-moto', component: EditMotoComponent},\r\n  { path: 'app-edit-customer', component: EditCustomerComponent},\r\n  { path: 'table', component: TableComponent },\r\n  { path: 'star', component: StarsComponent },\r\n  { path: 'aboutUs', component: AboutUsComponent },\r\n \r\n  \r\n\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".head {\\r\\n    font-family: 'Roboto', serif;\\r\\n    text-align: center;\\r\\n    letter-spacing: 5px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.menu {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.white-icon {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n*{\\r\\n    font-family: 'Encode Sans Condensed', sans-serif;\\r\\n\\r\\n}\"","module.exports = \"    \\r\\n<app-menu></app-menu>\\r\\n   \\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  \\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent  {\r\n  title = 'ezXpress';\r\n \r\n  constructor(private authService: AuthService) {\r\n\r\n  }\r\n  ngOnInit(){\r\nthis.authService.isLoggedIn();\r\n  }\r\n  \r\n  \r\n}\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule, MatCheckboxModule, MatSelectModule, MatDividerModule } from '@angular/material';\r\nimport { MatInputModule } from '@angular/material';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { AgmDirectionModule } from 'agm-direction'\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'; \r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTableModule } from '@angular/material';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {FileUploadModule} from 'primeng/fileupload';\r\nimport { SignaturePadModule } from 'angular2-signaturepad';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { EzxpressService } from './ezxpress.service';\r\nimport { AddMotoboyComponent } from './add-motoboy/add-motoboy.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { NewclientComponent } from './newclient/newclient.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { DeliveryComponent } from './delivery/delivery.component';\r\nimport { MotoService } from './moto.service';\r\nimport { DestinationComponent } from './destination/destination.component';\r\nimport { MaprouteComponent } from './maproute/maproute.component';\r\nimport { MotoShareLiveLocationComponent } from './moto-share-live-location/moto-share-live-location.component';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { TableComponent } from './table/table.component';\r\nimport { OrderDialogComponent } from './order-dialog/order-dialog.component';\r\nimport { OrdersService } from './orders.service';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { SignatureComponent } from './signature/signature.component';\r\nimport { OrderdeliveredComponent } from './orderdelivered/orderdelivered.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { EditMotoComponent } from './edit-moto/edit-moto.component';\r\nimport { EditCustomerComponent } from './edit-customer/edit-customer.component';\r\nimport { OrderScreenComponent } from './order-screen/order-screen.component';\r\nimport { UserConnectedComponent } from './user-connected/user-connected.component';\r\nimport { StarsComponent } from './stars/stars.component';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport { StepperComponent } from './stepper/stepper.component';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport { AuthService } from './auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { AuthInterceptor } from '../../AuthInterceptor';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { MsgsnackComponent } from './msgsnack/msgsnack.component';\r\nimport { AboutUsComponent } from './about-us/about-us.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AddMotoboyComponent,\r\n    MapComponent,\r\n    NewclientComponent,\r\n    HomeComponent,\r\n    DeliveryComponent,\r\n    DestinationComponent,\r\n    MaprouteComponent,\r\n    MotoShareLiveLocationComponent,\r\n    TableComponent,\r\n    OrderDialogComponent,\r\n    ProfileComponent,\r\n    SignatureComponent,\r\n    OrderdeliveredComponent,\r\n    LoginComponent,\r\n    EditMotoComponent,\r\n    EditCustomerComponent,\r\n    OrderScreenComponent,\r\n    UserConnectedComponent,\r\n    StarsComponent,\r\n    StepperComponent,\r\n    MenuComponent,\r\n    MsgsnackComponent,\r\n    AboutUsComponent,\r\n  \r\n\r\n    \r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MatFormFieldModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule, \r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    FormsModule,\r\n    MatCardModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyB-G0WodfAOEjuc9WcD0lC70UesBjzJG9g',\r\n      libraries: [\"places\"]\r\n    }),\r\n    AgmDirectionModule,\r\n    HttpClientModule,\r\n    MatToolbarModule,\r\n    FlexLayoutModule,\r\n    AppRoutingModule,\r\n    GooglePlaceModule,\r\n    MatTableModule, \r\n    MatSortModule,\r\n    MatDialogModule,\r\n    FileUploadModule,\r\n    MatDividerModule,\r\n    SignaturePadModule,\r\n    MatProgressSpinnerModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatStepperModule,\r\n    MatSnackBarModule\r\n  \r\n\r\n    \r\n  ],\r\n  entryComponents: [OrderDialogComponent, OrderScreenComponent],\r\n  providers: [EzxpressService, MotoService, OrdersService, AuthService, JwtHelperService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { User } from './user';\r\nimport { CustomerService } from './customer.service';\r\nimport { MotoService } from './moto.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  userType: string;\r\n  currentUser;\r\n  user = new User;\r\n  public token: string;\r\n  public msgUpdated: Observable<string>;\r\n  public msgSubject: Subject<string> = new Subject<string>();\r\n  public authUpdated: Observable<any>;\r\n  public authSubject: Subject<any> = new Subject<any>();\r\n  constructor(private http: HttpClient, private router: Router, private customerService: CustomerService, private motoService: MotoService) {\r\n\r\n    this.msgUpdated = this.msgSubject.asObservable();\r\n    this.authUpdated = this.authSubject.asObservable();\r\n\r\n  }\r\n\r\n\r\n\r\n  login(user) {\r\n    this.http.post<any>('/login', user).subscribe(result => {\r\n\r\n      localStorage.setItem('token', result.token)\r\n      this.isLoggedIn();\r\n      this.router.navigate([''])\r\n    },\r\n      (err) => {\r\n\r\n        this.msgSubject.next(\"Login Invalid\")\r\n      }\r\n    );\r\n  }\r\n\r\n  isLoggedIn() {\r\n    this.http.get<User>('/userDetails').subscribe(data => {\r\n      this.setUser(data);\r\n    \r\n    })\r\n  }\r\n\r\n  logoff() {\r\n    localStorage.removeItem('token')\r\n    this.currentUser = null;\r\n    this.authSubject.next(null)\r\n   \r\n    // this.authSubject.next(this.user)\r\n    this.router.navigate([''])\r\n  }\r\n\r\n\r\n  setUser(user: User) {\r\n    if (user.motoboyId === null) {\r\n      this.customerService.singleCustomerObservable.subscribe((customer)=>{\r\n        this.currentUser = customer;\r\n        this.authSubject.next(customer)\r\n        console.log(\"user set\");\r\n      })\r\n      this.customerService.getCustomer(user.customerId);\r\n      this.userType = \"customer\";\r\n    \r\n    } else {\r\n      this.motoService.singleMotoObservable.subscribe((motoboy)=>{\r\n        this.currentUser = motoboy;\r\n        this.authSubject.next(motoboy)\r\n        console.log(\"user set\");\r\n      });\r\n      this.motoService.getMoto(user.motoboyId);\r\n      this.userType = \"motoboy\";\r\n      \r\n    }\r\n    console.log(\"user type\" + this.userType)\r\n   \r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MotoService } from './moto.service'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Customer } from './customer';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n\r\n  NewCustomer = new Customer();\r\n  customers\r\n  currentCustomer: Customer = new Customer();\r\n\r\n\r\n  public singleCustomerObservable: Observable<Customer>;\r\n  private singleCustomerSubject: Subject<Customer> = new Subject<Customer>();\r\n\r\n  constructor( private motoService: MotoService, private http: HttpClient, \r\n    public snackBar: MatSnackBar) {\r\n    this.singleCustomerObservable = this.singleCustomerSubject.asObservable();\r\n  }\r\n\r\n  getCustomers()  {\r\n    this.http.get<Customer>('customersApi/').subscribe(data => {\r\n    this.customers = data;\r\n     })\r\n  }\r\n\r\n  getCustomer(id) {\r\n    this.http.get<Customer>('customersApi/customer').subscribe(data => {\r\n      this.currentCustomer = data[0];\r\n      this.singleCustomerSubject.next(data[0])\r\n      console.log(this.currentCustomer)\r\n      console.log(\"a\")\r\n     })\r\n  }\r\n\r\n  addNewClient(newClient : Customer){\r\n   \r\n    this.http.post<Customer>('customersApi/add',newClient).subscribe(data => {\r\n      this.currentCustomer = data;\r\n      this.currentCustomer.userName = newClient.userName;\r\n      this.currentCustomer.password = newClient.password\r\n     \r\n      this.singleCustomerSubject.next(this.currentCustomer)\r\n      this.snackBar.open(\"Sigup Succesful\", \" \", {\r\n        duration: 2000,\r\n      });\r\n      \r\n      \r\n      \r\n     })\r\n    \r\n  }\r\n\r\n  \r\n  updateUstomer(currentCustomer) {\r\n    let id = currentCustomer.customerId\r\n    this.http.put<Customer>('customersApi/update/' + id, { customer: currentCustomer }).subscribe((data) => {\r\n      this.currentCustomer = data;\r\n      this.singleCustomerSubject.next(data);\r\n    })\r\n  }\r\n\r\n  deleteCustomer(currentCustomer) {\r\n    console.log(\"inside delete\")\r\n    let id = currentCustomer.customerId\r\n    currentCustomer.active =false ;\r\n    this.http.put<Customer>('customersApi/delete/' + id, { customer: currentCustomer }).subscribe((data) => {\r\n      this.currentCustomer = data;\r\n      this.singleCustomerSubject.next(data);\r\n     \r\n    })\r\n  }\r\n  // shareLiveLocation(id) {\r\n  //   this.singleCustomerObservable.subscribe(()=>{\r\n  //     setInterval(this.getMotoCurrentLocation(),5000);\r\n  //   })\r\n  //   this.getMoto(id);\r\n  // }\r\n\r\n  \r\n\r\n  // putMotoLocation(currentCustomer) {\r\n  //   console.log(\"d\")\r\n  //   let id = currentCustomer.motoboyId\r\n  //   this.http.put<Customer>('motoboysApi/update/' + id, { motoboy: currentCustomer }).subscribe((data) => {\r\n  //     //update motoboys array\r\n  //     this.currentCustomer = data;\r\n  //     this.singleCustomerSubject.next(data);\r\n     \r\n  //   })\r\n  // }\r\n\r\n// getMotoCurrentLocation(){\r\n//   if (navigator.geolocation) {\r\n//     navigator.geolocation.getCurrentPosition(position => {\r\n//       this.currentCustomer.latitude = position.coords.latitude;\r\n//       this.currentCustomer.longitude = position.coords.longitude;\r\n//       this.reverseAddress(this.currentCustomer.latitude, this.currentCustomer.longitude);\r\n//       this.putMotoLocation(this.currentCustomer)\r\n\r\n//     })\r\n//   }    \r\n// }\r\n\r\n  // checkGoogleAddress(localAddress) {\r\n  //   var geocoder: google.maps.Geocoder = new google.maps.Geocoder;\r\n  //   console.log(localAddress)\r\n  //   geocoder.geocode({ address: localAddress }, (results) => {\r\n  //     this.currentCustomer.latitude = Number(results[0].geometry.location.lat);\r\n  //     this.currentCustomer.longitude = Number(results[0].geometry.location.lat);\r\n  //     console.log(this.currentCustomer.latitude)\r\n  //   })\r\n  // }\r\n\r\n  reverseAddress(lat, lng) {\r\n    this.motoService.reverseAddress(lat, lng);\r\n  }\r\n\r\n}\r\n","export class Customer{\r\n\r\n    customerId: number;\r\n    userName: string;\r\n    password: string;\r\n    email : string ;\r\n    phoneNumber:string ;\r\n    firstName: string ;\r\n    lastName: string ;\r\n    address: string ;\r\n    active : boolean;\r\n\r\n    constructor() {\r\n        \r\n    }\r\n\r\n    \r\n\r\n}","module.exports = \".container {\\r\\n  display: flex;\\r\\n  padding: 10px;\\r\\n}\\r\\nimg {\\r\\n    height: 70px;\\r\\n    width: 70px;\\r\\n}\\r\\n.order-container {\\r\\n    width: 400px;\\r\\n    margin-left:0px;\\r\\n    text-align: left;\\r\\n    \\r\\n}\\r\\n.legendDelivery{\\r\\n font-size: 12px;\\r\\n padding-left: 7px;\\r\\n}\\r\\n.mat-form-field.mat-form-field {\\r\\n    width: 350px;\\r\\n}\\r\\n.legendDelivery1{\\r\\n  font-size: 12px;\\r\\n  padding-left: 10px;\\r\\n  \\r\\n \\r\\n }\\r\\n.app-map{ flex: 1; }\\r\\n#minimumPrice{\\r\\n  font-style: italic;\\r\\n  font-size: 18px;\\r\\n}\\r\\n#spinner{\\r\\n  margin-left: 10px;\\r\\n}\\r\\nlabel > input{ /* HIDE RADIO */\\r\\n    visibility: hidden; /* Makes input not-clickable */\\r\\n    position: absolute; /* Remove input from document flow */\\r\\n  }\\r\\nlabel > input + img{ /* IMAGE STYLES */\\r\\n    cursor:pointer;\\r\\n    border:2px solid transparent;\\r\\n  }\\r\\nlabel > input:checked + img{ /* (RADIO CHECKED) IMAGE STYLES */\\r\\n    border:2px solid #E3C298;\\r\\n  }\\r\\nh2{\\r\\n    color: #3f51b5;;\\r\\n  }\\r\\np{\\r\\n    color: #3f51b5;;\\r\\n  }\"","module.exports = \"<div class=\\\"container\\\" fxLayout=\\\"fxFill\\\">\\r\\n  <div class=\\\"order-container\\\">\\r\\n    <h2 > From </h2>\\r\\n    <div id=\\\"localAddress\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput color=\\\"primary\\\" type='text' [(ngModel)]='order.localAddress' placeholder=\\\"Local Address\\\" #search>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input matInput color=\\\"primary\\\" type='text' [(ngModel)]='order.description' placeholder=\\\"Description\\\" #search>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <br>\\r\\n    \\r\\n    <h2> Destination </h2>\\r\\n    <app-destination></app-destination>\\r\\n    <br>\\r\\n    <!-- <button class=\\\"btn\\\" (click)='addReturn()' mat-raised-button color=\\\"accent\\\">Add Return</button> -->\\r\\n    <br>\\r\\n    <div type-cargo>\\r\\n      <h2> Type of Delivery</h2>\\r\\n      <mat-spinner id=\\\"spinner\\\" *ngIf='this.calcOrder == true' [color]=\\\"color\\\" [mode]=\\\"mode\\\" [value]=\\\"value\\\"></mat-spinner>\\r\\n      <div id=\\\"labels\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" >\\r\\n        <label>\\r\\n          <input type=\\\"radio\\\" name=\\\"order.deliveryType\\\" [checked]=\\\"order.deliveryType === 'envelope'\\\" (change)=\\\"setValue('envelope')\\\"  value=\\\"envelope\\\" />\\r\\n          <img src=\\\"https://png.icons8.com/office/80/3CBC32/secured-letter.png\\\">\\r\\n          <p class=\\\"legendDelivery\\\">Up to 300g</p>\\r\\n        </label>\\r\\n        <label>\\r\\n          <input type=\\\"radio\\\" name=\\\"order.deliveryType\\\" [checked]=\\\"order.deliveryType === 'box'\\\"  (change)=\\\"setValue('box')\\\" value=\\\"box\\\" />\\r\\n          <img src=\\\"https://png.icons8.com/material/80/3CBC32/product.png\\\">\\r\\n          <p class=\\\"legendDelivery1\\\">Up to 5Kg</p>\\r\\n        </label>\\r\\n      </div>\\r\\n      <button class=\\\"btn\\\" *ngIf=\\\"(this.order.deliveryType != undefined)\\\" (click)='calculateRate()' mat-raised-button color=\\\"primary\\\">Calculate</button>\\r\\n    </div>\\r\\n    <div id=\\\"price\\\" *ngIf=\\\"this.order.price > 0\\\">\\r\\n      <h2> Distance: {{ dist }} Km</h2>\\r\\n      <h2> Price : {{ order.price | currency:\\\"₪\\\"}} <span id=\\\"minimumPrice\\\" *ngIf=\\\"this.dist<=4\\\"> - Minimum Price</span> </h2>\\r\\n      \\r\\n      <button class=\\\"btn\\\" (click)='confirmOrder()' mat-raised-button color=\\\"primary\\\">Confirm</button>\\r\\n     \\r\\n      <button class=\\\"btn\\\" routerLink='/' mat-raised-button color=\\\"accent\\\">Cancel</button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <app-map [order]=\\\"order\\\"></app-map>\\r\\n  \\r\\n\\r\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef, NgZone} from '@angular/core';\r\nimport { Order } from '../Order';\r\nimport { MaprouteComponent } from '../maproute/maproute.component'\r\nimport { MapsAPILoader } from \"@agm/core\"\r\nimport { OrdersService } from '../orders.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { OrderDialogComponent } from '../order-dialog/order-dialog.component';\r\nimport { MotoService } from '../moto.service';\r\nimport { UsersService } from '../users.service';\r\nimport { AuthService } from '../auth.service';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport * as moment from 'moment';\r\n\r\n\r\n@Component({\r\n  selector: 'app-delivery',\r\n  templateUrl: './delivery.component.html',\r\n  styleUrls: ['./delivery.component.css']\r\n})\r\nexport class DeliveryComponent implements OnInit {\r\n  @ViewChild('search') public searchElement: ElementRef;\r\n  @ViewChild(MaprouteComponent) mapRoute: MaprouteComponent; \r\n\r\n  localAddress : string\r\n  dist: number;\r\n  order: Order;\r\n  calcOrder: Boolean = false;\r\n  color = 'primary';\r\n  mode = 'determinate';\r\n  value = 50;\r\n  \r\n  constructor(private orderService : OrdersService, private motoService: MotoService, \r\n     private mapsApiLoader: MapsAPILoader, private ngZone: NgZone,\r\n     public dialog: MatDialog, private authService: AuthService)\r\n  { \r\n        \r\n    this.order = new Order();\r\n\r\n    this.motoService.addressUpdated.subscribe( (data) => {\r\n      this.order.localAddress = data.localAddress;\r\n      this.order.latitudeOriginAddress = data.lat;\r\n      this.order.longitudeOriginAddress = data.lng;\r\n      \r\n\r\n      })\r\n  }\r\n\r\n  setValue(value){\r\n    this.order.deliveryType = value;\r\n  }\r\n\r\n  calculateRate(){\r\n    this.calcOrder = true;\r\n    var localAddress = new google.maps.LatLng(this.order.latitudeOriginAddress,this.order.longitudeDestAddress)\r\n    var destAddress = new google.maps.LatLng(this.order.latitudeDestAddress, this.order.longitudeDestAddress)\r\n    var travelway = google.maps.TravelMode.DRIVING\r\n    var directionsService = new google.maps.DirectionsService();\r\n  \r\n    var directionsRequest = {\r\n      origin: localAddress,\r\n      destination: destAddress,\r\n      travelMode: travelway, \r\n      avoidHighways: true\r\n    }\r\n    directionsService.route(directionsRequest, (result, status) => {\r\n      //if (status === 'OK') \r\n        \r\n        this.dist = result.routes[0].legs[0].distance.value/1000\r\n        console.log(this.dist)\r\n        \r\n        if (this.order.deliveryType == \"envelope\") \r\n           var multPrice = 5\r\n        else\r\n           var multPrice = 7\r\n        if (this.dist <= 4) this.order.price = 20\r\n        else\r\n           this.order.price = (this.dist) * multPrice;\r\n        this.calcOrder = false;\r\n        //this.mapRoute.showRoutes(result)\r\n    }) \r\n  }\r\n\r\n  confirmOrder(){\r\n    \r\n    this.order.orderDate = new Date();\r\n    this.order.statusId = 1\r\n    moment().format('MMMM Do YYYY, h:mm:ss a');(this.order.orderDate)\r\n    this.orderService.addNewOrder(this.order)\r\n   \r\n    let dialogRef = this.dialog.open(OrderDialogComponent, {\r\n      width: '500px'\r\n     \r\n    })\r\n\r\n    dialogRef.afterClosed().subscribe( result => {\r\n      this.motoService.getClosesMoto(this.order.latitudeOriginAddress,this.order.longitudeOriginAddress)\r\n      \r\n    });    \r\n  }\r\n\r\n\r\n  \r\n   \r\n  \r\n\r\n  ngOnInit() {\r\n    //set order customer\r\nthis.order.customerId = this.authService.currentUser.customerId;\r\nthis.authService.authUpdated.subscribe((user)=>{\r\n  this.order.customerId = user.customerId;\r\n})\r\n\r\n    this.mapsApiLoader.load().then( () => \r\n  {\r\n    let autocomplete = new google.maps.places.Autocomplete(this.searchElement.nativeElement, {types:[\"address\"]})\r\n    autocomplete.addListener(\"place_changed\", () => {\r\n      this.ngZone.run( () => {\r\n        let place : google.maps.places.PlaceResult = autocomplete.getPlace();\r\n        if (place.geometry === undefined || place.geometry === null){\r\n          return\r\n        }\r\n        console.log(place)\r\n        this.order.localAddress = place.formatted_address\r\n        \r\n        //this.motoService.latLngSubject.next({lat: place.geometry.location.lat(), lng:place.geometry.location.lng()} )\r\n        this.order.latitudeOriginAddress = place.geometry.location.lat();\r\n        this.order.longitudeOriginAddress = place.geometry.location.lng();\r\n        \r\n          \r\n      })\r\n    })\r\n  })\r\n    \r\n  }   \r\n\r\n\r\n}","module.exports = \".mat-form-field.mat-form-field {\\r\\n    width: 350px;\\r\\n}\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput [ngModel]=\\\"this.order.destAddress\\\" placeholder=\\\"Destination Addres\\\" #searchDest>\\r\\n</mat-form-field>\\r\\n<br>\\r\\n<mat-form-field>\\r\\n<input matInput [(ngModel)]=\\\"this.order.contactDestination\\\" placeholder=\\\"Ask to Whom\\\">\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n  <input matInput [(ngModel)]=\\\"this.order.phoneDestination\\\" placeholder=\\\"Phone Contact Person\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\r\nimport { MapsAPILoader } from \"@agm/core\"\r\n//import {} from \"@tpes/googlemaps\"\r\n\r\nimport { Order } from '../Order';\r\nimport { DeliveryComponent } from '../delivery/delivery.component'\r\n\r\n@Component({\r\n  selector: 'app-destination',\r\n  templateUrl: './destination.component.html',\r\n  styleUrls: ['./destination.component.css']\r\n})\r\nexport class DestinationComponent implements OnInit {\r\n\r\n  @ViewChild('searchDest') public searchDestElement: ElementRef;\r\n  \r\n  order: Order \r\n  constructor(private deliveryComponent: DeliveryComponent, private mapsApiLoader: MapsAPILoader, private ngZone: NgZone) { \r\n    this.order = this.deliveryComponent.order\r\n    console.log(this.order)\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mapsApiLoader.load().then( () => \r\n    {\r\n      let autocomplete = new google.maps.places.Autocomplete(this.searchDestElement.nativeElement, {types:[\"address\"]})\r\n      autocomplete.addListener(\"place_changed\", () => {\r\n        this.ngZone.run( () => {\r\n          let place : google.maps.places.PlaceResult = autocomplete.getPlace();\r\n          if (place.geometry === undefined || place.geometry === null){\r\n            return\r\n          }\r\n          this.order.destAddress = place.formatted_address\r\n          this.order.latitudeDestAddress = place.geometry.location.lat();\r\n          this.order.longitudeDestAddress = place.geometry.location.lng();\r\n          \r\n            \r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \".main{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n  }\\r\\n  \\r\\n  .row{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n  }\\r\\n  \\r\\n  .motoboy-container {\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      width: 40%;\\r\\n      padding-top: 2%;\\r\\n      padding-bottom: 2%;\\r\\n    }\\r\\n  \\r\\n  .motoboy-container > * {\\r\\n      width: 100%;\\r\\n    }\\r\\n  \\r\\n  span {\\r\\n    color: #5f7a7a;\\r\\n      text-align: left;\\r\\n      padding-top: 1%;\\r\\n      padding-bottom: 1%;\\r\\n    }\\r\\n  \\r\\n  .btn {\\r\\n    margin-top: 2%;\\r\\n  }\\r\\n  \\r\\n  .space1{\\r\\n    width:30%;\\r\\n    }\\r\\n  \\r\\n  .space{\\r\\n      width:10%;\\r\\n    }\\r\\n  \\r\\n  h1{\\r\\n      text-align: center;\\r\\n      color: #3f51b5;;\\r\\n  }\\r\\n  \\r\\n  .SubmitRow{\\r\\n    float: right;;\\r\\n  \\r\\n  }\"","module.exports = \"<div class=\\\"main\\\">\\r\\n    <div class=\\\"space1\\\"></div>\\r\\n  \\r\\n    <div class=\\\"client-container\\\">\\r\\n        <h1><mat-icon>edit</mat-icon>Edit your profile</h1>\\r\\n  \\r\\n      <mat-card>\\r\\n        <div class=\\\"row\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput [(ngModel)]=editedClient.firstName placeholder=\\\"First Name\\\">\\r\\n              </mat-form-field>\\r\\n          <div class=\\\"space\\\"></div>\\r\\n          <mat-form-field>\\r\\n              <input matInput [(ngModel)]=editedClient.lastName placeholder=\\\"Last Name\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"space\\\"></div>\\r\\n          <mat-form-field>\\r\\n            <input matInput [(ngModel)]=editedClient.email placeholder=\\\"Email\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput [(ngModel)]=editedClient.phoneNumber placeholder=\\\"Phone Number\\\">\\r\\n          </mat-form-field>\\r\\n          <div class=\\\"space\\\"></div>\\r\\n          <mat-form-field>\\r\\n            <input matInput [(ngModel)]=editedClient.address placeholder=\\\"Address\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n \\r\\n  \\r\\n        <div class=\\\"SubmitRow\\\">\\r\\n            <button class=\\\"btn\\\" (click)='submitEdit()' mat-raised-button color=\\\"accent\\\">Save changes</button>        </div>\\r\\n  \\r\\n    </mat-card>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Customer } from '../customer';\r\nimport { CustomerService } from '../customer.service';\r\nimport {User} from '../user'\r\nimport {UsersService} from '../users.service'\r\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-edit-customer',\r\n  templateUrl: './edit-customer.component.html',\r\n  styleUrls: ['./edit-customer.component.css']\r\n})\r\nexport class EditCustomerComponent implements OnInit {\r\n\r\n  user : User = new User();\r\n  editedClient: Customer = new Customer();\r\n  password = '' ; \r\n  constructor(private customerService: CustomerService, private userService: UsersService) { }\r\n\r\n  ngOnInit() {\r\n      this.customerService.singleCustomerObservable.subscribe((data) => {\r\n      this.editedClient = data;\r\n      console.log(this.editedClient)\r\n     })\r\n     this.customerService.getCustomer(2);\r\n  }\r\n\r\n  submitEdit(){\r\n      this.customerService.addNewClient(this.editedClient)\r\n      this.userService.addNewClient(this.user);\r\n  }\r\n\r\n}\r\n","module.exports = \".main{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n  }\\r\\n  \\r\\n  .row{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n  }\\r\\n  \\r\\n  .motoboy-container {\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      width: 40%;\\r\\n      padding-top: 2%;\\r\\n      padding-bottom: 2%;\\r\\n    }\\r\\n  \\r\\n  .motoboy-container > * {\\r\\n      width: 100%;\\r\\n    }\\r\\n  \\r\\n  span {\\r\\n    color: #5f7a7a;\\r\\n      text-align: left;\\r\\n      padding-top: 1%;\\r\\n      padding-bottom: 1%;\\r\\n    }\\r\\n  \\r\\n  .btn {\\r\\n    margin-top: 2%;\\r\\n  }\\r\\n  \\r\\n  .space1{\\r\\n    width:30%;\\r\\n    }\\r\\n  \\r\\n  .space{\\r\\n      width:10%;\\r\\n    }\\r\\n  \\r\\n  h1{\\r\\n      text-align: center;\\r\\n      color: #3f51b5;;\\r\\n  }\\r\\n  \\r\\n  .SubmitRow{\\r\\n    float: right;;\\r\\n  \\r\\n  }\"","module.exports = \"<div class=\\\"main\\\">\\r\\n  <div class=\\\"space1\\\"></div>\\r\\n  <div class=\\\"motoboy-container\\\">\\r\\n\\r\\n    <h1>\\r\\n      <mat-icon>edit</mat-icon>Edit your profile</h1>\\r\\n\\r\\n    <mat-card>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput [(ngModel)]=m otoboy.firstName placeholder=\\\"First Name\\\">\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"space\\\"></div>\\r\\n        <mat-form-field>\\r\\n          <input matInput [(ngModel)]=m otoboy.lastName placeholder=\\\"Last Name\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput [(ngModel)]=m otoboy.phoneNumber placeholder=\\\"Phone Number\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"space\\\"></div>\\r\\n        <mat-form-field>\\r\\n          <input matInput [(ngModel)]=m otoboy.email placeholder=\\\"Email\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"space\\\"></div>\\r\\n      <span> Add Photo</span>\\r\\n      <input classe=\\\" inputFile\\\" (change)=\\\"onPhotofile($event)\\\" type=\\\"file\\\">\\r\\n\\r\\n      <!-- <span>PhotoID</span>\\r\\n        <input classe=\\\" inputFile\\\" type=\\\"file\\\"> -->\\r\\n\\r\\n      <!-- <mat-form-field>\\r\\n        <input matInput [(ngModel)]= motoboy.photoId placeholder=\\\"Photo ID\\\">\\r\\n      </mat-form-field> -->\\r\\n\\r\\n      <div class=\\\"SubmitRow\\\">\\r\\n        <div class=\\\"space\\\"></div>\\r\\n        <div class=\\\"space\\\"></div>\\r\\n        <div class=\\\"space\\\"></div>\\r\\n        <button class=\\\"btn\\\" (click)='submitEdit()' mat-raised-button color=\\\"accent\\\">Save changes</button>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <div class=\\\"space1\\\"></div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MotoService } from '../moto.service'\r\nimport { MotoBoy } from '../MotoBoy'\r\nimport {User} from '../user'\r\nimport {UsersService} from '../users.service'\r\n\r\n@Component({\r\n  selector: 'app-edit-moto',\r\n  templateUrl: './edit-moto.component.html',\r\n  styleUrls: ['./edit-moto.component.css']\r\n})\r\nexport class EditMotoComponent implements OnInit {\r\n\r\n  motoboy : MotoBoy = new MotoBoy();\r\n  user : User = new User();\r\n  password ='' ;\r\n  constructor(private motoService: MotoService, private userService: UsersService) { }\r\n\r\n\r\n  ngOnInit(){\r\n    this.motoService.singleMotoObservable.subscribe((data) => {\r\n      this.motoboy = data;\r\n      console.log(this.motoboy)\r\n    })\r\n    \r\n    this.motoService.getMoto(1);\r\n\r\n    }\r\n\r\n    submitEdit(){\r\n    \r\n      if ( this.password == this.user.password ){\r\n        this.motoService.updateMotoBoy(this.motoboy);\r\n        //addd edit password&userName\r\n        this.userService.addNewClient(this.user);\r\n      }\r\n      else{\r\n      alert('password does not match');\r\n      }\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MotoBoy } from './MotoBoy';\r\nimport { Customer } from './customer';\r\nimport { Order } from './Order';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EzxpressService {\r\n\r\n\r\n  motoBoy = []\r\n  client = [];\r\n  order = [] ;\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getMotoBoy(){\r\n    return this.motoBoy;\r\n  }\r\n\r\n  addMotoBoy(motoboy){\r\n    this.motoBoy.push(motoboy);\r\n    console.log(this.motoBoy);\r\n    \r\n  }\r\n\r\n\r\n  addNewOrder(order){\r\n    console.log(\"inside Add\")\r\n    this.http.post<Order>('ordersApi/add',order).subscribe((data) => {\r\n      //update  array?\r\n      //this.order = data;\r\n    })\r\n  }\r\n  \r\n}\r\n","module.exports = \"\\r\\n\\r\\n\\r\\n* {\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.column {\\r\\n    float: left;\\r\\n    width: 33.33%;\\r\\n    height: auto;\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\n/* Clearfix (clear floats) */\\r\\n\\r\\n.row:after {\\r\\n    content: \\\"\\\";\\r\\n    clear: both;\\r\\n    display: table;\\r\\n}\\r\\n\\r\\n.img-card {\\r\\n    max-height: 30vw;\\r\\n    min-height: 30vw;\\r\\n    max-width: 30vw;\\r\\n    min-width: 30vw;\\r\\n    margin-top: 4px;\\r\\n    margin-left: 4px;\\r\\n    margin-right: 4px;\\r\\n    margin-bottom: 4px;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    font-family: 'Roboto', serif;\\r\\n}\\r\\n\\r\\nh5{\\r\\n    text-align: center;\\r\\n   \\r\\n}\\r\\n\\r\\nh6{\\r\\n    text-align: center;\\r\\n   \\r\\n}\\r\\n\\r\\n.space{\\r\\n    line-height: 10%; \\r\\n}\\r\\n\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"row w3-theme content\\\">\\r\\n    <div class=\\\"column img\\\">\\r\\n        <mat-card-title class=\\\"title\\\">\\r\\n            <div class=\\\"space\\\">\\r\\n                <h5>Step 1</h5>\\r\\n                <h6><span>Sign up for our service to place a new order in Express delivery</span></h6>\\r\\n            </div>\\r\\n        </mat-card-title>\\r\\n        <mat-card class=\\\"img-card\\\">\\r\\n            <img src=\\\"assets/img/express-delivery.jpg\\\"  alt=\\\"Express delivery\\\" width=\\\"100%\\\">\\r\\n        </mat-card>   \\r\\n    </div>\\r\\n    <div class=\\\"column img\\\">\\r\\n        <mat-card-title class=\\\"title\\\">\\r\\n            <div class=\\\"space\\\">\\r\\n                <h5>Step 2</h5>\\r\\n                <h6><span>A motoboy is quickly dispatched with your order</span></h6>\\r\\n            </div>\\r\\n        </mat-card-title>\\r\\n        <mat-card class=\\\"img-card\\\">\\r\\n            <img src=\\\"assets/img/delivery-service.jpg\\\"  alt=\\\"Delivery service\\\" width=\\\"100%\\\" >\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"column img\\\">\\r\\n        <mat-card-title class=\\\"title\\\">\\r\\n            <div class=\\\"space\\\">\\r\\n                <h5>Step 3</h5>\\r\\n                <h6><span>And delivers your package to its destination</span></h6>\\r\\n            </div>\\r\\n        </mat-card-title>\\r\\n        <mat-card class=\\\"img-card\\\">\\r\\n            <img src=\\\"assets/img/delivery-done.jpg\\\"  alt=\\\"Service done\\\" width=\\\"100%\\\">\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>    \\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  myImage : string = \"./../../img/expressdelivery.jpg\";\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".main{\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  margin: auto;\\r\\n  width: 30%;\\r\\n  padding: 30px;\\r\\n  padding-top: 30px; \\r\\n}\\r\\n.example-container{\\r\\n  display: flex;\\r\\n  flex-direction: column; \\r\\n}\\r\\n.space{\\r\\n    width: 35%; \\r\\n}\\r\\nh1{\\r\\n    text-align: center;\\r\\n    color: #3f51b5;;\\r\\n}\\r\\n.main2{\\r\\n    width: 60%; \\r\\n    display: flex;\\r\\n    flex-direction: row; \\r\\n    margin: auto;\\r\\n    padding: 30px;\\r\\n    padding-top: 30px; \\r\\n}\\r\\n.space2{\\r\\n    width: 40%; \\r\\n}\\r\\n.space3{\\r\\n    width: 10%; \\r\\n\\r\\n}\\r\\n.tada {\\r\\n    -webkit-animation-name: tada;\\r\\n            animation-name: tada;\\r\\n  }\\r\\np{\\r\\n      text-align: center;\\r\\n  }\\r\\n.msg{\\r\\n  color:red;\\r\\n  }\\r\\n\\r\\n\"","module.exports = \"\\r\\n<div>\\r\\n<div class=\\\"space\\\"></div>\\r\\n<div  class=\\\"main\\\"  >\\r\\n<mat-card class=\\\"example-container\\\">\\r\\n  <div class=\\\"tada\\\"><h1 class=\\\"tada\\\" >Please login</h1></div>\\r\\n  <mat-form-field>\\r\\n    <input matInput  [(ngModel)]=\\\"userName\\\" placeholder=\\\"User name\\\">\\r\\n  </mat-form-field>\\r\\n  <mat-form-field>\\r\\n    <input matInput  [(ngModel)]=\\\"password\\\" placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" >\\r\\n    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n  </mat-form-field>\\r\\n \\r\\n<p *ngIf=\\\"msg ==='Login Invalid'\\\" class=\\\"msg\\\"  ><mat-icon>warning</mat-icon></p>\\r\\n<p id=\\\"msg\\\" class=\\\"msg\\\" >{{ msg }}</p>\\r\\n\\r\\n  <button mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"login()\\\"  (click)=\\\"clear()\\\">Login</button>\\r\\n  <p>or</p> \\r\\n  <button mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"signup()\\\" >Register</button>\\r\\n</mat-card>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"toogle==1\\\" >\\r\\n    \\r\\n<div class=\\\"space2\\\"></div>\\r\\n<div  class=\\\"main2\\\">\\r\\n    <div class=\\\"space2\\\"></div>\\r\\n    <mat-card class=\\\"form-buttons\\\">\\r\\n        <button  mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" class=\\\"white-icon\\\" routerLink=\\\"/add-motoboy\\\"  (click)=\\\"clear()\\\">\\r\\n          <mat-icon>directions_bike</mat-icon>\\r\\n          <span>Register as A Motoboy</span>\\r\\n      </button>\\r\\n    </mat-card>\\r\\n    <div class=\\\"space3\\\"></div>\\r\\n  <mat-card>\\r\\n      <button  mat-raised-button color=\\\"accent\\\"  type=\\\"button\\\" class=\\\"white-icon\\\" routerLink=\\\"/add-customer\\\"  (click)=\\\"clear()\\\" >\\r\\n        <mat-icon>add_to_photos</mat-icon>\\r\\n        <span> Register as A New Customer</span>\\r\\n    </button>\\r\\n    </mat-card>\\r\\n    <div class=\\\"space2\\\"></div>\\r\\n</div>\\r\\n</div>\\r\\n\"","\r\nimport { Component, OnInit, Inject} from '@angular/core';\r\nimport {MotoService} from '../moto.service'\r\nimport {CustomerService} from '../customer.service'\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport {Customer} from '../customer'\r\nimport {MotoBoy} from '../MotoBoy'\r\n//import {SignupComponent} from '../signup/signup.component'\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { RouterModule, Routes ,Router} from '@angular/router';\r\nimport { UsersService } from '../users.service';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n scroll\r\n  loginParms : Object;\r\n  tokenid : Object = {token: ''}\r\n  msg : string\r\n  customer :Customer\r\n  hide = true;\r\n  userName = '';\r\n  password = '';\r\n  toogle =0;\r\n  constructor(\r\n    private usersService:UsersService,\r\n    public customerService:CustomerService,\r\n    public dialog: MatDialog,\r\n    private router:Router,\r\n    private authService : AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  \r\n    this.authService.msgUpdated.subscribe((data)=>{\r\n      this.msg = data; })\r\n  }\r\n\r\n  login(){\r\n\r\n    this.loginParms = {username: this.userName, password: this.password}\r\n    this.authService.login(this.loginParms)\r\n    \r\n  }\r\n  signup(){\r\n\r\n    if (this.toogle==1){\r\n      this.toogle=0;\r\n    }\r\n    if (this.toogle==0){\r\n      this.toogle=1;\r\n    }\r\n    this.scroll = setInterval(function(){ window.scrollBy(0,10); }, 20);\r\n  }\r\n\r\n  clear(){\r\n    clearInterval(this.scroll);\r\n  }\r\n\t\r\n \r\n}","module.exports = \"agm-map {\\r\\n    height: 650px;\\r\\n    width: 1360px;\\r\\n    \\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"map\\\">\\r\\n    <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"15\\\">  \\r\\n      <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\"></agm-marker>\\r\\n      <agm-direction [origin]=\\\"origin\\\" [destination]=\\\"destination\\\" [travelMode]=\\\"travelMode\\\">\\r\\n      </agm-direction>\\r\\n      <agm-marker class=\\\"mapMarker\\\" *ngFor=\\\"let motoBoy of motoBoys\\\" [latitude]=\\\"motoBoy.latitude\\\" [longitude]=\\\"motoBoy.longitude\\\"\\r\\n        [iconUrl]='\\\"https://png.icons8.com/ios/40/3CBC32/cycling-road-filled.png\\\"'>\\r\\n      </agm-marker>\\r\\n    </agm-map>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { MotoBoy } from '../MotoBoy';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n\r\n\r\nimport { MotoService } from '../moto.service';\r\nimport { Order } from '../Order';\r\nimport { LatLng } from '@agm/core';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\n\r\n\r\n\r\nexport class MapComponent  {\r\n  @Input() order: Order = new Order;\r\n  \r\n  @ViewChild('mapDiv') mapDiv: ElementRef;\r\n  public addressUpdated : Observable<any>;\r\n  public addressSubject: Subject<any>;\r\n  map: google.maps.Map;\r\n\r\n  latLng :  {lat : number, lng: number}\r\n  lat: number //= 51.678418;\r\n  lng: number //= 7.809007;\r\n  \r\n  // moto1 = new MotoBoy();\r\n  // moto2 = new MotoBoy();\r\n  // moto3 = new MotoBoy();\r\n  motoBoys: Array<MotoBoy>\r\n  motoBoyIcon: string;\r\n  localAddress :string;\r\n  origin=  { lat :0, lng: 0}\r\n  destination=  { lat : 0, lng: 0}\r\n  travelMode = \"WALKING\"\r\n  \r\n  constructor(private motoService: MotoService) {  \r\n      \r\n    this.motoService.getAllMoto()\r\n    this.motoService.allMotoObservable.subscribe( data => {\r\n        this.motoBoys = data\r\n        console.log(data)\r\n    })\r\n    // this.moto1.latitude = 32.051663;\r\n    // this.moto1.longitude = 34.765952;\r\n    \r\n    // this.moto2.latitude = 32.051750;\r\n    // this.moto2.longitude = 34.768724;\r\n    \r\n    // this.moto3.latitude = 32.048731;\r\n    // this.moto3.longitude = 34.763552;\r\n    // this.motoBoys = [this.moto1, this.moto2, this.moto3]\r\n    \r\n    // this.mapService.latLngUpdated.subscribe( data => {\r\n    //   this.lat = data.lat;\r\n    //   this.lng = data.lng\r\n    // })\r\n    \r\n  }\r\n  \r\n  \r\n  getUserLocation() {\r\n  \r\n    if (navigator.geolocation){\r\n      navigator.geolocation.getCurrentPosition(position => \r\n        {\r\n        console.log(position)\r\n        this.lat = position.coords.latitude;\r\n        this.lng = position.coords.longitude;\r\n        this.origin = { lat: this.order.latitudeOriginAddress, lng: this.order.longitudeOriginAddress }    \r\n        //this.destination = { lat: this.order.latitudeDestAddress, lng: this.order.longitudeDestAddress }\r\n         this.motoService.reverseAddress(this.lat, this.lng);\r\n        })\r\n    }\r\n    \r\n  }\r\n\r\n \r\n    \r\n  \r\n  ngOnInit() {\r\n    this.getUserLocation();\r\n  }\r\n  //   setInterval( () => {\r\n      \r\n  //     if (this.order.latitudeOriginAddress != undefined && (this.order.latitudeDestAddress != undefined)) {\r\n  //      this.origin = { lat: this.order.latitudeOriginAddress, lng: this.order.longitudeOriginAddress }    \r\n  //      this.destination = { lat: this.order.latitudeDestAddress, lng: this.order.longitudeDestAddress }\r\n      \r\n  //     }\r\n  //     let inc = 0.0005\r\n  //     this.motoBoys[0].latitude +=  inc\r\n  //     this.motoBoys[0].longitude += inc\r\n  //     this.motoBoys[1].latitude -= inc/2;\r\n  //     this.motoBoys[1].longitude += inc/2;\r\n  //   }, 4000 )\r\n  // }\r\n\r\n}","module.exports = \"\\r\\n#mapDiv {\\r\\n    height: 650px;\\r\\n    z-index: 1000;\\r\\n  }\\r\\n  \"","module.exports = \"\\r\\n<div  id=\\\"mapDiv\\\">\\r\\n  \\r\\n</div>\"","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { MotoBoy } from '../MotoBoy';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\nimport {} from '@types/google-maps';\r\n\r\n\r\n@Component({\r\n  selector: 'app-maproute',\r\n  templateUrl: './maproute.component.html',\r\n  styleUrls: ['./maproute.component.css']\r\n})\r\nexport class MaprouteComponent implements OnInit {\r\n  //@ViewChild('mapDiv') mapDiv: ElementRef;\r\n  //map: google.maps.Map;\r\n\r\n  constructor() { }\r\n\r\n\r\n\r\n  showRoutes(result){\r\n    \r\n    var lat = 32.0503025, lng = 34.76668559999996\r\n    var directionsDisplay = new google.maps.DirectionsRenderer();\r\n    var centerMap = new google.maps.LatLng(lat, lng);\r\n    var mapOptions = {\r\n                      zoom:12,\r\n                      center: centerMap\r\n                     }\r\n    var map = new google.maps.Map(document.getElementById('mapDiv') , mapOptions);\r\n    directionsDisplay.setMap(map);\r\n    directionsDisplay.setDirections(result);\r\n  }\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n}\r\n","module.exports = \".head {\\r\\n    font-family: 'Roboto', serif;\\r\\n    text-align: center;\\r\\n    letter-spacing: 5px;\\r\\n    width: 100%;\\r\\n    max-height: 50px;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.menu {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.white-icon {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.app-user-connected{\\r\\n   padding-left: 40px;\\r\\n   padding-top: 3px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"w3-theme\\\" id=\\\"container\\\">\\r\\n    <div class=\\\"app-user-connected\\\">\\r\\n    <app-user-connected></app-user-connected>\\r\\n    </div>\\r\\n    <div class=\\\"head\\\" >\\r\\n        <h1>EzExpress</h1>\\r\\n        <h2>Because it's easy to receive your package with our service</h2>\\r\\n    </div>\\r\\n    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n        <mat-icon>reorder</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #menu=\\\"matMenu\\\" class=\\\"w3-theme\\\">\\r\\n        <button class=\\\"white-icon\\\" mat-menu-item routerLink=\\\"\\\">\\r\\n            <mat-icon>home</mat-icon>\\r\\n            <span>Home Page</span>\\r\\n        </button>\\r\\n        <div class=\\\"menupart\\\" *ngIf=\\\"userType\\\">\\r\\n            <button class=\\\"white-icon\\\" mat-menu-item routerLink=\\\"/profile\\\">\\r\\n                <mat-icon>account_circle</mat-icon>\\r\\n                <span>My profile</span>\\r\\n            </button>\\r\\n\\r\\n            <button class=\\\"white-icon\\\" mat-menu-item routerLink=\\\"/table\\\">\\r\\n                <mat-icon>mail</mat-icon>\\r\\n                <span *ngIf=\\\"userType === 'customer'\\\"> My orders</span>\\r\\n                <span *ngIf=\\\"userType === 'motoboy'\\\"> Open orders</span>\\r\\n            </button>\\r\\n            <button *ngIf=\\\"userType === 'customer'\\\" class=\\\"white-icon\\\" mat-menu-item routerLink=\\\"/add-delivery\\\">\\r\\n                <mat-icon>send</mat-icon>\\r\\n                <span>Xpress Delivery</span>\\r\\n            </button>\\r\\n            <button  class=\\\"white-icon\\\" mat-menu-item routerLink=\\\"/aboutUs\\\">\\r\\n                <mat-icon>group</mat-icon>\\r\\n                <span>About Us</span>\\r\\n            </button>\\r\\n            <button class=\\\"white-icon\\\" mat-menu-item (click)=\\\"this.authService.logoff()\\\">\\r\\n                <mat-icon>exit_to_app</mat-icon>\\r\\n                <span>Logout</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        \\r\\n        <button *ngIf='currentUser == null' class=\\\"white-icon\\\" mat-menu-item routerLink=\\\"/login\\\">\\r\\n            <mat-icon>how_to_reg</mat-icon>\\r\\n            <span>Signin/Signup</span>\\r\\n        </button>\\r\\n        \\r\\n      \\r\\n    </mat-menu>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport { User } from '../user';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n  userType: string;\r\n  currentUser: User = new User\r\n  constructor (private authService : AuthService) { }\r\n\r\n  ngOnInit() {\r\n    console.log(\"menu\")\r\n    this.currentUser = this.authService.currentUser;\r\n    this.authService.authUpdated.subscribe((user)=>{\r\n      this.currentUser = user\r\n      this.userType = this.authService.userType\r\n      if(user === null){\r\n        this.userType = null;\r\n      }\r\n      console.log(this.currentUser)\r\n      console.log(this.userType)\r\n    })\r\n  }\r\n  }\r\n\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1>Please Enter your e-mail to share live location</h1>\\r\\n  <div class=\\\"form\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput [(ngModel)]=\\\"currentMotoId\\\" placeholder=\\\"your id\\\">\\r\\n    </mat-form-field>\\r\\n    <button mat-button (click)=\\\"submit()\\\">SHARE LIVE LOCATION</button>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MotoService } from '../moto.service';\r\nimport { MotoBoy } from '../MotoBoy';\r\n\r\n@Component({\r\n  selector: 'app-moto-share-live-location',\r\n  templateUrl: './moto-share-live-location.component.html',\r\n  styleUrls: ['./moto-share-live-location.component.css']\r\n})\r\nexport class MotoShareLiveLocationComponent implements OnInit {\r\n\r\n  currentMotoId: string;\r\n \r\n  constructor(private motoService: MotoService, ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.currentMotoId)\r\n    this.motoService.shareLiveLocation(this.currentMotoId)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MotoBoy } from './MotoBoy';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MotoService {\r\n  \r\n  localAddress : string;\r\n  lat: number //= 51.678418;\r\n  lng: number\r\n\r\n  motoBoys: MotoBoy[] = [];\r\n  currentMotoBoy: MotoBoy = new MotoBoy();\r\n\r\n  formData: any = new FormData();\r\n  file: File;\r\n\r\n  public allMotoObservable: Observable<Array<MotoBoy>>;\r\n  private allMotoSubject: Subject<Array<MotoBoy>> = new Subject<Array<MotoBoy>>();\r\n\r\n  public singleMotoObservable: Observable<MotoBoy>;\r\n  private singleMotoSubject: Subject<MotoBoy> = new Subject<MotoBoy>();\r\n\r\n  public addressUpdated : Observable<any>;\r\n  public addressSubject: Subject<any>;\r\n\r\n\r\n\r\n  constructor(private http: HttpClient, public snackBar: MatSnackBar) {\r\n    this.singleMotoObservable = this.singleMotoSubject.asObservable();\r\n    this.allMotoObservable = this.allMotoSubject.asObservable();\r\n    this.getAllMoto();\r\n    this.addressSubject = new Subject<any>();\r\n    this.addressUpdated = this.addressSubject.asObservable();\r\n  }\r\n\r\n  getAllMoto() {\r\n    this.http.get<Array<MotoBoy>>('motoboysApi/').subscribe(data => {\r\n      this.motoBoys = data\r\n      this.allMotoSubject.next(this.motoBoys)\r\n      \r\n     })\r\n\r\n  }\r\n\r\n  getMoto(id) {\r\n    this.http.get<MotoBoy>('motoboysApi/' + id).subscribe(data => {\r\n      this.currentMotoBoy = data[0];\r\n      this.singleMotoSubject.next(data[0])\r\n      console.log(this.currentMotoBoy)\r\n\r\n    })\r\n  }\r\n\r\n  shareLiveLocation(id) {\r\n    // this.singleMotoObservable.subscribe(() => {\r\n    //   setInterval(this.getMotoCurrentLocation(), 5000);\r\n    // })\r\n    this.getMoto(id);\r\n  }\r\n\r\n\r\n\r\n  updateMotoBoy(currentMotoBoy) {\r\n    let id = currentMotoBoy.motoboyId\r\n    this.http.put<MotoBoy>('motoboysApi/update/' + id, { motoboy: currentMotoBoy }).subscribe((data) => {\r\n      //update motoboys array\r\n      this.currentMotoBoy = data;\r\n      this.singleMotoSubject.next(data);\r\n\r\n    })\r\n  }\r\n\r\n  unActivatMotoboy(currentMotoBoy) {\r\n    currentMotoBoy.active = false;\r\n    this.updateMotoBoy(currentMotoBoy);\r\n  }\r\n\r\n  getMotoCurrentLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        this.currentMotoBoy.latitude = position.coords.latitude;\r\n        this.currentMotoBoy.longitude = position.coords.longitude;\r\n        this.currentMotoBoy.position = {\r\n          type: 'Point',\r\n          coordinates: [this.currentMotoBoy.longitude, this.currentMotoBoy.latitude]\r\n        }\r\n        this.reverseAddress(this.currentMotoBoy.latitude, this.currentMotoBoy.longitude);\r\n        this.updateMotoBoy(this.currentMotoBoy)\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  reverseAddress(lat, lng){\r\n   \r\n    var geocoder: google.maps.Geocoder = new google.maps.Geocoder; \r\n    var latlng = {lat: lat , lng: lng};\r\n    geocoder.geocode({\"location\": latlng }, (results, status) => {\r\n        console.log(results)\r\n        if(results.length>0)\r\n          this.localAddress = results[0].formatted_address\r\n        else\r\n          this.localAddress = \"\"\r\n        console.log(this.localAddress)\r\n        this.addressSubject.next({localAddress: this.localAddress, lat: lat, lng: lng})\r\n        \r\n     \r\n    \r\n      });\r\n  }\r\n\r\n  addMotoBoy(motoboy) {\r\n    console.log(\"inside Add\")\r\n    let photo = motoboy.photo;\r\n    motoboy.photo = \" \";\r\n    this.http.post<MotoBoy>('motoboysApi/add', motoboy).subscribe((data) => {\r\n      //update motoboys array?\r\n      this.currentMotoBoy = data;\r\n      this.currentMotoBoy.userName = motoboy.userName;\r\n      this.currentMotoBoy.password = motoboy.password\r\n      this.uploadPhoto(photo)\r\n      this.snackBar.open(\"Sigup Succesful\", \" \", {\r\n        duration: 2000,\r\n      });\r\n      this.singleMotoSubject.next(data)\r\n    })\r\n  }\r\n\r\n\r\n  getClosesMoto(lat, lng) {\r\n    let count = 0;\r\n    for ( let i=0 ; i < this.motoBoys.length; i++){\r\n      let distance = this.getDistanceFromLatLonInKm(lat,lng,this.motoBoys[i].latitude,this.motoBoys[i].longitude)\r\n      if (distance <= 1){ \r\n      //send SMS to deliveries \r\n      }\r\n    }\r\n    \r\n\r\n    // //this.http.get<Array<MotoBoy>>('motoboysApi/getClosesMoto/' + lat + '/' + lng).subscribe(data => {\r\n    //  // send SMS to deliveries in data if dat.length > 0\r\n    //   console.log(data)\r\n             \r\n    // })\r\n  }\r\n\r\n  // Fucntions to Calculate a distance between 2 points =====>\r\n\r\n  getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {\r\n    var R = 6371; // Radius of the earth in km\r\n    var dLat = this.deg2rad(lat2-lat1);  // deg2rad below\r\n    var dLon = this.deg2rad(lon2-lon1); \r\n    var a = \r\n      Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n      Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * \r\n      Math.sin(dLon/2) * Math.sin(dLon/2)\r\n      ; \r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    var d = R * c; // Distance in km\r\n    return d;\r\n  }\r\n  \r\n deg2rad(deg) {\r\n    return deg * (Math.PI/180)\r\n  }\r\n\r\n/// ================>\r\n\r\n  uploadPhoto(photoFile) {\r\n    \r\n    let photoFileName = this.currentMotoBoy.motoboyId + '.png'\r\n    this.formData.append(\"uploads\", photoFile, photoFileName);\r\n    this.http.post('uploadPhoto', this.formData).subscribe((data) => {\r\n      //update motoboys array?\r\n      //this.currentMotoBoy = data;\r\n    })\r\n    \r\n  }\r\n}\r\n","module.exports = \"#msg {\\r\\n    color: orangered;\\r\\n  }\"","module.exports = \"<p id=\\\"msg\\\">\\r\\n  SignUp Successful !!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-msgsnack',\r\n  templateUrl: './msgsnack.component.html',\r\n  styleUrls: ['./msgsnack.component.css']\r\n})\r\nexport class MsgsnackComponent implements OnInit {\r\n\r\n  constructor(public snackBar: MatSnackBar) { }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.openFromComponent(MsgsnackComponent, {\r\n      duration: 500,\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".main{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n  }\\r\\n  \\r\\n  .row{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n  }\\r\\n  \\r\\n  .client-container {\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      width: 40%;\\r\\n      padding-top: 2%;\\r\\n      padding-bottom: 2%;\\r\\n    }\\r\\n  \\r\\n  .client-container > * {\\r\\n      width: 90%;\\r\\n    }\\r\\n  \\r\\n  span {\\r\\n    color: #5f7a7a;\\r\\n      text-align: left;\\r\\n      padding-top: 1%;\\r\\n      padding-bottom: 1%;\\r\\n    }\\r\\n  \\r\\n  .btn {\\r\\n    margin-top: 2%;\\r\\n  }\\r\\n  \\r\\n  .space1{\\r\\n    width:30%;\\r\\n    }\\r\\n  \\r\\n  .space{\\r\\n      width:15%;\\r\\n    }\\r\\n  \\r\\n  h1{\\r\\n      text-align: center;\\r\\n      color: #3f51b5;;\\r\\n  }\\r\\n  \\r\\n  .btn{\\r\\n    width: 90%;\\r\\n  }\\r\\n  \\r\\n  SubmitRow{\\r\\n    width: 90%;\\r\\n  }\\r\\n  \\r\\n  .row{\\r\\n    width: 100%;\\r\\n  }\"","module.exports = \"<div class=\\\"main\\\">\\r\\n  <div class=\\\"space1\\\"></div>\\r\\n\\r\\n  <div class=\\\"client-container\\\">\\r\\n    <h1>Register as a New customer</h1>\\r\\n\\r\\n    <mat-card>\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"space\\\"></div>\\r\\n        <mat-form-field>\\r\\n          <input matInput [(ngModel)]=newClient.userName placeholder=\\\"User Name\\\">\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"space\\\"></div>\\r\\n        <mat-form-field>\\r\\n          <input matInput [(ngModel)]=newClient.firstName placeholder=\\\"First Name\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"space\\\"></div>\\r\\n        <mat-form-field>\\r\\n          <input matInput [(ngModel)]=newClient.lastName placeholder=\\\"Last Name\\\">\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"space\\\"></div>\\r\\n        <mat-form-field>\\r\\n          <input matInput [(ngModel)]=newClient.email placeholder=\\\"Email\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"space\\\"></div>\\r\\n        <mat-form-field>\\r\\n          <input matInput [(ngModel)]=newClient.phoneNumber placeholder=\\\"Phone Number\\\">\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"space\\\"></div>\\r\\n        <mat-form-field>\\r\\n          <input matInput [(ngModel)]=newClient.address placeholder=\\\"Address\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"space\\\"></div>\\r\\n        <mat-form-field>\\r\\n          <input matInput [(ngModel)]=password placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n          <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"space\\\"></div>\\r\\n        <mat-form-field>\\r\\n          <input matInput [(ngModel)]=newClient.password placeholder=\\\"Confirm your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n          <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"SubmitRow\\\">\\r\\n          <div class=\\\"space\\\"></div>\\r\\n      <button class=\\\"btn\\\" (click)='submitNewClient()' mat-raised-button color=\\\"accent\\\">Submit</button>\\r\\n      </div>\\r\\n\\r\\n  </mat-card>\\r\\n</div>\\r\\n\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Customer } from '../customer';\r\nimport { CustomerService } from '../customer.service';\r\nimport {User} from '../user'\r\nimport {UsersService} from '../users.service'\r\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material';\r\nimport { AuthService } from '../auth.service';\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-newclient',\r\n  templateUrl: './newclient.component.html',\r\n  styleUrls: ['./newclient.component.css']\r\n})\r\nexport class NewclientComponent implements OnInit {\r\n  user : User = new User();\r\n  newClient: Customer = new Customer();\r\n  hide = true;\r\n \r\n  userName: string = '';\r\n  password: string = '';\r\n  categoryValue: number;\r\n  customer: Customer;\r\n\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n  \r\n\r\n  matcher = new MyErrorStateMatcher();\r\n  constructor(private customerService: CustomerService, private userService: UsersService, private authService: AuthService) { }\r\n\r\n  submitNewClient(){\r\n    console.log(\"kkkgfgfgdfgfd\" + this.newClient);\r\n\r\n    if ( this.password == this.newClient.password ){\r\n      this.customerService.addNewClient(this.newClient)\r\n      //this.userService.addNewClient(this.user);\r\n     this.customerService.singleCustomerObservable.subscribe( user =>{\r\n      \r\n      this.authService.login({username: user.userName, password: user.password})\r\n     })\r\n    }\r\n    else{\r\n    alert('password  does not match');\r\n    }\r\n   \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2> Thanks for your Order </h2>\\r\\n<p>  The system is processing it and very soon will receive your confirmation</p>\\r\\n\\r\\n\\r\\n<p>You can track the order status on    <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/table\\\" (click)='this.dialogRef.close()' >My orders</button> </p>\\r\\n<p> You will receive an SMS when a Motoboy will be on his way to  pick up</p>\\r\\n<button routerLink='/' (click)='this.dialogRef.close()'> Close </button> \"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-order-dialog',\r\n  templateUrl: './order-dialog.component.html',\r\n  styleUrls: ['./order-dialog.component.css']\r\n})\r\nexport class OrderDialogComponent {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<OrderDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","module.exports = \"\\r\\n.example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  display: block; \\r\\n  width: 500px;  \\r\\n  font:  bold 18px 'Roboto', serif;\\r\\n}\\r\\n\\r\\nspan{\\r\\n \\r\\n    font: 15px 'Roboto', serif;\\r\\n}\"","module.exports = \"<div class=\\\"main\\\">\\r\\n    <mat-dialog-content class=\\\"w3-theme-l1 example-container\\\">\\r\\n            \\r\\n        <mat-card>\\r\\n            <mat-card-header>\\r\\n                <h2 id=\\\"container\\\" style=\\\"color: indigo\\\">Order no: {{order.orderId}}</h2>\\r\\n            </mat-card-header>\\r\\n\\r\\n            <mat-card-content>\\r\\n                <label>Order date:\\r\\n                    <span> {{order.orderDate}}</span>\\r\\n                </label>\\r\\n\\r\\n                <label>Customer:\\r\\n                    <span> {{order.customer.firstName}} {{order.customer.lastName}}</span>\\r\\n                </label>\\r\\n\\r\\n                <label *ngIf=\\\"order.motoboyId\\\">First name motoboy:\\r\\n                    <span> {{order.motoboy.firstName}}</span>\\r\\n                </label>\\r\\n\\r\\n                <label>Destination Address:\\r\\n                    <span> {{order.destAddress}}</span>\\r\\n                </label>\\r\\n\\r\\n                <label>Description:\\r\\n                    <span> {{order.description}}</span>\\r\\n                </label>\\r\\n\\r\\n                <label>Price:\\r\\n                    <span> {{order.price}}₪</span>\\r\\n                </label>\\r\\n\\r\\n\\r\\n            </mat-card-content>\\r\\n\\r\\n            <mat-card-actions>\\r\\n                <button *ngIf=\\\"order.motoboyId && currentUser.motoboyId\\\" (click)=\\\"handleChangeStatus(3)\\\">pickedup order</button>\\r\\n                <button *ngIf=\\\"order.motoboyId && currentUser.motoboyId\\\" (click)=\\\"handleChangeStatus(4)\\\">order deliverd</button>\\r\\n\\r\\n            </mat-card-actions>\\r\\n        </mat-card>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <!--<mat-card-content *ngIf=\\\"order.orderDate != null\\\"> -->\\r\\n        <!-- <label>Order date: </label>\\r\\n        <span>{{order.orderDate}}</span> -->\\r\\n        <!--</mat-card-content> -->\\r\\n        <!-- <label>First name customer: </label>\\r\\n        <mat-card-content>\\r\\n            <span>{{order.customer.firstName}} {{order.customer.lastName}}</span>\\r\\n        </mat-card-content>\\r\\n        <mat-card-content>\\r\\n            <label>First name motoboy: </label>\\r\\n            <span *ngIf=\\\"order.motoboyId\\\">{{order.motoboy.firstName}}</span>\\r\\n        </mat-card-content>\\r\\n\\r\\n        <mat-card-content>\\r\\n            <label>Destination Address:</label>\\r\\n            <span> {{order.destAddress}}</span>\\r\\n        </mat-card-content>\\r\\n        <mat-card-content>\\r\\n            <label>Description:</label>\\r\\n            <span> {{order.description}}</span>\\r\\n        </mat-card-content>\\r\\n        <mat-card-content>\\r\\n            <label>Price</label>\\r\\n            <span> {{order.price}}</span>\\r\\n        </mat-card-content>\\r\\n\\r\\n        <button *ngIf=\\\"order.motoboyId && currentUser.motoboyId\\\" (click)=\\\"handleChangeStatus(3)\\\">pickedup order</button>\\r\\n        <button *ngIf=\\\"order.motoboyId && currentUser.motoboyId\\\" (click)=\\\"handleChangeStatus(4)\\\">order deliverd</button> -->\\r\\n\\r\\n    </mat-dialog-content>\\r\\n    <app-stepper [order]=\\\"order\\\" [userType]=\\\"userType\\\"></app-stepper>\\r\\n    <mat-dialog-actions>\\r\\n        <button mat-raised-button class=\\\"w3-theme\\\" (click)=\\\"close()\\\">Close</button>\\r\\n    </mat-dialog-actions>\\r\\n\\r\\n</div>\"","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport { Order } from '../Order';\r\nimport { OrdersService} from '../orders.service';\r\nimport { AuthService } from '../auth.service';\r\n\r\nexport interface DialogData {\r\n  orderId: number;\r\n  customerId: number;\r\n  motoboyId: number;\r\n  orderDate: Date;\r\n  localAddress: string;\r\n  latitudeOriginAddress: number;\r\n  longitudeOriginAddress: number;\r\n  destAddress:string;\r\n  latitudeDestAddress:number;\r\n  longitudeDestAddress: number;\r\n  price: number;\r\n  collectDate: Date;\r\n  deliveryDate: Date;\r\n  contactDestination: string;\r\n  phoneDestination:string;\r\n  phoneNumber: string;\r\n  deliveryType: string;\r\n  status: string;\r\n  active: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-order-screen',\r\n  templateUrl: './order-screen.component.html',\r\n  styleUrls: ['./order-screen.component.css']\r\n})\r\nexport class OrderScreenComponent implements OnInit {\r\n  //@Output() closeOrder : EventEmitter<any> = new EventEmitter();\r\n  currentUser;\r\n  userType: string;\r\n  showButton : boolean = true;\r\n  order = new Order();\r\n  constructor(private authService: AuthService, private ordersService: OrdersService, public dialogRef: MatDialogRef<OrderScreenComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    console.log(data);\r\n    this.order = data;\r\n  }\r\n\r\n  \r\n   \r\n\r\n  ngOnInit() {\r\n    if (this.order.orderId > 0){\r\n      this.showButton = false;\r\n    }\r\n      this.currentUser = this.authService.currentUser;\r\n      this.userType = this.authService.userType;\r\n      this.authService.authUpdated.subscribe((user)=>{\r\n        this.currentUser = user;\r\n        console.log(this.currentUser)\r\n        this.userType = this.authService.userType;\r\n        console.log(this.userType )\r\n      })\r\n    \r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  handleChangeStatus(newStatus) {\r\n    this.ordersService.updateStatus(this.order, newStatus, this.currentUser);\r\n    // if (newStatus == 4) {\r\n    //   setTimeout(function(){ this.dialogRef.close(); }, 3000);\r\n    // }\r\n  }\r\n\r\n}\r\n","module.exports = \".order-card {\\r\\n\\r\\n    max-width: 600px;\\r\\n    color: #E3C298;\\r\\n    margin-top: 20px;\\r\\n    margin-left: 450px;\\r\\n    \\r\\n  }\\r\\n\\r\\n  .field{\\r\\n    color: rgb(145, 11, 223)\\r\\n  }\\r\\n\\r\\n  p {\\r\\n    font-size: 18px;\\r\\n  }\\r\\n\\r\\n  \"","module.exports = \"<mat-card class=\\\"order-card\\\">\\r\\n  <mat-card-header>\\r\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n    <mat-card-title><h1>Order Delivered Confirmation</h1></mat-card-title>\\r\\n    \\r\\n  </mat-card-header>\\r\\n  \\r\\n  <mat-card-content>\\r\\n    <p>  Customer: <span class=\\\"field\\\"> {{ order.customer.firstName}} {{ order.customer.lastName}} </span></p>\\r\\n    <p>  From: <span class=\\\"field\\\"> {{order.localAddress }} </span> </p> \\r\\n    <p>  To:  <span class=\\\"field\\\">{{order.contactDestination}} </span></p> \\r\\n    <p>  Dest Address: <span class=\\\"field\\\">  {{order.destAddress}} </span></p>\\r\\n    <p>  Date:<span class=\\\"field\\\"> {{order.dateDelivery}} </span></p>\\r\\n    <p>  Date Received: <span class=\\\"field\\\"> {{order.deliveryDate}} </span></p> \\r\\n\\r\\n\\r\\n    \\r\\n\\r\\n    <app-signature [order]=\\\"order\\\"></app-signature>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <button class=\\\"btn\\\" (click)='confirmDelivered(order)'  mat-raised-button color=\\\"primary\\\">Confirm</button>\\r\\n    \\r\\n  </mat-card-actions>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { OrdersService } from '../orders.service';\r\nimport { Order } from '../Order';\r\n\r\n@Component({\r\n  selector: 'app-orderdelivered',\r\n  templateUrl: './orderdelivered.component.html',\r\n  styleUrls: ['./orderdelivered.component.css']\r\n})\r\nexport class OrderdeliveredComponent implements OnInit {\r\n  @Input() order: any;\r\n\r\n  // order : Order;\r\n  // localAddress : string = \" Hayesod 4\"\r\n  deliveryDate = new Date()\r\n\r\n  constructor(private ordersService: OrdersService) {\r\n    \r\n   }\r\n\r\n  viewFormConfirmation( order: Order){\r\n    \r\n    this.order.deliveryDate = new Date();\r\n\r\n  }\r\n  confirmDelivered(order){\r\n    console.log(order)\r\n    order.statusId = 5;\r\n    this.ordersService.confirmEmail(order)\r\n\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(\"========= inside orderdelivered ==============\")\r\n    console.log(this.order)\r\n    console.log(this.order.customer.firstName)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Order } from './Order';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersService {\r\n  formData: any = new FormData();\r\n  allOrders: Array<Order> = [];\r\n  allOrdersSubject: Subject<Order[]> = new Subject<Order[]>();\r\n  allOrdersObservable: Observable<Order[]>;\r\n\r\n  constructor(private http: HttpClient, public snackBar: MatSnackBar, private router: Router) {\r\n    this.allOrdersObservable = this.allOrdersSubject.asObservable();\r\n    this.getAllOrders()\r\n   }\r\n\r\n   private OrdersServiceUrl = '/ordersApi'\r\n\r\n   getAllOrders(): void {\r\n    this.http.get<Order[]>(this.OrdersServiceUrl).subscribe((orders) => {\r\n      this.allOrders = orders;\r\n      console.log(orders)\r\n      this.allOrdersSubject.next(this.allOrders)\r\n    })\r\n  }\r\n  \r\n  findOrder(order_id) {  \r\n    return this.allOrders.find( order => order.orderId == order_id )\r\n  }\r\n  \r\n  addNewOrder(order){\r\n    console.log(\"inside Add\")\r\n    this.http.post<any>('ordersApi/add',order).subscribe((data) => {\r\n      console.log(data)\r\n      this.allOrders.push(data);\r\n      this.allOrdersSubject.next(this.allOrders)\r\n      //this.getAllOrders();\r\n    })\r\n  }\r\n  // addNewOrder(newOrder: Order): void{\r\n  //   this.http.post<Order>(this.OrdersServiceUrl+'/add',{order: newOrder}).subscribe(() => {\r\n  //    this.allOrders.push(newOrder);\r\n  //   })\r\n  // }\r\n\r\n  \r\n\r\n  getOrderById(id: number): void{\r\n    this.http.get<Order>(this.OrdersServiceUrl + `/${id}`).subscribe((order) => {\r\n      // this.selectedOrder = order;\r\n      // this.selectedOrderSubject.next(order)\r\n    });\r\n  }\r\n\r\n  updateOrder(data, id) {\r\n    console.log(id)\r\n    this.http.put<any>(`ordersApi/update/${id}`, data).subscribe(( data) => {\r\n      \r\n      console.log(\"order was updated\"+ id)\r\n      this.allOrders = data\r\n      this.allOrdersSubject.next(this.allOrders)\r\n      //this.getAllOrders();\r\n    })\r\n  }\r\n\r\n  sendSmsToCustomer(order: Order){\r\n\r\n    console.log(\"Send SMS ...\")\r\n    //  this.http.post('/send', {\r\n    //   from: 'Acme Inc',\r\n    //   to: order.phoneDestination,\r\n    //   text: 'motoBoy on the way!'\r\n    // }).subscribe((data) => {\r\n    //   console.log(data)\r\n    // })\r\n  }\r\n\r\n  updateStatus(order,newStatus, motoBoy) {\r\n      order.motoboyId = motoBoy.motoboyId;\r\n      order.statusId = newStatus;\r\n      console.log(newStatus)\r\n      this.updateOrder(order,order.orderId)\r\n      if(newStatus===2){\r\n        console.log(\"sending SMS .....\")\r\n        //this.sendSmsToCustomer(order)\r\n      }\r\n    \r\n    \r\n  }\r\n  \r\n  cancelAssignToOrder(order) {\r\n    order.motoboy = null;\r\n    order.status = 1;\r\n    //Needs to be define \r\n    //sendNotificationToclient(order){}\r\n  }\r\n\r\n  confirmEmail(order) {\r\n    console.log(\"send email ........\")\r\n    //this.updateOrder(order, order.orderId)\r\n    this.http.post('/sendEmail', order).subscribe((data) => {\r\n      \r\n    //this.http.post('uploadSign', this.formData).subscribe((data) => {\r\n      //update motoboys array?\r\n      //this.currentMotoBoy = data;\r\n    })\r\n    this.snackBar.open(\"Email Sent to the client\", \" \", {\r\n      duration: 3000,\r\n    });\r\n    this.router.navigate([''])\r\n\r\n  // uploadSignature(signFile) {\r\n  //   console.log(signFile)\r\n  //   let sendFile = {sign: signFile }\r\n  //   let orderId = 1\r\n  //   let signFileName = orderId + 'sign.png'\r\n  //   this.formData.append(\"uploads\", signFile, signFileName);\r\n  //   this.http.post('/sendEmail', sendFile).subscribe((data) => {\r\n  //   //this.http.post('uploadSign', this.formData).subscribe((data) => {\r\n  //     //update motoboys array?\r\n  //     //this.currentMotoBoy = data;\r\n  //   })\r\n        \r\n  }\r\n}","module.exports = \"*{\\r\\n  background-color: #3f51b5;\\r\\n}\\r\\n\\r\\np{\\r\\n    color: #3f51b5;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\nstrong{\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.motoboy-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  margin: auto;\\r\\n  width: 25%;\\r\\n  /* border: 3px solid rgb(89, 0, 255); */\\r\\n  padding: 30px;\\r\\n  padding-top: 30px;\\r\\n  background-color: #3f51b5;\\r\\n}\\r\\n\\r\\n.motoboy-container > * {\\r\\n  width: 90%;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.img-container{\\r\\n  padding-top: 10px;\\r\\n  width: 15%; \\r\\n}\\r\\n\\r\\nimg{\\r\\n  width: 100%;\\r\\n  border-radius: 50%;\\r\\n}\\r\\n\\r\\n.motoDeatils{\\r\\ndisplay: flex;\\r\\nflex-direction: column;\\r\\nbackground-color: #3f51b5;\\r\\n}\\r\\n\\r\\nspan {\\r\\ncolor: #5f7a7a;\\r\\n  text-align: left;\\r\\n  padding-top: 1%;\\r\\n  padding-bottom: 1%;\\r\\n}\\r\\n\\r\\n.btn {\\r\\nmargin-top: 2%;\\r\\n}\\r\\n\\r\\n.card{\\r\\ndisplay: flex;\\r\\nflex-direction: row;\\r\\nbackground-color: white;\\r\\n}\\r\\n\\r\\n.edit{\\r\\npadding-top: 5px;\\r\\nbackground-color: #3f51b5;\\r\\n}\\r\\n\\r\\n.space{\\r\\nwidth:30%;\\r\\n}\\r\\n\\r\\nh1{\\r\\n  text-align: center;\\r\\n  color: #3f51b5;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.customer-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  margin: auto;\\r\\n  width: 25%;\\r\\n  /* border: 3px solid rgb(89, 0, 255); */\\r\\n  padding: 30px;\\r\\n  padding-top: 30px;\\r\\n  background-color: #3f51b5;\\r\\n}\\r\\n\\r\\n.customer-container > * {\\r\\n  width: 90%;\\r\\n  background-color: white;\\r\\n}\"","module.exports = \"\\r\\n<h1>My Profile</h1> \\r\\n<div  *ngIf=\\\"userType === 'motoboy'\\\" class=\\\"card\\\" >  \\r\\n    <div class = \\\"space\\\"></div>\\r\\n  <div  class=\\\"img-container\\\">\\r\\n        <div calss=\\\"pic\\\">\\r\\n              <img src='assets/uploads/{{currentUser.motoboyId}}.png'>\\r\\n        </div>  \\r\\n  </div>\\r\\n  <div class=\\\"motoboy-container\\\" >\\r\\n      <mat-card >\\r\\n          <strong>First Name:</strong><b><p>{{currentUser.firstName}}</p></b>\\r\\n          <strong>Last Name:</strong><b><p>{{currentUser.lastName}}</p></b>\\r\\n          <strong>Email:</strong><b><p>{{currentUser.email}}</p></b>\\r\\n          <strong>PhoneNumber:</strong><b><p>{{currentUser.phoneNumber}}</p></b>\\r\\n               \\r\\n      </mat-card>\\r\\n  </div>\\r\\n  <div class = \\\"space\\\"></div>\\r\\n</div>\\r\\n\\r\\n<div  *ngIf=\\\"userType === 'customer'\\\" class=\\\"card\\\">  \\r\\n    <div class = \\\"space\\\"></div>\\r\\n  <div  class=\\\"img-container\\\" >\\r\\n  </div>\\r\\n  <div class=\\\"customer-container\\\" >\\r\\n      <mat-card >\\r\\n          <strong>First Name:</strong><b><p>{{currentUser.firstName}}</p></b>\\r\\n          <strong>Last Name:</strong><b><p>{{currentUser.lastName}}</p></b>\\r\\n          <strong>Email:</strong><b><p>{{currentUser.email}}</p></b>\\r\\n          <strong>PhoneNumber:</strong><b><p>{{currentUser.phoneNumber}}</p></b>\\r\\n          <strong>Address:</strong><b><p>{{currentUser.Address}}</p></b>\\r\\n                \\r\\n      </mat-card>\\r\\n  </div>\\r\\n  <div class = \\\"space\\\"></div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { UsersService } from '../users.service';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\ncurrentUser;\r\nuserType;\r\nststusId :number=5 ; \r\n\r\n  constructor( private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.authService.currentUser;\r\n    this.userType = this.authService.userType;\r\n    this.authService.authUpdated.subscribe((user)=>{\r\n      this.currentUser = user;\r\n      console.log(this.currentUser)\r\n      this.userType = this.authService.userType;\r\n      console.log(this.userType )\r\n    })\r\n  }\r\n}\r\n","module.exports = \".pad {\\r\\n    border: 1px solid orange;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<div class=\\\"pad\\\">\\r\\n<signature-pad [options]=\\\"signaturePadOptions\\\" (onBeginEvent)=\\\"drawStart()\\\">\\r\\n\\r\\n</signature-pad>\\r\\n<br>\\r\\n<button class=\\\"btn\\\" (click)='drawComplete()'  mat-raised-button color=\\\"primary\\\">Confim Sign</button>\\r\\n<button class=\\\"btn\\\" (click)='this.signaturePad.clear()'  mat-raised-button color=\\\"accent\\\">Clear</button>\\r\\n\\r\\n</div>\"","import { Component, ViewChild, Input } from '@angular/core';\r\nimport { SignaturePad } from 'angular2-signaturepad/signature-pad';\r\nimport { OrdersService } from '../orders.service';\r\nimport { Order } from '../Order';\r\n \r\n\r\n@Component({\r\n  selector: 'app-signature',\r\n  templateUrl: './signature.component.html',\r\n  styleUrls: ['./signature.component.css']\r\n})\r\nexport class SignatureComponent  {\r\n  @Input() order: Order\r\n  @ViewChild(SignaturePad) signaturePad: SignaturePad;\r\n \r\n  private signaturePadOptions: Object = { // passed through to szimek/signature_pad constructor\r\n    'minWidth': 3,\r\n    'canvasWidth': 400,\r\n    'canvasHeight': 200\r\n  };\r\n  \r\n  constructor(private ordersServices : OrdersService) { }\r\n \r\n  ngAfterViewInit() {\r\n    // this.signaturePad is now available\r\n    this.signaturePad.set('minWidth', 3); // set szimek/signature_pad options at runtime\r\n    this.signaturePad.clear(); // invoke functions from szimek/signature_pad API\r\n  }\r\n \r\n  drawComplete() {\r\n    // will be notified of szimek/signature_pad's onEnd event\r\n    console.log(this.signaturePad.toDataURL());\r\n    this.order.signature = this.signaturePad.toDataURL()\r\n    \r\n    //this.ordersServices.uploadSignature(image)\r\n  }\r\n \r\n  drawStart() {\r\n    // will be notified of szimek/signature_pad's onBegin event\r\n    console.log('begin drawing');\r\n  }\r\n\r\n\r\n\r\n  \r\n      \r\n}\r\n","module.exports = \".mat-radio-button ~ .mat-radio-button {\\r\\n    padding-right: 16px;\\r\\n  }\\r\\n\\r\\n  .rate {\\r\\n    border: 1px solid #cccccc;\\r\\n    float: left;\\r\\n    height: 46px;\\r\\n    padding: 0 10px;\\r\\n  }\\r\\n\\r\\n  .rate:not(:checked) > input {\\r\\n    position: absolute;\\r\\n    top: -9999px;\\r\\n  }\\r\\n\\r\\n  .rate:not(:checked) > label {\\r\\n    float: right;\\r\\n    width: 1em;\\r\\n    overflow: hidden;\\r\\n    white-space: nowrap;\\r\\n    cursor: pointer;\\r\\n    font-size: 30px;\\r\\n    color: #ccc;\\r\\n  }\\r\\n\\r\\n  .rate:not(:checked) > label:before { content: '★ '; }\\r\\n\\r\\n  .rate > input:checked ~ label { color: #ffc700; }\\r\\n\\r\\n  .rate:not(:checked) > label:hover, .rate:not(:checked) > label:hover ~ label { color: #deb217; }\\r\\n\\r\\n  .rate > input:checked + label:hover, .rate > input:checked + label:hover ~ label, .rate > input:checked ~ label:hover, .rate > input:checked ~ label:hover ~ label, .rate > label:hover ~ input:checked ~ label { color: #c59b08; }\"","module.exports = \"<mat-card>\\r\\n    <mat-radio-group>\\r\\n        <mat-radio-button value=\\\"1\\\"> <mat-icon>sentiment_very_satisfied</mat-icon></mat-radio-button>\\r\\n        <mat-radio-button value=\\\"2\\\"><mat-icon>insert_emoticon</mat-icon></mat-radio-button>\\r\\n        <mat-radio-button value=\\\"3\\\"><mat-icon>sentiment_satisfied_alt</mat-icon></mat-radio-button>\\r\\n        <mat-radio-button value=\\\"4\\\"><mat-icon>sentiment_dissatisfied</mat-icon></mat-radio-button>\\r\\n        <mat-radio-button value=\\\"5\\\"><mat-icon>sentiment_very_dissatisfied</mat-icon></mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n</mat-card>\\r\\n<app-stepper></app-stepper>\\r\\n\\r\\n<div class=\\\"rate\\\">\\r\\n        <input type=\\\"radio\\\" id=\\\"star5\\\" name=\\\"rate\\\" value=\\\"5\\\" />\\r\\n        <label for=\\\"star5\\\" title=\\\"text\\\">5 stars</label>\\r\\n        <input type=\\\"radio\\\" id=\\\"star4\\\" name=\\\"rate\\\" value=\\\"4\\\" />\\r\\n        <label for=\\\"star4\\\" title=\\\"text\\\">4 stars</label>\\r\\n        <input type=\\\"radio\\\" id=\\\"star3\\\" name=\\\"rate\\\" value=\\\"3\\\" />\\r\\n        <label for=\\\"star3\\\" title=\\\"text\\\">3 stars</label>\\r\\n        <input type=\\\"radio\\\" id=\\\"star2\\\" name=\\\"rate\\\" value=\\\"2\\\" />\\r\\n        <label for=\\\"star2\\\" title=\\\"text\\\">2 stars</label>\\r\\n        <input type=\\\"radio\\\" id=\\\"star1\\\" name=\\\"rate\\\" value=\\\"1\\\" />\\r\\n        <label for=\\\"star1\\\" title=\\\"text\\\">1 star</label>\\r\\n      </div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-stars',\r\n  templateUrl: './stars.component.html',\r\n  styleUrls: ['./stars.component.css']\r\n})\r\nexport class StarsComponent implements OnInit {\r\n\r\n  edditing = false ;\r\n  rate ;\r\n\r\n  constructor() { }\r\n\r\n  \r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"    ol.progtrckr {\\r\\n        margin: 0;\\r\\n        padding: 0;\\r\\n        list-style-type: none;\\r\\n    }\\r\\n\\r\\n    ol.progtrckr li {\\r\\n        display: inline-block;\\r\\n        text-align: center;\\r\\n        line-height: 3em;\\r\\n    }\\r\\n\\r\\n    ol.progtrckr[data-progtrckr-steps=\\\"2\\\"] li { width: 49%; }\\r\\n\\r\\n    ol.progtrckr[data-progtrckr-steps=\\\"3\\\"] li { width: 33%; }\\r\\n\\r\\n    ol.progtrckr[data-progtrckr-steps=\\\"4\\\"] li { width: 24%; }\\r\\n\\r\\n    ol.progtrckr[data-progtrckr-steps=\\\"5\\\"] li { width: 19%; }\\r\\n\\r\\n    ol.progtrckr[data-progtrckr-steps=\\\"6\\\"] li { width: 16%; }\\r\\n\\r\\n    ol.progtrckr[data-progtrckr-steps=\\\"7\\\"] li { width: 14%; }\\r\\n\\r\\n    ol.progtrckr[data-progtrckr-steps=\\\"8\\\"] li { width: 12%; }\\r\\n\\r\\n    ol.progtrckr[data-progtrckr-steps=\\\"9\\\"] li { width: 11%; }\\r\\n\\r\\n    ol.progtrckr li.progtrckr-done {\\r\\n        color: black;\\r\\n        border-bottom: 4px solid yellowgreen;\\r\\n    }\\r\\n\\r\\n    ol.progtrckr li.progtrckr-todo {\\r\\n        color: silver; \\r\\n        border-bottom: 4px solid silver;\\r\\n    }\\r\\n\\r\\n    ol.progtrckr li:after {\\r\\n        content: \\\"\\\\00a0\\\\00a0\\\";\\r\\n    }\\r\\n\\r\\n    ol.progtrckr li:before {\\r\\n        position: relative;\\r\\n        bottom: -2.5em;\\r\\n        float: left;\\r\\n        left: 50%;\\r\\n        line-height: 1em;\\r\\n    }\\r\\n\\r\\n    ol.progtrckr li.progtrckr-done:before {\\r\\n        content: \\\"\\\\2713\\\";\\r\\n        color: white;\\r\\n        background-color: yellowgreen;\\r\\n        height: 1.2em;\\r\\n        width: 1.2em;\\r\\n        line-height: 1.2em;\\r\\n        border: none;\\r\\n        border-radius: 1.2em;\\r\\n    }\\r\\n\\r\\n    ol.progtrckr li.progtrckr-todo:before {\\r\\n        content: \\\"\\\\039F\\\";\\r\\n        color: silver;\\r\\n        background-color: white;\\r\\n        font-size: 1.5em;\\r\\n        bottom: -1.6em;\\r\\n    }\"","module.exports = \"\\r\\n\\r\\n<ol class=\\\"progtrckr\\\" data-progtrckr-steps=\\\"5\\\">\\r\\n<div *ngIf=\\\"order.statusId===1\\\">\\r\\n    <li class=\\\"progtrckr-done\\\">New order</li>\\r\\n    <li class=\\\"progtrckr-todo\\\">wating for pickUp</li>\\r\\n    <li class=\\\"progtrckr-todo\\\">On the way</li>\\r\\n    <li class=\\\"progtrckr-todo\\\">Delivered</li>\\r\\n    <li class=\\\"progtrckr-todo\\\">Closed</li>\\r\\n</div>\\r\\n<div *ngIf=\\\"order.statusId===2\\\">\\r\\n        <li class=\\\"progtrckr-done\\\">New order</li>\\r\\n        <li class=\\\"progtrckr-done\\\">wating for pickUp</li>\\r\\n        <li class=\\\"progtrckr-todo\\\">On the way</li>\\r\\n        <li class=\\\"progtrckr-todo\\\">Delivered</li>\\r\\n        <li class=\\\"progtrckr-todo\\\">Closed</li>\\r\\n</div>\\r\\n<div *ngIf=\\\"order.statusId===3\\\">\\r\\n        <li class=\\\"progtrckr-done\\\">New order</li>\\r\\n        <li class=\\\"progtrckr-done\\\">wating for pickUp</li>\\r\\n        <li class=\\\"progtrckr-done\\\">On the way</li>\\r\\n        <li class=\\\"progtrckr-todo\\\">Delivered</li>\\r\\n        <li class=\\\"progtrckr-todo\\\">Closed</li>\\r\\n</div>\\r\\n<div *ngIf=\\\"order.statusId===4\\\">\\r\\n        <li class=\\\"progtrckr-done\\\">New order</li>\\r\\n        <li class=\\\"progtrckr-done\\\">wating for pickUp</li>\\r\\n        <li class=\\\"progtrckr-done\\\">On the way</li>\\r\\n        <li class=\\\"progtrckr-done\\\">Delivered</li>\\r\\n        <li class=\\\"progtrckr-todo\\\">Closed</li>\\r\\n</div>\\r\\n<div *ngIf=\\\"order.statusId===5\\\">\\r\\n        <li class=\\\"progtrckr-done\\\">New order</li>\\r\\n        <li class=\\\"progtrckr-done\\\">wating for pickUp</li>\\r\\n        <li class=\\\"progtrckr-done\\\">On the way</li>\\r\\n        <li class=\\\"progtrckr-done\\\">Delivered</li>\\r\\n        <li class=\\\"progtrckr-done\\\">Closed</li>\\r\\n</div>\\r\\n </ol>\\r\\n\"","import {Component, OnInit, Input} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport { Order } from '../Order';\r\n\r\n@Component({\r\n  selector: 'app-stepper',\r\n  templateUrl: './stepper.component.html',\r\n  styleUrls: ['./stepper.component.css']\r\n})\r\nexport class StepperComponent implements OnInit { \r\n\r\n  @Input() order: Order = new Order();\r\n  @Input() userType: string;\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n","module.exports = \"\\r\\n.edit-button{\\r\\n    background-color:dodgerblue;\\r\\n    color: white;\\r\\n  }\\r\\n/* \\r\\n  .mat-column-orderId {\\r\\n    flex: 0 0 40px;\\r\\n  }\\r\\n  .mat-column-customerPhone {\\r\\n    flex: 0 0 100px;\\r\\n  }\\r\\n  .mat-column-motoboyName {\\r\\n    flex: 0 0 80px;\\r\\n  }\\r\\n  .mat-column-customerPhone {\\r\\n    flex: 0 0 100px;\\r\\n  }\\r\\n  .mat-column-localAddress {\\r\\n    flex: 0 0 230px;\\r\\n  }\\r\\n  .mat-column-destAddress {\\r\\n    flex: 0 0 230px;\\r\\n  } */\\r\\n.mat-header-cell {\\r\\n    flex: 1;\\r\\n    min-height: 48px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    color : rgb(124, 87, 226);\\r\\n    -webkit-text-decoration-style: wavy ;\\r\\n            text-decoration-style: wavy ;\\r\\n    font-size: 15Px;\\r\\n}\\r\\n.orders-container {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: (1fr)[4];\\r\\n        grid-template-columns: repeat(4, 1fr);\\r\\n    -ms-grid-rows: 100px (auto)[auto-fit];\\r\\n        grid-template-rows: 100px repeat(auto-fit, auto);\\r\\n}\\r\\n.click{\\r\\n  cursor: pointer;\\r\\n}\\r\\n.lock-click{\\r\\n  cursor: context-menu;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"\\r\\n<div *ngIf='!selectedOrder'>\\r\\n \\r\\n\\r\\n  <!-- <mat-form-field>\\r\\n\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n  </mat-form-field> -->\\r\\n  <mat-icon class=\\\"click\\\"(click)=\\\"refresh()\\\">refresh</mat-icon>\\r\\n  <mat-table [dataSource]=\\\"dataSource\\\">\\r\\n    <ng-container matColumnDef=\\\"orderId\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Order Id </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let order\\\"> {{order.orderId}} </mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"customerId\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Customer </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let order\\\">\\r\\n        <div *ngIf=\\\"order.customerId != null\\\">{{order.customer.firstName}} {{order.customer.lastName}}</div>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"customerPhone\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Customer Phone number </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let order\\\">\\r\\n        <div *ngIf=\\\"order.customerId != null\\\">{{order.customer.phone}}</div>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"motoboyName\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Moto Boy </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let order\\\">\\r\\n        <div *ngIf=\\\"order.motoboyId && order.customerId != null\\\">{{order.motoboy.firstName}} {{order.motoboy.lastName}}</div>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"localAddress\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Collecting Address </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let order\\\"> {{order.localAddress}} </mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"destAddress\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Delivery Address </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let order\\\"> {{order.destAddress}} </mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"price\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Price </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let order\\\"> {{order.price}} </mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"orderDate\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Order Time </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let order\\\"> {{order.orderDate}} </mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"active\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Take an Order </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let order\\\">\\r\\n        <mat-icon  class=\\\"click\\\" *ngIf=\\\"order.motoboy === null\\\" (click)=\\\"handleAsignToOrder(order,2)\\\">add_circle</mat-icon>\\r\\n        <mat-icon class=\\\"lock-click\\\" style=\\\"color: burlywood\\\" *ngIf=\\\"order.motoboyId\\\">how_to_reg</mat-icon>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n<!-- \\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let order\\\"> {{order.status.name}} </mat-cell>\\r\\n    </ng-container> -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>>\\r\\n      <mat-cell *matCellDef=\\\"let order\\\">\\r\\n\\r\\n\\r\\n         <span> <mat-icon matTooltip=\\\"Edit Order\\\" class=\\\"click\\\" mat-raised-button (click)=\\\"editOrder(order.orderId)\\\">visibility</mat-icon> </span>\\r\\n         <span *ngIf=\\\"order.statusId == 4\\\">  <mat-icon matTooltip=\\\"Close Order\\\" class=\\\"click\\\" mat-raised-button (click)=\\\"closeOrder(order)\\\">check_circle_outline</mat-icon> </span> \\r\\n      </mat-cell>>\\r\\n    </ng-container>\\r\\n\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n  </mat-table>\\r\\n</div>\\r\\n\\r\\n<app-orderdelivered *ngIf='selectedOrder' [order]=\\\"selectedOrder\\\"></app-orderdelivered>\\r\\n<!-- <div class=\\\"orders-container\\\">\\r\\n  <h3>Your Orders</h3>\\r\\n  <div class=\\\"order\\\" *ngFor=\\\"let order of dataSource.data\\\">\\r\\n    <app-order-card [order]=\\\"order\\\"></app-order-card>\\r\\n  </div>\\r\\n</div> -->\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MatDialogConfig, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Order } from '../Order'\r\nimport { Observable } from 'rxjs';\r\nimport { OrdersService } from '../orders.service'\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport { MotoBoy } from '../MotoBoy';\r\nimport { MotoService } from '../moto.service';\r\nimport { AuthService } from '../auth.service';\r\nimport { Customer } from '../customer';\r\nimport { OrderScreenComponent } from '../order-screen/order-screen.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.css']\r\n})\r\nexport class TableComponent implements OnInit {\r\n  userType;\r\n  order: Order;\r\n  currentUser;\r\n  openOrders:Array<Order> = new Array<Order>();\r\n  orders: Array<Order> = new Array<Order>();\r\n  dataSource = new MatTableDataSource(this.orders);\r\n\r\n  displayedColumns = [];\r\n  selectedOrder: Order ;\r\n  \r\n  constructor(private ordersService: OrdersService, private motoService: MotoService, public dialog: MatDialog, private authService: AuthService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    // this.dataSource.data === this.order used this way to filter\r\n    this.dataSource.data = this.ordersService.allOrders;\r\n    console.log(this.dataSource.data)\r\n    this.ordersService.getAllOrders();\r\n    this.ordersService.allOrdersObservable.subscribe((data) => {\r\n\r\n      this.dataSource.data = data.sort(this.compare);\r\n      console.log(this.dataSource.data)\r\n\r\n      this.currentUser = this.authService.currentUser;\r\n    this.authService.authUpdated.subscribe((user)=>{\r\n      this.currentUser = user\r\n      this.userType = this.authService.userType\r\n    })\r\n  \r\n      this.initColumns();\r\n    })\r\n\r\n    //nees to replace with current user\r\n    \r\n  }\r\n\r\n  handleAsignToOrder(order,newStatus) {\r\n    this.ordersService.updateStatus(order,newStatus, this.currentUser);\r\n  }\r\n\r\n  editOrder(order_id) {\r\n    let order = this.ordersService.findOrder(order_id)\r\n    //let companySelected = this.companyService.findCompany(client.company_id)\r\n    //client.company = companySelected.name;\r\n\r\n    let dialogRef = this.dialog.open(OrderScreenComponent, {\r\n      width: '900px',\r\n      data: order\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  closeOrder(order){\r\n    this.selectedOrder = order;\r\n    console.log(order)\r\n\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    console.log(filterValue)\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n  refresh() {\r\n    this.ordersService.getAllOrders();\r\n  }\r\n\r\n  initColumns() {\r\n    if (this.authService.userType === \"motoboy\") {\r\n      console.log(\"show moto columns\")\r\n\r\n      this.displayedColumns = ['orderId', 'customerId', 'customerPhone', 'localAddress', 'destAddress', 'orderDate','status', 'active', 'actions']\r\n\r\n    } else if (this.authService.userType === \"customer\") {\r\n      console.log(\"show customer columns\")\r\n      this.displayedColumns = ['orderId', 'motoboyName', 'localAddress', 'destAddress', 'orderDate','status', 'actions']\r\n    }\r\n  }\r\n//sort the array by status \r\n  compare(a,b) {\r\n    if (a.statusId < b.statusId)\r\n      return -1;\r\n    if (a.statusId > b.statusId)\r\n      return 1;\r\n    return 0;\r\n  }\r\n  \r\n  \r\n}","module.exports = \".head {\\r\\n    font-family: 'Roboto', serif;\\r\\n    text-align: center;\\r\\n    letter-spacing: 5px;\\r\\n    width: 100%;\\r\\n    flex: row ;\\r\\n}\\r\\n\\r\\n.menu {\\r\\n    padding-left: 30px;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.white-icon {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.space{\\r\\n    width: 10%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"w3-theme\\\" id=\\\"container\\\">\\r\\n        <div class=\\\"space\\\"></div><h5 *ngIf=\\\"currentUser != null\\\"> <mat-icon>account_circle</mat-icon>Welcome <b>{{currentUser.firstName}}</b>, you are connected</h5>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerService } from './../customer.service';\r\nimport { MotoService } from './../moto.service';\r\nimport { Customer } from './../customer';\r\nimport { MotoBoy } from './../MotoBoy';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-user-connected',\r\n  templateUrl: './user-connected.component.html',\r\n  styleUrls: ['./user-connected.component.css']\r\n})\r\nexport class UserConnectedComponent implements OnInit {\r\n\r\n  currentUser;\r\n\r\n  constructor(private authService: AuthService) { \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.authService.currentUser;\r\n    this.authService.authUpdated.subscribe((user)=>{\r\n      this.currentUser = user\r\n   \r\n    })\r\n  }\r\n  }\r\n\r\n","export class User{\r\n   \r\n    id  : number;\r\n    userName :  string;\r\n    password :  string;\r\n    customerId :  number;\r\n    motoboyId :  number;\r\n    token: string;\r\n    constructor() {}\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { MotoService } from './moto.service'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from './user';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { Customer } from './customer';\r\nimport { MotoBoy } from './MotoBoy';\r\nimport { CustomerService } from './customer.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  newUser = new User();\r\n  customers\r\n  currentUser;\r\n\r\n\r\n  public singleUserObservable: Observable<User>;\r\n  private singleUserSubject: Subject<User> = new Subject<User>();\r\n\r\n  constructor(private http: HttpClient, private router: Router, private customerService: CustomerService, private motoService: MotoService) {\r\n    this.singleUserObservable = this.singleUserSubject.asObservable()\r\n  }\r\n\r\n\r\n  // Login(userName, password) {\r\n\r\n  //   this.http.post<User>('/login', { username: userName, password: password }).subscribe((user) => {\r\n  //     if (user.userName === userName) {\r\n  //       console.log('sucsses')\r\n  //       // update current user\r\n  //       this.setCurrentUser(user);\r\n  //       // go back to homepage\r\n  //       // this.router.navigate(['/'])\r\n\r\n  //     } else {\r\n  //       alert('user name or password  is not correct, Please try again')\r\n  //       this.router.navigate(['../../src/error.html'])\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n\r\n  // setCurrentUser(user) {\r\n  //   if(user.motoboyId === null){\r\n  //     this.customerService.singleCustomerObservable.subscribe((customer)=>{\r\n  //       this.currentUser = new Customer();\r\n  //       this.currentUser = customer;\r\n  //       this.singleUserSubject.next(this.currentUser)\r\n  //     })\r\n  //     this.customerService.getCustomer(user.customerId);\r\n     \r\n  //   }else{\r\n  //     this.currentUser = new MotoBoy();\r\n  //     this.motoService.singleMotoObservable.subscribe((motoboy)=>{\r\n  //       this.currentUser = motoboy;\r\n  //       this.singleUserSubject.next(this.currentUser)\r\n  //     });\r\n  //     this.motoService.getMoto(user.motoboyId);\r\n  //   }\r\n  // }\r\n\r\n  getCustomers() {\r\n    this.http.get<User>('usersApi/').subscribe(data => {\r\n      this.customers = data;\r\n    })\r\n  }\r\n\r\n  getCustomer(id) {\r\n    this.http.get<User>('usersApi/' + id).subscribe(data => {\r\n      this.currentUser = data[0];\r\n      this.singleUserSubject.next(data[0])\r\n      console.log(this.currentUser)\r\n      console.log(\"a\")\r\n    })\r\n  }\r\n\r\n  addNewClient(newUser: User) {\r\n    this.http.post<User>('usersApi/add', newUser).subscribe(data => {\r\n      this.currentUser = data[0];\r\n      this.singleUserSubject.next(data[0])\r\n      console.log(newUser)\r\n      console.log(\"a\")\r\n    })\r\n\r\n  }\r\n\r\n  deleteCustomer(currentUser) {\r\n    console.log(\"inside delete\")\r\n    let id = currentUser.customerId\r\n    currentUser.active = false;\r\n    this.http.put<User>('usersApi/delete/' + id, { customer: currentUser }).subscribe((data) => {\r\n      //update motoboys array\r\n      this.currentUser = data;\r\n      this.singleUserSubject.next(data);\r\n\r\n    })\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}